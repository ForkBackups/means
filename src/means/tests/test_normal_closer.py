import unittest
import sympy
from means.approximation.mea.normal_closer import NormalCloser
from means.approximation.ode_problem import Moment
from means.util.sympyhelpers import sympy_expressions_equal
from means.util.sympyhelpers import to_sympy_matrix










class TestNormalCloserMom4(unittest.TestCase):
    __problem_moments = [
            Moment([1, 0, 0], symbol=sympy.Symbol("y_0")),
            Moment([0, 1, 0], symbol=sympy.Symbol("y_1")),
            Moment([0, 0, 1], symbol=sympy.Symbol("y_2")),
            Moment([0, 0, 2], symbol=sympy.Symbol("yx2")),
            Moment([0, 1, 1], symbol=sympy.Symbol("yx3")),
            Moment([0, 2, 0], symbol=sympy.Symbol("yx4")),
            Moment([1, 0, 1], symbol=sympy.Symbol("yx5")),
            Moment([1, 1, 0], symbol=sympy.Symbol("yx6")),
            Moment([2, 0, 0], symbol=sympy.Symbol("yx7")),
            Moment([0, 0, 3], symbol=sympy.Symbol("yx8")),
            Moment([0, 1, 2], symbol=sympy.Symbol("yx9")),
            Moment([0, 2, 1], symbol=sympy.Symbol("yx10")),
            Moment([0, 3, 0], symbol=sympy.Symbol("yx11")),
            Moment([1, 0, 2], symbol=sympy.Symbol("yx12")),
            Moment([1, 1, 1], symbol=sympy.Symbol("yx13")),
            Moment([1, 2, 0], symbol=sympy.Symbol("yx14")),
            Moment([2, 0, 1], symbol=sympy.Symbol("yx15")),
            Moment([2, 1, 0], symbol=sympy.Symbol("yx16")),
            Moment([3, 0, 0], symbol=sympy.Symbol("yx17")),
            Moment([0, 0, 4], symbol=sympy.Symbol("yx18")),
            Moment([0, 1, 3], symbol=sympy.Symbol("yx19")),
            Moment([0, 2, 2], symbol=sympy.Symbol("yx20")),
            Moment([0, 3, 1], symbol=sympy.Symbol("yx21")),
            Moment([0, 4, 0], symbol=sympy.Symbol("yx22")),
            Moment([1, 0, 3], symbol=sympy.Symbol("yx23")),
            Moment([1, 1, 2], symbol=sympy.Symbol("yx24")),
            Moment([1, 2, 1], symbol=sympy.Symbol("yx25")),
            Moment([1, 3, 0], symbol=sympy.Symbol("yx26")),
            Moment([2, 0, 2], symbol=sympy.Symbol("yx27")),
            Moment([2, 1, 1], symbol=sympy.Symbol("yx28")),
            Moment([2, 2, 0], symbol=sympy.Symbol("yx29")),
            Moment([3, 0, 1], symbol=sympy.Symbol("yx30")),
            Moment([3, 1, 0], symbol=sympy.Symbol("yx31")),
            Moment([4, 0, 0], symbol=sympy.Symbol("yx32"))
    ]



    def test_normal_closer_wrapper(self):

        mfk = to_sympy_matrix([
            ["(c_2*c_6*y_2*yx32 - c_2*c_6*yx5*(c_6 + y_0)**3 + c_2*c_6*(c_6 + y_0)**2*(y_2*yx7 + yx15) - c_2*c_6*(c_6 + y_0)*(y_2*yx17 + yx30) - c_2*y_0*y_2*(c_6 + y_0)**4 + (c_0 - c_1*y_0)*(c_6 + y_0)**5)/(c_6 + y_0)**5"],
            ["c_3*y_0 - c_4*y_1"],
            ["c_4*y_1 - c_5*y_2"],
            ["c_4*y_1 + 2*c_4*yx3 + c_5*y_2 - 2*c_5*yx2"],
            ["c_3*yx5 - c_4*y_1 + c_4*yx4 - yx3*(c_4 + c_5)"],
            ["c_3*y_0 + 2*c_3*yx6 + c_4*y_1 - 2*c_4*yx4"],
            ["(-c_2*c_6*y_2*yx30 + c_2*c_6*(c_6 + y_0)*(y_2*yx15 + yx27) - c_2*y_0*yx2*(c_6 + y_0)**3 + c_4*yx6*(c_6 + y_0)**4 - (c_6 + y_0)**2*(c_2*c_6*yx12 + yx5*(c_2*c_6*y_2 + (c_1 + c_5)*(c_6 + y_0)**2)))/(c_6 + y_0)**4"],
            ["(-c_2*c_6*y_2*yx31 + c_2*c_6*(c_6 + y_0)*(y_2*yx16 + yx28) - c_2*y_0*yx3*(c_6 + y_0)**3 + c_3*yx7*(c_6 + y_0)**4 - (c_6 + y_0)**2*(c_2*c_6*yx13 + yx6*(c_2*c_6*y_2 + (c_1 + c_4)*(c_6 + y_0)**2)))/(c_6 + y_0)**4"],
            ["(-c_2*y_2*yx32*(c_6*(2*y_0 + 1) + 2*y_0**2 - 4*y_0*(c_6 + y_0) + 2*(c_6 + y_0)**2) + c_2*yx5*(c_6 + y_0)**3*(2*c_6*y_0 + c_6 - 2*y_0*(2*c_6 + y_0)) + c_2*(c_6 + y_0)*(y_2*yx17 + yx30)*(c_6*(2*y_0 + 1) + 2*y_0**2 - 4*y_0*(c_6 + y_0) + 2*(c_6 + y_0)**2) + (c_6 + y_0)**4*(c_0*c_6 + c_0*y_0 + c_1*c_6*y_0 + c_1*y_0**2 + c_2*y_0*y_2) - (c_6 + y_0)**2*(c_2*yx15*(c_6*(2*y_0 + 1) + 2*y_0**2 - 4*y_0*(c_6 + y_0) + 2*(c_6 + y_0)**2) + yx7*(2*c_1*(c_6 + y_0)**3 + c_2*c_6*y_2*(2*y_0 + 1) + 2*c_2*y_2*(y_0**2 - 2*y_0*(c_6 + y_0) + (c_6 + y_0)**2))))/(c_6 + y_0)**5"],
            ["c_4*y_1 + 3*c_4*yx3 + 3*c_4*yx9 - c_5*y_2 + 3*c_5*yx2 - 3*c_5*yx8"],
            ["c_3*yx12 - c_4*y_1 + 2*c_4*yx10 - 2*c_4*yx3 + c_4*yx4 - c_4*yx9 + c_5*yx3 - 2*c_5*yx9"],
            ["2*c_3*yx13 + c_3*yx5 + c_4*y_1 - 2*c_4*yx10 + c_4*yx11 + c_4*yx3 - 2*c_4*yx4 - c_5*yx10"],
            ["c_3*y_0 + 3*c_3*yx14 + 3*c_3*yx6 - c_4*y_1 - 3*c_4*yx11 + 3*c_4*yx4"],
            ["(-c_2*c_6*y_2*yx2*yx32 + c_2*c_6*yx2*(c_6 + y_0)*(y_2*yx17 + yx30) + c_2*c_6*(c_6 + y_0)**2*(-y_2*yx2*yx7 + y_2*yx27 - yx15*yx2) + c_4*(c_6 + y_0)**5*(2*yx13 + yx6) + (c_6 + y_0)**4*(-c_0*c_6*yx2 - c_0*y_0*yx2 + c_1*c_6*y_0*yx2 + c_1*y_0**2*yx2 + c_2*y_0*y_2*yx2 - c_2*y_0*yx8 - 2*c_4*c_6*y_1*yx5 - 2*c_4*y_0*y_1*yx5 + 2*c_5*c_6*y_2*yx5 + 2*c_5*y_0*y_2*yx5 - yx2*(c_2*y_0*y_2 - (c_0 - c_1*y_0)*(c_6 + y_0))) + (c_6 + y_0)**3*(-c_2*c_6*yx23 - yx12*(c_2*c_6*y_2 + (c_1 + 2*c_5)*(c_6 + y_0)**2) + yx5*(c_2*c_6*yx2 + (c_6 + y_0)**2*(2*c_4*y_1 - 2*c_5*y_2 + c_5))))/(c_6 + y_0)**5"],
            ["(-c_2*c_6*y_2*yx3*yx32 + c_2*c_6*yx3*(c_6 + y_0)*(y_2*yx17 + yx30) + (c_6 + y_0)**5*(c_4*yx14 - yx6*(-c_4*y_1 + c_4 + c_5*y_2)) + (c_6 + y_0)**4*(-c_0*c_6*yx3 - c_0*y_0*yx3 + c_1*c_6*y_0*yx3 + c_1*y_0**2*yx3 + c_2*y_0*y_2*yx3 - c_2*y_0*yx9 - c_3*c_6*y_0*yx5 - c_3*y_0**2*yx5 + c_4*c_6*y_1*yx5 - c_4*c_6*y_1*yx6 + c_4*y_0*y_1*yx5 - c_4*y_0*y_1*yx6 + c_5*c_6*y_2*yx6 + c_5*y_0*y_2*yx6 - yx3*(-c_0*c_6 - c_0*y_0 + c_1*c_6*y_0 + c_1*y_0**2 + c_2*y_0*y_2)) + (c_6 + y_0)**3*(-c_2*c_6*yx24 - yx13*(c_2*c_6*y_2 + (c_6 + y_0)**2*(c_1 + c_4 + c_5)) + yx5*(c_2*c_6*yx3 + (c_6 + y_0)**2*(c_3*y_0 - c_4*y_1))) + (c_6 + y_0)**2*(c_2*c_6*y_2*yx28 - c_2*c_6*y_2*yx3*yx7 - yx15*(c_2*c_6*yx3 - c_3*(c_6 + y_0)**3)))/(c_6 + y_0)**5"],
            ["(-c_2*c_6*y_2*yx32*yx4 + c_2*c_6*yx4*(c_6 + y_0)*(y_2*yx17 + yx30) + (c_6 + y_0)**5*(2*c_3*yx16 + yx6*(2*c_3*y_0 - 2*c_4*y_1 + c_4)) + (c_6 + y_0)**4*(-c_0*c_6*yx4 - c_0*y_0*yx4 + c_1*c_6*y_0*yx4 + c_1*y_0**2*yx4 + c_2*y_0*y_2*yx4 - c_2*y_0*yx10 - 2*c_3*c_6*y_0*yx6 - 2*c_3*y_0**2*yx6 + 2*c_4*c_6*y_1*yx6 + 2*c_4*y_0*y_1*yx6 - yx4*(c_2*y_0*y_2 - (c_0 - c_1*y_0)*(c_6 + y_0))) + (c_6 + y_0)**3*(-c_2*c_6*yx25 + c_2*c_6*yx4*yx5 - yx14*(c_2*c_6*y_2 + (c_1 + 2*c_4)*(c_6 + y_0)**2)) + (c_6 + y_0)**2*(c_2*c_6*y_2*yx29 - c_2*c_6*yx15*yx4 - yx7*(c_2*c_6*y_2*yx4 - c_3*(c_6 + y_0)**3)))/(c_6 + y_0)**5"],
            ["2*c_2*c_6*y_2*yx17*yx5/(c_6**4 + 4*c_6**3*y_0 + 6*c_6**2*y_0**2 + 4*c_6*y_0**3 + y_0**4) - 2*c_2*c_6*y_2*yx32*yx5/(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5) + c_2*c_6*yx30*(2*c_6*y_2 + 2*y_0*y_2 + y_2 + 2*yx5)/(c_6**4 + 4*c_6**3*y_0 + 6*c_6**2*y_0**2 + 4*c_6*y_0**3 + y_0**4) + c_2*y_0*yx2/(c_6 + y_0) + c_2*yx12*(2*c_6*y_0 + c_6 - 2*y_0*(2*c_6 + y_0))/(c_6 + y_0)**2 - c_2*yx27*(c_6*(2*y_0 + 1) + 2*y_0**2 - 4*y_0*(c_6 + y_0) + 2*(c_6 + y_0)**2)/(c_6 + y_0)**3 + c_4*yx16 - yx15*(2*c_1 - 2*c_2*c_6*y_0*y_2/(c_6 + y_0)**3 + c_2*c_6*y_2/(c_6 + y_0)**3 + 2*c_2*c_6*yx5/(c_6 + y_0)**3 - 2*c_2*y_0**2*y_2/(c_6 + y_0)**3 + 2*c_2*y_2/(c_6 + y_0) + c_5) + yx5*(2*c_0 - 2*c_1*y_0 + c_1 - 2*c_2*c_6*y_0*y_2/(c_6 + y_0)**2 + c_2*c_6*y_2/(c_6 + y_0)**2 + 2*c_2*c_6*yx5/(c_6 + y_0)**2 - 2*c_2*y_0**2*y_2/(c_6 + y_0)**2) - yx7*(2*c_2*c_6*y_2*yx5/(c_6 + y_0)**3 - c_4*y_1 + c_5*y_2) + (-2*c_0*c_6*yx5 - 2*c_0*y_0*yx5 + 2*c_1*c_6*y_0*yx5 + 2*c_1*y_0**2*yx5 + 2*c_2*y_0*y_2*yx5 - c_4*c_6*y_1*yx7 - c_4*y_0*y_1*yx7 + c_5*c_6*y_2*yx7 + c_5*y_0*y_2*yx7)/(c_6 + y_0)"],
            ["(-2*c_1*c_6**5*yx16 + c_1*c_6**5*yx6 - 10*c_1*c_6**4*y_0*yx16 + 5*c_1*c_6**4*y_0*yx6 - 20*c_1*c_6**3*y_0**2*yx16 + 10*c_1*c_6**3*y_0**2*yx6 - 20*c_1*c_6**2*y_0**3*yx16 + 10*c_1*c_6**2*y_0**3*yx6 - 10*c_1*c_6*y_0**4*yx16 + 5*c_1*c_6*y_0**4*yx6 - 2*c_1*y_0**5*yx16 + c_1*y_0**5*yx6 - 2*c_2*c_6**4*y_0*yx13 + c_2*c_6**4*y_0*yx3 - 2*c_2*c_6**4*y_2*yx16 + c_2*c_6**4*y_2*yx6 + c_2*c_6**4*yx13 - 2*c_2*c_6**4*yx28 + 2*c_2*c_6**4*yx5*yx6 - 8*c_2*c_6**3*y_0**2*yx13 + 4*c_2*c_6**3*y_0**2*yx3 - 6*c_2*c_6**3*y_0*y_2*yx16 + 3*c_2*c_6**3*y_0*y_2*yx6 + 3*c_2*c_6**3*y_0*yx13 - 6*c_2*c_6**3*y_0*yx28 + 6*c_2*c_6**3*y_0*yx5*yx6 - c_2*c_6**3*y_2*yx16 + 2*c_2*c_6**3*y_2*yx31 - 2*c_2*c_6**3*y_2*yx6*yx7 - 2*c_2*c_6**3*yx15*yx6 - c_2*c_6**3*yx28 - 12*c_2*c_6**2*y_0**3*yx13 + 6*c_2*c_6**2*y_0**3*yx3 - 6*c_2*c_6**2*y_0**2*y_2*yx16 + 3*c_2*c_6**2*y_0**2*y_2*yx6 + 3*c_2*c_6**2*y_0**2*yx13 - 6*c_2*c_6**2*y_0**2*yx28 + 6*c_2*c_6**2*y_0**2*yx5*yx6 - 2*c_2*c_6**2*y_0*y_2*yx16 + 4*c_2*c_6**2*y_0*y_2*yx31 - 4*c_2*c_6**2*y_0*y_2*yx6*yx7 - 4*c_2*c_6**2*y_0*yx15*yx6 - 2*c_2*c_6**2*y_0*yx28 + 2*c_2*c_6**2*y_2*yx17*yx6 + c_2*c_6**2*y_2*yx31 + 2*c_2*c_6**2*yx30*yx6 - 8*c_2*c_6*y_0**4*yx13 + 4*c_2*c_6*y_0**4*yx3 - 2*c_2*c_6*y_0**3*y_2*yx16 + c_2*c_6*y_0**3*y_2*yx6 + c_2*c_6*y_0**3*yx13 - 2*c_2*c_6*y_0**3*yx28 + 2*c_2*c_6*y_0**3*yx5*yx6 - c_2*c_6*y_0**2*y_2*yx16 + 2*c_2*c_6*y_0**2*y_2*yx31 - 2*c_2*c_6*y_0**2*y_2*yx6*yx7 - 2*c_2*c_6*y_0**2*yx15*yx6 - c_2*c_6*y_0**2*yx28 + 2*c_2*c_6*y_0*y_2*yx17*yx6 + c_2*c_6*y_0*y_2*yx31 + 2*c_2*c_6*y_0*yx30*yx6 - 2*c_2*c_6*y_2*yx32*yx6 - 2*c_2*y_0**5*yx13 + c_2*y_0**5*yx3 + c_3*c_6**5*yx17 + 5*c_3*c_6**4*y_0*yx17 + 10*c_3*c_6**3*y_0**2*yx17 + 10*c_3*c_6**2*y_0**3*yx17 + 5*c_3*c_6*y_0**4*yx17 + c_3*y_0**5*yx17 - c_4*c_6**5*yx16 - 5*c_4*c_6**4*y_0*yx16 - 10*c_4*c_6**3*y_0**2*yx16 - 10*c_4*c_6**2*y_0**3*yx16 - 5*c_4*c_6*y_0**4*yx16 - c_4*y_0**5*yx16)/(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5)"],
            ["c_2*c_6*y_2*yx32*(3*c_6**2 + 6*c_6*y_0 + 3*c_6 + 3*y_0**2 + 3*y_0 - 3*yx7 + 1)/(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5) - c_2*c_6*yx30*(3*c_6**2 + 6*c_6*y_0 + 3*c_6 + 3*y_0**2 + 3*y_0 - 3*yx7 + 1)/(c_6**4 + 4*c_6**3*y_0 + 6*c_6**2*y_0**2 + 4*c_6*y_0**3 + y_0**4) - c_2*yx15*(3*c_6**2*y_0 - 3*c_6**2 + 6*c_6*y_0**2 - 3*c_6*y_0 + 3*c_6*yx7 - c_6 + 3*y_0**3)/(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) + c_2*yx5*(3*c_6*y_0 + 3*c_6*yx7 - c_6 + 3*y_0**2)/(c_6**2 + 2*c_6*y_0 + y_0**2) - yx17*(3*c_1 - 3*c_2*c_6*y_0*y_2/(c_6 + y_0)**4 - 3*c_2*c_6*y_2*yx7/(c_6 + y_0)**4 + c_2*c_6*y_2/(c_6 + y_0)**4 - 3*c_2*y_0**2*y_2/(c_6 + y_0)**4 - 3*c_2*y_0*y_2/(c_6 + y_0)**2 + 3*c_2*y_2/(c_6 + y_0) + 3*c_2*y_2/(c_6 + y_0)**2) - yx7*(-3*c_0 + 3*c_1*y_0 - 3*c_1 + 3*c_2*c_6*y_0*y_2/(c_6 + y_0)**3 + 3*c_2*c_6*y_2*yx7/(c_6 + y_0)**3 - c_2*c_6*y_2/(c_6 + y_0)**3 + 3*c_2*y_0**2*y_2/(c_6 + y_0)**3 + 3*c_2*y_0*y_2/(c_6 + y_0) - 3*c_2*y_2/(c_6 + y_0)) - (3*c_0*c_6*yx7 - c_0*c_6 + 3*c_0*y_0*yx7 - c_0*y_0 - 3*c_1*c_6*y_0*yx7 + c_1*c_6*y_0 - 3*c_1*y_0**2*yx7 + c_1*y_0**2 - 3*c_2*y_0*y_2*yx7 + c_2*y_0*y_2)/(c_6 + y_0)"],
            ["6*c_4*y_1*yx2 + c_4*y_1 + 4*c_4*yx19 + 4*c_4*yx3 + 6*c_4*yx9 + 6*c_5*y_2*yx2 + c_5*y_2 - 4*c_5*yx18 - 4*c_5*yx2 + 6*c_5*yx8"],
            ["c_3*yx23 - 3*c_4*y_1*yx2 + 3*c_4*y_1*yx3 - c_4*y_1 + 3*c_4*yx10 - c_4*yx19 + 3*c_4*yx20 - 3*c_4*yx3 + c_4*yx4 - 3*c_4*yx9 + 3*c_5*y_2*yx3 - 3*c_5*yx19 - c_5*yx3 + 3*c_5*yx9"],
            ["c_3*y_0*yx2 + c_3*yx12 + 2*c_3*yx24 + c_4*y_1*yx2 - 4*c_4*y_1*yx3 + c_4*y_1*yx4 + c_4*y_1 - 4*c_4*yx10 + c_4*yx11 - 2*c_4*yx20 + 2*c_4*yx21 + 2*c_4*yx3 - 2*c_4*yx4 + c_4*yx9 + c_5*y_2*yx4 + c_5*yx10 - 2*c_5*yx20"],
            ["3*c_3*y_0*yx3 + 3*c_3*yx13 + 3*c_3*yx25 + c_3*yx5 + 3*c_4*y_1*yx3 - 3*c_4*y_1*yx4 - c_4*y_1 + 3*c_4*yx10 - 3*c_4*yx11 - 3*c_4*yx21 + c_4*yx22 - c_4*yx3 + 3*c_4*yx4 - c_5*yx21"],
            ["6*c_3*y_0*yx4 + c_3*y_0 + 6*c_3*yx14 + 4*c_3*yx26 + 4*c_3*yx6 + 6*c_4*y_1*yx4 + c_4*y_1 + 6*c_4*yx11 - 4*c_4*yx22 - 4*c_4*yx4"],
            ["(-c_2*c_6*y_2*yx32*yx8*(c_6**2 + 2*c_6*y_0 + y_0**2) - c_2*c_6*yx8*(c_6 + y_0)**2*(y_2*yx7 + yx15)*(c_6**2 + 2*c_6*y_0 + y_0**2) + c_2*c_6*yx8*(c_6 + y_0)*(y_2*yx17 + yx30)*(c_6**2 + 2*c_6*y_0 + y_0**2) - yx23*(c_6 + y_0)**3*(c_2*c_6*y_2 + (c_1 + 3*c_5)*(c_6 + y_0)**2)*(c_6**2 + 2*c_6*y_0 + y_0**2) + yx5*(c_6 + y_0)**5*(c_2*c_6*yx8 + 3*c_4*c_6**2*y_1 + 6*c_4*c_6*y_0*y_1 + 3*c_4*y_0**2*y_1 + 3*c_5*c_6**2*y_2 - c_5*c_6**2 + 6*c_5*c_6*y_0*y_2 - 2*c_5*c_6*y_0 + 3*c_5*y_0**2*y_2 - c_5*y_0**2) + (c_6 + y_0)**5*(c_6**2 + 2*c_6*y_0 + y_0**2)*(3*c_4*yx13 + 3*c_4*yx24 + c_4*yx6 + 3*yx12*(c_4*y_1 - c_5*y_2 + c_5)) + (c_6 + y_0)**4*(c_6**2 + 2*c_6*y_0 + y_0**2)*(-c_0*c_6*yx8 - c_0*y_0*yx8 + c_1*c_6*y_0*yx8 + c_1*y_0**2*yx8 + c_2*y_0*y_2*yx8 - c_2*y_0*yx18 - 3*c_4*c_6*y_1*yx12 - 3*c_4*y_0*y_1*yx12 + 3*c_5*c_6*y_2*yx12 + 3*c_5*y_0*y_2*yx12 - yx8*(c_2*y_0*y_2 - (c_0 - c_1*y_0)*(c_6 + y_0))))/((c_6 + y_0)**5*(c_6**2 + 2*c_6*y_0 + y_0**2))"],
            ["(-c_2*c_6*y_2*yx32*yx9*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) - c_2*c_6*yx9*(c_6 + y_0)**5*(y_2*yx7 + yx15)*(c_6**2 + 2*c_6*y_0 + y_0**2) + c_2*c_6*yx9*(c_6 + y_0)*(y_2*yx17 + yx30)*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) - yx24*(c_6 + y_0)**3*(c_2*c_6*y_2 + (c_6 + y_0)**2*(c_1 + c_4 + 2*c_5))*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) - yx5*(c_6 + y_0)**5*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(-c_2*c_6*yx9 + 2*c_4*c_6**2*y_1 + 4*c_4*c_6*y_0*y_1 + 2*c_4*y_0**2*y_1) + (c_6 + y_0)**5*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(c_3*yx27 + c_4*yx14 + 2*c_4*yx25 + yx12*(c_3*y_0 - c_4*y_1) + yx13*(2*c_4*y_1 - 2*c_4 - 2*c_5*y_2 + c_5) + yx6*(c_4*y_1 - c_4 + c_5*y_2)) + (c_6 + y_0)**4*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(-c_0*c_6*yx9 - c_0*y_0*yx9 + c_1*c_6*y_0*yx9 + c_1*y_0**2*yx9 + c_2*y_0*y_2*yx9 - c_2*y_0*yx19 - c_3*c_6*y_0*yx12 - c_3*y_0**2*yx12 + c_4*c_6*y_1*yx12 - 2*c_4*c_6*y_1*yx13 + c_4*y_0*y_1*yx12 - 2*c_4*y_0*y_1*yx13 + 2*c_5*c_6*y_2*yx13 + 2*c_5*y_0*y_2*yx13 - yx9*(-c_0*c_6 - c_0*y_0 + c_1*c_6*y_0 + c_1*y_0**2 + c_2*y_0*y_2)))/((c_6 + y_0)**5*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3))"],
            ["(-c_2*c_6*y_2*yx10*yx32*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) + c_2*c_6*yx10*(c_6 + y_0)*(y_2*yx17 + yx30)*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) - yx25*(c_6 + y_0)**3*(c_2*c_6*y_2 + (c_6 + y_0)**2*(c_1 + 2*c_4 + c_5))*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) + yx5*(c_6 + y_0)**5*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(c_2*c_6*yx10 + c_3*c_6**2*y_0 + 2*c_3*c_6*y_0**2 + c_3*y_0**3 + c_4*c_6**2*y_1 + 2*c_4*c_6*y_0*y_1 + c_4*y_0**2*y_1) + (c_6 + y_0)**5*(-c_2*c_6*y_2*yx10*yx7 + yx15*(-c_2*c_6*yx10 + c_3*c_6**3 + 3*c_3*c_6**2*y_0 + 3*c_3*c_6*y_0**2 + c_3*y_0**3))*(c_6**2 + 2*c_6*y_0 + y_0**2) + (c_6 + y_0)**5*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(2*c_3*yx28 + c_4*yx26 - c_4*yx6*(2*y_1 - 1) + yx13*(2*c_3*y_0 - 2*c_4*y_1 + c_4) - yx14*(-c_4*y_1 + 2*c_4 + c_5*y_2)) + (c_6 + y_0)**4*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(-c_0*c_6*yx10 - c_0*y_0*yx10 + c_1*c_6*y_0*yx10 + c_1*y_0**2*yx10 + c_2*y_0*y_2*yx10 - c_2*y_0*yx20 - 2*c_3*c_6*y_0*yx13 - 2*c_3*y_0**2*yx13 + 2*c_4*c_6*y_1*yx13 - c_4*c_6*y_1*yx14 + 2*c_4*y_0*y_1*yx13 - c_4*y_0*y_1*yx14 + c_5*c_6*y_2*yx14 + c_5*y_0*y_2*yx14 - yx10*(-c_0*c_6 - c_0*y_0 + c_1*c_6*y_0 + c_1*y_0**2 + c_2*y_0*y_2)))/((c_6 + y_0)**5*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3))"],
            ["(-c_2*c_6*y_2*yx11*yx32*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) - c_2*c_6*yx11*yx15*(c_6 + y_0)**2*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) + c_2*c_6*yx11*(c_6 + y_0)*(y_2*yx17 + yx30)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) + yx7*(c_6 + y_0)**5*(-c_2*c_6*y_2*yx11 + c_3*c_6**3 + 3*c_3*c_6**2*y_0 + 3*c_3*c_6*y_0**2 + c_3*y_0**3) + (c_6 + y_0)**5*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(3*c_3*yx16 + 3*c_3*yx29 + 3*yx14*(c_3*y_0 - c_4*y_1 + c_4) + yx6*(3*c_3*y_0 + 3*c_4*y_1 - c_4)) + (c_6 + y_0)**4*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(-c_0*c_6*yx11 - c_0*y_0*yx11 + c_1*c_6*y_0*yx11 + c_1*y_0**2*yx11 + c_2*y_0*y_2*yx11 - c_2*y_0*yx21 - 3*c_3*c_6*y_0*yx14 - 3*c_3*y_0**2*yx14 + 3*c_4*c_6*y_1*yx14 + 3*c_4*y_0*y_1*yx14 - yx11*(c_2*y_0*y_2 - (c_0 - c_1*y_0)*(c_6 + y_0))) + (c_6 + y_0)**3*(c_2*c_6*yx11*yx5 - yx26*(c_2*c_6*y_2 + (c_1 + 3*c_4)*(c_6 + y_0)**2))*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3))/((c_6 + y_0)**5*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3))"],
            ["2*c_2*c_6*y_2*yx12*yx17/(c_6**4 + 4*c_6**3*y_0 + 6*c_6**2*y_0**2 + 4*c_6*y_0**3 + y_0**4) - 2*c_2*c_6*y_2*yx12*yx32/(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5) + 2*c_2*c_6*yx12*yx30/(c_6**4 + 4*c_6**3*y_0 + 6*c_6**2*y_0**2 + 4*c_6*y_0**3 + y_0**4) + 2*c_2*c_6*yx12*yx5/(c_6**2 + 2*c_6*y_0 + y_0**2) + c_2*y_0*yx8/(c_6 + y_0) + c_2*yx23*(2*c_6*y_0 + c_6 - 2*y_0*(2*c_6 + y_0))/(c_6 + y_0)**2 + c_4*yx16 + 2*c_4*yx28 + yx12*(2*c_0 - 2*c_1*y_0 + c_1 - 2*c_2*c_6*y_0*y_2/(c_6 + y_0)**2 + c_2*c_6*y_2/(c_6 + y_0)**2 - 2*c_2*y_0**2*y_2/(c_6 + y_0)**2) - yx15*(2*c_2*c_6*yx12/(c_6 + y_0)**3 - 2*c_4*y_1 + 2*c_5*y_2 - c_5) + yx2*(c_0*c_6 + c_0*y_0 + c_1*c_6*y_0 + c_1*y_0**2 + c_2*y_0*y_2)/(c_6 + y_0) - yx27*(2*c_1 - 2*c_2*c_6*y_0*y_2/(c_6 + y_0)**3 + c_2*c_6*y_2/(c_6 + y_0)**3 - 2*c_2*y_0**2*y_2/(c_6 + y_0)**3 + 2*c_2*y_2/(c_6 + y_0) + 2*c_5) + yx7*(-2*c_2*c_6*y_2*yx12 + c_4*c_6**3*y_1 + 3*c_4*c_6**2*y_0*y_1 + 3*c_4*c_6*y_0**2*y_1 + c_4*y_0**3*y_1 + c_5*c_6**3*y_2 + 3*c_5*c_6**2*y_0*y_2 + 3*c_5*c_6*y_0**2*y_2 + c_5*y_0**3*y_2)/(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) + (-2*c_0*c_6*yx12 - 2*c_0*y_0*yx12 + 2*c_1*c_6*y_0*yx12 + 2*c_1*y_0**2*yx12 + 2*c_2*y_0*y_2*yx12 - 2*c_4*c_6*y_1*yx15 - 2*c_4*y_0*y_1*yx15 + 2*c_5*c_6*y_2*yx15 + 2*c_5*y_0*y_2*yx15)/(c_6 + y_0)"],
            ["2*c_2*c_6*y_2*yx13*yx17/(c_6 + y_0)**4 - 2*c_2*c_6*y_2*yx13*yx32/(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5) + 2*c_2*c_6*yx13*yx5/(c_6**2 + 2*c_6*y_0 + y_0**2) + c_2*y_0*yx9/(c_6 + y_0) + c_2*yx24*(2*c_6*y_0 + c_6 - 2*y_0*(2*c_6 + y_0))/(c_6 + y_0)**2 + c_4*yx29 + yx13*(2*c_0 - 2*c_1*y_0 + c_1 - 2*c_2*c_6*y_0*y_2/(c_6 + y_0)**2 + c_2*c_6*y_2/(c_6 + y_0)**2 - 2*c_2*y_0**2*y_2/(c_6 + y_0)**2) - yx15*(2*c_2*c_6*yx13 - c_3*c_6**3*y_0 - 3*c_3*c_6**2*y_0**2 - 3*c_3*c_6*y_0**3 - c_3*y_0**4 + c_4*c_6**3*y_1 + 3*c_4*c_6**2*y_0*y_1 + 3*c_4*c_6*y_0**2*y_1 + c_4*y_0**3*y_1)/(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) - yx16*(-c_4*y_1 + c_4 + c_5*y_2) - yx28*(2*c_1 - 2*c_2*c_6*y_0*y_2/(c_6 + y_0)**3 + c_2*c_6*y_2/(c_6 + y_0)**3 - 2*c_2*y_0**2*y_2/(c_6 + y_0)**3 + 2*c_2*y_2/(c_6 + y_0) + c_4 + c_5) + yx3*(c_0*c_6 + c_0*y_0 + c_1*c_6*y_0 + c_1*y_0**2 + c_2*y_0*y_2)/(c_6 + y_0) + yx30*(2*c_2*c_6*yx13/(c_6 + y_0)**4 + c_3) - yx7*(2*c_2*c_6*y_2*yx13 + c_4*c_6**3*y_1 + 3*c_4*c_6**2*y_0*y_1 + 3*c_4*c_6*y_0**2*y_1 + c_4*y_0**3*y_1)/(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) + (-2*c_0*c_6*yx13 - 2*c_0*y_0*yx13 + 2*c_1*c_6*y_0*yx13 + 2*c_1*y_0**2*yx13 + 2*c_2*y_0*y_2*yx13 - c_3*c_6*y_0*yx15 - c_3*y_0**2*yx15 + c_4*c_6*y_1*yx15 - c_4*c_6*y_1*yx16 + c_4*y_0*y_1*yx15 - c_4*y_0*y_1*yx16 + c_5*c_6*y_2*yx16 + c_5*y_0*y_2*yx16)/(c_6 + y_0)"],
            ["-2*c_2*c_6*y_2*yx14*yx32/(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5) - 2*c_2*c_6*yx14*yx15/(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) + 2*c_2*c_6*yx14*yx30/(c_6**4 + 4*c_6**3*y_0 + 6*c_6**2*y_0**2 + 4*c_6*y_0**3 + y_0**4) + 2*c_2*c_6*yx14*yx5/(c_6**2 + 2*c_6*y_0 + y_0**2) + c_2*y_0*yx10/(c_6 + y_0) + c_2*yx25*(2*c_6*y_0 + c_6 - 2*y_0*(2*c_6 + y_0))/(c_6 + y_0)**2 + 2*c_3*yx31 + yx14*(2*c_0 - 2*c_1*y_0 + c_1 - 2*c_2*c_6*y_0*y_2/(c_6 + y_0)**2 + c_2*c_6*y_2/(c_6 + y_0)**2 - 2*c_2*y_0**2*y_2/(c_6 + y_0)**2) + yx16*(2*c_3*y_0 - 2*c_4*y_1 + c_4) + yx17*(2*c_2*c_6*y_2*yx14 + c_3*c_6**4 + 4*c_3*c_6**3*y_0 + 6*c_3*c_6**2*y_0**2 + 4*c_3*c_6*y_0**3 + c_3*y_0**4)/(c_6**4 + 4*c_6**3*y_0 + 6*c_6**2*y_0**2 + 4*c_6*y_0**3 + y_0**4) - yx29*(c_2*c_6*y_2*(2*y_0 + 1) + 2*c_2*y_2*(y_0**2 - 2*y_0*(c_6 + y_0) + (c_6 + y_0)**2) + 2*(c_1 + c_4)*(c_6 + y_0)**3)/(c_6 + y_0)**3 + yx4*(c_0*c_6 + c_0*y_0 + c_1*c_6*y_0 + c_1*y_0**2 + c_2*y_0*y_2)/(c_6 + y_0) + yx7*(-2*c_2*c_6*y_2*yx14 + c_3*c_6**3*y_0 + 3*c_3*c_6**2*y_0**2 + 3*c_3*c_6*y_0**3 + c_3*y_0**4 + c_4*c_6**3*y_1 + 3*c_4*c_6**2*y_0*y_1 + 3*c_4*c_6*y_0**2*y_1 + c_4*y_0**3*y_1)/(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) + (-2*c_0*c_6*yx14 - 2*c_0*y_0*yx14 + 2*c_1*c_6*y_0*yx14 + 2*c_1*y_0**2*yx14 + 2*c_2*y_0*y_2*yx14 - 2*c_3*c_6*y_0*yx16 - 2*c_3*y_0**2*yx16 + 2*c_4*c_6*y_1*yx16 + 2*c_4*y_0*y_1*yx16)/(c_6 + y_0)"],
            ["(3*c_0*c_6**5*yx5 + 15*c_0*c_6**4*y_0*yx5 + 30*c_0*c_6**3*y_0**2*yx5 + 30*c_0*c_6**2*y_0**3*yx5 + 15*c_0*c_6*y_0**4*yx5 + 3*c_0*y_0**5*yx5 + 3*c_1*c_6**5*y_0*yx5 + 3*c_1*c_6**5*yx15 - 3*c_1*c_6**5*yx30 - c_1*c_6**5*yx5 + 15*c_1*c_6**4*y_0**2*yx5 + 15*c_1*c_6**4*y_0*yx15 - 15*c_1*c_6**4*y_0*yx30 - 5*c_1*c_6**4*y_0*yx5 + 30*c_1*c_6**3*y_0**3*yx5 + 30*c_1*c_6**3*y_0**2*yx15 - 30*c_1*c_6**3*y_0**2*yx30 - 10*c_1*c_6**3*y_0**2*yx5 + 30*c_1*c_6**2*y_0**4*yx5 + 30*c_1*c_6**2*y_0**3*yx15 - 30*c_1*c_6**2*y_0**3*yx30 - 10*c_1*c_6**2*y_0**3*yx5 + 15*c_1*c_6*y_0**5*yx5 + 15*c_1*c_6*y_0**4*yx15 - 15*c_1*c_6*y_0**4*yx30 - 5*c_1*c_6*y_0**4*yx5 + 3*c_1*y_0**6*yx5 + 3*c_1*y_0**5*yx15 - 3*c_1*y_0**5*yx30 - c_1*y_0**5*yx5 + 3*c_2*c_6**4*y_0*y_2*yx5 + 3*c_2*c_6**4*y_0*yx12 - c_2*c_6**4*y_0*yx2 - 3*c_2*c_6**4*y_0*yx27 + 3*c_2*c_6**4*y_2*yx15 - 3*c_2*c_6**4*y_2*yx30 - c_2*c_6**4*y_2*yx5 - c_2*c_6**4*yx12 + 3*c_2*c_6**4*yx15*yx5 + 3*c_2*c_6**4*yx27 + 12*c_2*c_6**3*y_0**2*y_2*yx5 + 12*c_2*c_6**3*y_0**2*yx12 - 4*c_2*c_6**3*y_0**2*yx2 - 12*c_2*c_6**3*y_0**2*yx27 + 9*c_2*c_6**3*y_0*y_2*yx15 - 9*c_2*c_6**3*y_0*y_2*yx30 - 3*c_2*c_6**3*y_0*y_2*yx5 - 3*c_2*c_6**3*y_0*yx12 + 9*c_2*c_6**3*y_0*yx15*yx5 + 9*c_2*c_6**3*y_0*yx27 - 3*c_2*c_6**3*y_2*yx15*yx7 + c_2*c_6**3*y_2*yx15 - 3*c_2*c_6**3*y_2*yx30 - 3*c_2*c_6**3*yx15**2 + c_2*c_6**3*yx27 + 18*c_2*c_6**2*y_0**3*y_2*yx5 + 18*c_2*c_6**2*y_0**3*yx12 - 6*c_2*c_6**2*y_0**3*yx2 - 18*c_2*c_6**2*y_0**3*yx27 + 9*c_2*c_6**2*y_0**2*y_2*yx15 - 9*c_2*c_6**2*y_0**2*y_2*yx30 - 3*c_2*c_6**2*y_0**2*y_2*yx5 - 3*c_2*c_6**2*y_0**2*yx12 + 9*c_2*c_6**2*y_0**2*yx15*yx5 + 9*c_2*c_6**2*y_0**2*yx27 - 6*c_2*c_6**2*y_0*y_2*yx15*yx7 + 2*c_2*c_6**2*y_0*y_2*yx15 - 6*c_2*c_6**2*y_0*y_2*yx30 - 6*c_2*c_6**2*y_0*yx15**2 + 2*c_2*c_6**2*y_0*yx27 + 3*c_2*c_6**2*y_2*yx15*yx17 - c_2*c_6**2*y_2*yx30 + 3*c_2*c_6**2*yx15*yx30 + 12*c_2*c_6*y_0**4*y_2*yx5 + 12*c_2*c_6*y_0**4*yx12 - 4*c_2*c_6*y_0**4*yx2 - 12*c_2*c_6*y_0**4*yx27 + 3*c_2*c_6*y_0**3*y_2*yx15 - 3*c_2*c_6*y_0**3*y_2*yx30 - c_2*c_6*y_0**3*y_2*yx5 - c_2*c_6*y_0**3*yx12 + 3*c_2*c_6*y_0**3*yx15*yx5 + 3*c_2*c_6*y_0**3*yx27 - 3*c_2*c_6*y_0**2*y_2*yx15*yx7 + c_2*c_6*y_0**2*y_2*yx15 - 3*c_2*c_6*y_0**2*y_2*yx30 - 3*c_2*c_6*y_0**2*yx15**2 + c_2*c_6*y_0**2*yx27 + 3*c_2*c_6*y_0*y_2*yx15*yx17 - c_2*c_6*y_0*y_2*yx30 + 3*c_2*c_6*y_0*yx15*yx30 - 3*c_2*c_6*y_2*yx15*yx32 + 3*c_2*y_0**5*y_2*yx5 + 3*c_2*y_0**5*yx12 - c_2*y_0**5*yx2 - 3*c_2*y_0**5*yx27 + c_4*c_6**5*yx31 + 5*c_4*c_6**4*y_0*yx31 + 10*c_4*c_6**3*y_0**2*yx31 + 10*c_4*c_6**2*y_0**3*yx31 + 5*c_4*c_6*y_0**4*yx31 + c_4*y_0**5*yx31 - c_5*c_6**5*yx30 - 5*c_5*c_6**4*y_0*yx30 - 10*c_5*c_6**3*y_0**2*yx30 - 10*c_5*c_6**2*y_0**3*yx30 - 5*c_5*c_6*y_0**4*yx30 - c_5*y_0**5*yx30)/(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5)"],
            ["(3*c_0*c_6**5*yx6 + 15*c_0*c_6**4*y_0*yx6 + 30*c_0*c_6**3*y_0**2*yx6 + 30*c_0*c_6**2*y_0**3*yx6 + 15*c_0*c_6*y_0**4*yx6 + 3*c_0*y_0**5*yx6 + 3*c_1*c_6**5*y_0*yx6 + 3*c_1*c_6**5*yx16 - 3*c_1*c_6**5*yx31 - c_1*c_6**5*yx6 + 15*c_1*c_6**4*y_0**2*yx6 + 15*c_1*c_6**4*y_0*yx16 - 15*c_1*c_6**4*y_0*yx31 - 5*c_1*c_6**4*y_0*yx6 + 30*c_1*c_6**3*y_0**3*yx6 + 30*c_1*c_6**3*y_0**2*yx16 - 30*c_1*c_6**3*y_0**2*yx31 - 10*c_1*c_6**3*y_0**2*yx6 + 30*c_1*c_6**2*y_0**4*yx6 + 30*c_1*c_6**2*y_0**3*yx16 - 30*c_1*c_6**2*y_0**3*yx31 - 10*c_1*c_6**2*y_0**3*yx6 + 15*c_1*c_6*y_0**5*yx6 + 15*c_1*c_6*y_0**4*yx16 - 15*c_1*c_6*y_0**4*yx31 - 5*c_1*c_6*y_0**4*yx6 + 3*c_1*y_0**6*yx6 + 3*c_1*y_0**5*yx16 - 3*c_1*y_0**5*yx31 - c_1*y_0**5*yx6 + 3*c_2*c_6**4*y_0*y_2*yx6 + 3*c_2*c_6**4*y_0*yx13 - 3*c_2*c_6**4*y_0*yx28 - c_2*c_6**4*y_0*yx3 + 3*c_2*c_6**4*y_2*yx16 - 3*c_2*c_6**4*y_2*yx31 - c_2*c_6**4*y_2*yx6 - c_2*c_6**4*yx13 + 3*c_2*c_6**4*yx16*yx5 + 3*c_2*c_6**4*yx28 + 12*c_2*c_6**3*y_0**2*y_2*yx6 + 12*c_2*c_6**3*y_0**2*yx13 - 12*c_2*c_6**3*y_0**2*yx28 - 4*c_2*c_6**3*y_0**2*yx3 + 9*c_2*c_6**3*y_0*y_2*yx16 - 9*c_2*c_6**3*y_0*y_2*yx31 - 3*c_2*c_6**3*y_0*y_2*yx6 - 3*c_2*c_6**3*y_0*yx13 + 9*c_2*c_6**3*y_0*yx16*yx5 + 9*c_2*c_6**3*y_0*yx28 - 3*c_2*c_6**3*y_2*yx16*yx7 + c_2*c_6**3*y_2*yx16 - 3*c_2*c_6**3*y_2*yx31 - 3*c_2*c_6**3*yx15*yx16 + c_2*c_6**3*yx28 + 18*c_2*c_6**2*y_0**3*y_2*yx6 + 18*c_2*c_6**2*y_0**3*yx13 - 18*c_2*c_6**2*y_0**3*yx28 - 6*c_2*c_6**2*y_0**3*yx3 + 9*c_2*c_6**2*y_0**2*y_2*yx16 - 9*c_2*c_6**2*y_0**2*y_2*yx31 - 3*c_2*c_6**2*y_0**2*y_2*yx6 - 3*c_2*c_6**2*y_0**2*yx13 + 9*c_2*c_6**2*y_0**2*yx16*yx5 + 9*c_2*c_6**2*y_0**2*yx28 - 6*c_2*c_6**2*y_0*y_2*yx16*yx7 + 2*c_2*c_6**2*y_0*y_2*yx16 - 6*c_2*c_6**2*y_0*y_2*yx31 - 6*c_2*c_6**2*y_0*yx15*yx16 + 2*c_2*c_6**2*y_0*yx28 + 3*c_2*c_6**2*y_2*yx16*yx17 - c_2*c_6**2*y_2*yx31 + 3*c_2*c_6**2*yx16*yx30 + 12*c_2*c_6*y_0**4*y_2*yx6 + 12*c_2*c_6*y_0**4*yx13 - 12*c_2*c_6*y_0**4*yx28 - 4*c_2*c_6*y_0**4*yx3 + 3*c_2*c_6*y_0**3*y_2*yx16 - 3*c_2*c_6*y_0**3*y_2*yx31 - c_2*c_6*y_0**3*y_2*yx6 - c_2*c_6*y_0**3*yx13 + 3*c_2*c_6*y_0**3*yx16*yx5 + 3*c_2*c_6*y_0**3*yx28 - 3*c_2*c_6*y_0**2*y_2*yx16*yx7 + c_2*c_6*y_0**2*y_2*yx16 - 3*c_2*c_6*y_0**2*y_2*yx31 - 3*c_2*c_6*y_0**2*yx15*yx16 + c_2*c_6*y_0**2*yx28 + 3*c_2*c_6*y_0*y_2*yx16*yx17 - c_2*c_6*y_0*y_2*yx31 + 3*c_2*c_6*y_0*yx16*yx30 - 3*c_2*c_6*y_2*yx16*yx32 + 3*c_2*y_0**5*y_2*yx6 + 3*c_2*y_0**5*yx13 - 3*c_2*y_0**5*yx28 - c_2*y_0**5*yx3 + c_3*c_6**5*yx32 + 5*c_3*c_6**4*y_0*yx32 + 10*c_3*c_6**3*y_0**2*yx32 + 10*c_3*c_6**2*y_0**3*yx32 + 5*c_3*c_6*y_0**4*yx32 + c_3*y_0**5*yx32 - c_4*c_6**5*yx31 - 5*c_4*c_6**4*y_0*yx31 - 10*c_4*c_6**3*y_0**2*yx31 - 10*c_4*c_6**2*y_0**3*yx31 - 5*c_4*c_6*y_0**4*yx31 - c_4*y_0**5*yx31)/(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5)"],
            ["(c_2*yx30*(c_6 + y_0)**4*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5)*(-4*c_6**3*y_0 + 6*c_6**3 - 12*c_6**2*y_0**2 + 12*c_6**2*y_0 + 4*c_6**2 - 12*c_6*y_0**3 + 6*c_6*y_0**2 + 4*c_6*y_0 + 4*c_6*yx17 + c_6 - 4*y_0**4) - c_2*yx5*(c_6 + y_0)**4*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(4*c_6*y_0 - 4*c_6*yx17 - c_6 + 4*y_0**2)*(c_6**4 + 4*c_6**3*y_0 + 6*c_6**2*y_0**2 + 4*c_6*y_0**3 + y_0**4)*(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5) + yx17*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(2*c_2*y_2*(c_6 + y_0)**3*(-2*y_0 + 3) + 2*c_2*y_2*(c_6 + y_0)**2*(-3*y_0 + 2) + c_2*y_2*(-4*c_6*y_0 + 4*c_6*yx17 + c_6 - 4*y_0**2) + (c_6 + y_0)**4*(4*c_0 - 4*c_1*y_0 + 6*c_1))*(c_6**4 + 4*c_6**3*y_0 + 6*c_6**2*y_0**2 + 4*c_6*y_0**3 + y_0**4)*(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5) - yx32*(c_6 + y_0)**4*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(c_6**4 + 4*c_6**3*y_0 + 6*c_6**2*y_0**2 + 4*c_6*y_0**3 + y_0**4)*(4*c_1*c_6**5 + 20*c_1*c_6**4*y_0 + 40*c_1*c_6**3*y_0**2 + 40*c_1*c_6**2*y_0**3 + 20*c_1*c_6*y_0**4 + 4*c_1*y_0**5 + 4*c_2*c_6**4*y_2 + 12*c_2*c_6**3*y_0*y_2 + 6*c_2*c_6**3*y_2 + 12*c_2*c_6**2*y_0**2*y_2 + 12*c_2*c_6**2*y_0*y_2 + 4*c_2*c_6**2*y_2 + 4*c_2*c_6*y_0**3*y_2 + 6*c_2*c_6*y_0**2*y_2 + 4*c_2*c_6*y_0*y_2 + 4*c_2*c_6*y_2*yx17 + c_2*c_6*y_2) + (c_6 + y_0)**4*(-c_2*yx15*(-6*c_6**2*y_0 + 4*c_6**2 - 12*c_6*y_0**2 + 4*c_6*y_0 + 4*c_6*yx17 + c_6 - 6*y_0**3) + yx7*(6*c_0*c_6**3 + 18*c_0*c_6**2*y_0 + 18*c_0*c_6*y_0**2 + 6*c_0*y_0**3 + 6*c_1*c_6**3*y_0 - 4*c_1*c_6**3 + 18*c_1*c_6**2*y_0**2 - 12*c_1*c_6**2*y_0 + 18*c_1*c_6*y_0**3 - 12*c_1*c_6*y_0**2 + 6*c_1*y_0**4 - 4*c_1*y_0**3 + 6*c_2*c_6**2*y_0*y_2 - 4*c_2*c_6**2*y_2 + 12*c_2*c_6*y_0**2*y_2 - 4*c_2*c_6*y_0*y_2 - 4*c_2*c_6*y_2*yx17 - c_2*c_6*y_2 + 6*c_2*y_0**3*y_2))*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**4 + 4*c_6**3*y_0 + 6*c_6**2*y_0**2 + 4*c_6*y_0**3 + y_0**4)*(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5) + (c_6 + y_0)**3*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(c_6**4 + 4*c_6**3*y_0 + 6*c_6**2*y_0**2 + 4*c_6*y_0**3 + y_0**4)*(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5)*(-4*c_0*c_6*yx17 + c_0*c_6 - 4*c_0*y_0*yx17 + c_0*y_0 + 4*c_1*c_6*y_0*yx17 + c_1*c_6*y_0 + 4*c_1*y_0**2*yx17 + c_1*y_0**2 + 4*c_2*y_0*y_2*yx17 + c_2*y_0*y_2))/((c_6 + y_0)**4*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(c_6**4 + 4*c_6**3*y_0 + 6*c_6**2*y_0**2 + 4*c_6*y_0**3 + y_0**4)*(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5))"]
        ])

        central_from_raw_exprs = to_sympy_matrix([
            ["x_0_0_2 - y_2**2"],
            ["x_0_1_1 - y_1*y_2"],
            ["x_0_2_0 - y_1**2"],
            ["x_1_0_1 - y_0*y_2"],
            ["x_1_1_0 - y_0*y_1"],
            ["x_2_0_0 - y_0**2"],
            ["-3*x_0_0_2*y_2 + x_0_0_3 + 2*y_2**3"],
            ["-x_0_0_2*y_1 - 2*x_0_1_1*y_2 + x_0_1_2 + 2*y_1*y_2**2"],
            ["-2*x_0_1_1*y_1 - x_0_2_0*y_2 + x_0_2_1 + 2*y_1**2*y_2"],
            ["-3*x_0_2_0*y_1 + x_0_3_0 + 2*y_1**3"],
            ["-x_0_0_2*y_0 - 2*x_1_0_1*y_2 + x_1_0_2 + 2*y_0*y_2**2"],
            ["-x_0_1_1*y_0 - x_1_0_1*y_1 - x_1_1_0*y_2 + x_1_1_1 + 2*y_0*y_1*y_2"],
            ["-x_0_2_0*y_0 - 2*x_1_1_0*y_1 + x_1_2_0 + 2*y_0*y_1**2"],
            ["-2*x_1_0_1*y_0 - x_2_0_0*y_2 + x_2_0_1 + 2*y_0**2*y_2"],
            ["-2*x_1_1_0*y_0 - x_2_0_0*y_1 + x_2_1_0 + 2*y_0**2*y_1"],
            ["-3*x_2_0_0*y_0 + x_3_0_0 + 2*y_0**3"],
            ["6*x_0_0_2*y_2**2 - 4*x_0_0_3*y_2 + x_0_0_4 - 3*y_2**4"],
            ["3*x_0_0_2*y_1*y_2 - x_0_0_3*y_1 + 3*x_0_1_1*y_2**2 - 3*x_0_1_2*y_2 + x_0_1_3 - 3*y_1*y_2**3"],
            ["x_0_0_2*y_1**2 + 4*x_0_1_1*y_1*y_2 - 2*x_0_1_2*y_1 + x_0_2_0*y_2**2 - 2*x_0_2_1*y_2 + x_0_2_2 - 3*y_1**2*y_2**2"],
            ["3*x_0_1_1*y_1**2 + 3*x_0_2_0*y_1*y_2 - 3*x_0_2_1*y_1 - x_0_3_0*y_2 + x_0_3_1 - 3*y_1**3*y_2"],
            ["6*x_0_2_0*y_1**2 - 4*x_0_3_0*y_1 + x_0_4_0 - 3*y_1**4"],
            ["3*x_0_0_2*y_0*y_2 - x_0_0_3*y_0 + 3*x_1_0_1*y_2**2 - 3*x_1_0_2*y_2 + x_1_0_3 - 3*y_0*y_2**3"],
            ["x_0_0_2*y_0*y_1 + 2*x_0_1_1*y_0*y_2 - x_0_1_2*y_0 + 2*x_1_0_1*y_1*y_2 - x_1_0_2*y_1 + x_1_1_0*y_2**2 - 2*x_1_1_1*y_2 + x_1_1_2 - 3*y_0*y_1*y_2**2"],
            ["2*x_0_1_1*y_0*y_1 + x_0_2_0*y_0*y_2 - x_0_2_1*y_0 + x_1_0_1*y_1**2 + 2*x_1_1_0*y_1*y_2 - 2*x_1_1_1*y_1 - x_1_2_0*y_2 + x_1_2_1 - 3*y_0*y_1**2*y_2"],
            ["3*x_0_2_0*y_0*y_1 - x_0_3_0*y_0 + 3*x_1_1_0*y_1**2 - 3*x_1_2_0*y_1 + x_1_3_0 - 3*y_0*y_1**3"],
            ["x_0_0_2*y_0**2 + 4*x_1_0_1*y_0*y_2 - 2*x_1_0_2*y_0 + x_2_0_0*y_2**2 - 2*x_2_0_1*y_2 + x_2_0_2 - 3*y_0**2*y_2**2"],
            ["x_0_1_1*y_0**2 + 2*x_1_0_1*y_0*y_1 + 2*x_1_1_0*y_0*y_2 - 2*x_1_1_1*y_0 + x_2_0_0*y_1*y_2 - x_2_0_1*y_1 - x_2_1_0*y_2 + x_2_1_1 - 3*y_0**2*y_1*y_2"],
            ["x_0_2_0*y_0**2 + 4*x_1_1_0*y_0*y_1 - 2*x_1_2_0*y_0 + x_2_0_0*y_1**2 - 2*x_2_1_0*y_1 + x_2_2_0 - 3*y_0**2*y_1**2"],
            ["3*x_1_0_1*y_0**2 + 3*x_2_0_0*y_0*y_2 - 3*x_2_0_1*y_0 - x_3_0_0*y_2 + x_3_0_1 - 3*y_0**3*y_2"],
            ["3*x_1_1_0*y_0**2 + 3*x_2_0_0*y_0*y_1 - 3*x_2_1_0*y_0 - x_3_0_0*y_1 + x_3_1_0 - 3*y_0**3*y_1"],
            ["6*x_2_0_0*y_0**2 - 4*x_3_0_0*y_0 + x_4_0_0 - 3*y_0**4"]
            ])



        k_counter = [
            Moment([0, 0, 0], symbol=sympy.Symbol("1")),
            Moment([1, 0, 0], symbol=sympy.Symbol("y_0")),
            Moment([0, 1, 0], symbol=sympy.Symbol("y_1")),
            Moment([0, 0, 1], symbol=sympy.Symbol("y_2")),
            Moment([0, 0, 2], symbol=sympy.Symbol("x_0_0_2")),
            Moment([0, 1, 1], symbol=sympy.Symbol("x_0_1_1")),
            Moment([0, 2, 0], symbol=sympy.Symbol("x_0_2_0")),
            Moment([1, 0, 1], symbol=sympy.Symbol("x_1_0_1")),
            Moment([1, 1, 0], symbol=sympy.Symbol("x_1_1_0")),
            Moment([2, 0, 0], symbol=sympy.Symbol("x_2_0_0")),
            Moment([0, 0, 3], symbol=sympy.Symbol("x_0_0_3")),
            Moment([0, 1, 2], symbol=sympy.Symbol("x_0_1_2")),
            Moment([0, 2, 1], symbol=sympy.Symbol("x_0_2_1")),
            Moment([0, 3, 0], symbol=sympy.Symbol("x_0_3_0")),
            Moment([1, 0, 2], symbol=sympy.Symbol("x_1_0_2")),
            Moment([1, 1, 1], symbol=sympy.Symbol("x_1_1_1")),
            Moment([1, 2, 0], symbol=sympy.Symbol("x_1_2_0")),
            Moment([2, 0, 1], symbol=sympy.Symbol("x_2_0_1")),
            Moment([2, 1, 0], symbol=sympy.Symbol("x_2_1_0")),
            Moment([3, 0, 0], symbol=sympy.Symbol("x_3_0_0")),
            Moment([0, 0, 4], symbol=sympy.Symbol("x_0_0_4")),
            Moment([0, 1, 3], symbol=sympy.Symbol("x_0_1_3")),
            Moment([0, 2, 2], symbol=sympy.Symbol("x_0_2_2")),
            Moment([0, 3, 1], symbol=sympy.Symbol("x_0_3_1")),
            Moment([0, 4, 0], symbol=sympy.Symbol("x_0_4_0")),
            Moment([1, 0, 3], symbol=sympy.Symbol("x_1_0_3")),
            Moment([1, 1, 2], symbol=sympy.Symbol("x_1_1_2")),
            Moment([1, 2, 1], symbol=sympy.Symbol("x_1_2_1")),
            Moment([1, 3, 0], symbol=sympy.Symbol("x_1_3_0")),
            Moment([2, 0, 2], symbol=sympy.Symbol("x_2_0_2")),
            Moment([2, 1, 1], symbol=sympy.Symbol("x_2_1_1")),
            Moment([2, 2, 0], symbol=sympy.Symbol("x_2_2_0")),
            Moment([3, 0, 1], symbol=sympy.Symbol("x_3_0_1")),
            Moment([3, 1, 0], symbol=sympy.Symbol("x_3_1_0")),
            Moment([4, 0, 0], symbol=sympy.Symbol("x_4_0_0"))
            ]

        n_moments = 4
        species = to_sympy_matrix([["y_0"],["y_1"],["y_2"]])

        prob_moments = self.__problem_moments
        expected = to_sympy_matrix([
            ["c_0-c_1*y_0-(c_2*c_6*yx5)/(c_6+y_0) ** 2+(c_2*c_6*yx15)/(c_6+y_0) ** 3-(c_2*y_0*y_2)/(c_6+y_0)+(3*c_2*c_6*y_2*yx7 ** 2)/(c_6+y_0) ** 5+(c_2*c_6*y_2*yx7)/(c_6+y_0) ** 3-(c_2*c_6*y_2*yx17)/(c_6+y_0) ** 4-(3*c_2*c_6*yx5*yx7)/(c_6+y_0) ** 4"],
            ["c_3*y_0-c_4*y_1"],
            ["c_4*y_1-c_5*y_2"],
            ["c_4*y_1+c_5*y_2+2*c_4*yx3-2*c_5*yx2"],
            ["c_3*yx5-c_4*yx3-c_4*y_1+c_4*yx4-c_5*yx3"],
            ["c_3*y_0+c_4*y_1-2*c_4*yx4+2*c_3*yx6"],
            ["-(c_2*y_0 ** 4*yx2+c_1*y_0 ** 4*yx5-c_4*y_0 ** 4*yx6+c_5*y_0 ** 4*yx5-2*c_2*c_6 ** 2*yx5 ** 2+c_1*c_6 ** 4*yx5-c_4*c_6 ** 4*yx6+c_5*c_6 ** 4*yx5+c_2*c_6 ** 3*yx12+3*c_2*c_6*y_0 ** 3*yx2+c_2*c_6 ** 3*y_0*yx2+4*c_1*c_6*y_0 ** 3*yx5+4*c_1*c_6 ** 3*y_0*yx5-2*c_2*c_6*y_0*yx5 ** 2+c_2*c_6 ** 3*y_2*yx5-4*c_4*c_6*y_0 ** 3*yx6-4*c_4*c_6 ** 3*y_0*yx6+4*c_5*c_6*y_0 ** 3*yx5+4*c_5*c_6 ** 3*y_0*yx5+c_2*c_6*y_0 ** 2*yx12+2*c_2*c_6 ** 2*y_0*yx12-c_2*c_6 ** 2*y_2*yx15-c_2*c_6 ** 2*yx2*yx7+3*c_2*c_6 ** 2*y_0 ** 2*yx2+6*c_1*c_6 ** 2*y_0 ** 2*yx5-6*c_4*c_6 ** 2*y_0 ** 2*yx6+6*c_5*c_6 ** 2*y_0 ** 2*yx5-c_2*c_6*y_0*y_2*yx15-c_2*c_6*y_0*yx2*yx7+3*c_2*c_6*y_2*yx5*yx7+c_2*c_6*y_0 ** 2*y_2*yx5+2*c_2*c_6 ** 2*y_0*y_2*yx5)/(c_6+y_0) ** 4"],
            ["-(c_2*y_0 ** 4*yx3+c_1*y_0 ** 4*yx6-c_3*y_0 ** 4*yx7+c_4*y_0 ** 4*yx6+c_1*c_6 ** 4*yx6-c_3*c_6 ** 4*yx7+c_4*c_6 ** 4*yx6+c_2*c_6 ** 3*yx13+3*c_2*c_6*y_0 ** 3*yx3+c_2*c_6 ** 3*y_0*yx3+4*c_1*c_6*y_0 ** 3*yx6+4*c_1*c_6 ** 3*y_0*yx6+c_2*c_6 ** 3*y_2*yx6-4*c_3*c_6*y_0 ** 3*yx7-4*c_3*c_6 ** 3*y_0*yx7+4*c_4*c_6*y_0 ** 3*yx6+4*c_4*c_6 ** 3*y_0*yx6+c_2*c_6*y_0 ** 2*yx13+2*c_2*c_6 ** 2*y_0*yx13-c_2*c_6 ** 2*y_2*yx16-c_2*c_6 ** 2*yx3*yx7-2*c_2*c_6 ** 2*yx5*yx6+3*c_2*c_6 ** 2*y_0 ** 2*yx3+6*c_1*c_6 ** 2*y_0 ** 2*yx6-6*c_3*c_6 ** 2*y_0 ** 2*yx7+6*c_4*c_6 ** 2*y_0 ** 2*yx6-c_2*c_6*y_0*y_2*yx16-c_2*c_6*y_0*yx3*yx7-2*c_2*c_6*y_0*yx5*yx6+3*c_2*c_6*y_2*yx6*yx7+c_2*c_6*y_0 ** 2*y_2*yx6+2*c_2*c_6 ** 2*y_0*y_2*yx6)/(c_6+y_0) ** 4"],
            ["(c_0*c_6 ** 5+c_0*y_0 ** 5+c_1*y_0 ** 6+c_2*y_0 ** 5*y_2-2*c_2*y_0 ** 5*yx5-2*c_1*y_0 ** 5*yx7+10*c_0*c_6 ** 2*y_0 ** 3+10*c_0*c_6 ** 3*y_0 ** 2+10*c_1*c_6 ** 2*y_0 ** 4+10*c_1*c_6 ** 3*y_0 ** 3+5*c_1*c_6 ** 4*y_0 ** 2+5*c_0*c_6*y_0 ** 4+5*c_0*c_6 ** 4*y_0+5*c_1*c_6*y_0 ** 5+c_1*c_6 ** 5*y_0+c_2*c_6 ** 4*yx5-2*c_1*c_6 ** 5*yx7-c_2*c_6 ** 3*yx15-2*c_2*c_6 ** 4*yx15+4*c_2*c_6*y_0 ** 4*y_2+c_2*c_6 ** 4*y_0*y_2+c_2*c_6*y_0 ** 3*yx5+3*c_2*c_6 ** 3*y_0*yx5-8*c_2*c_6*y_0 ** 4*yx5-2*c_2*c_6 ** 4*y_0*yx5-10*c_1*c_6*y_0 ** 4*yx7-10*c_1*c_6 ** 4*y_0*yx7-3*c_2*c_6*y_2*yx7 ** 2-c_2*c_6 ** 3*y_2*yx7-2*c_2*c_6 ** 4*y_2*yx7-c_2*c_6*y_0 ** 2*yx15-2*c_2*c_6 ** 2*y_0*yx15-2*c_2*c_6*y_0 ** 3*yx15-6*c_2*c_6 ** 3*y_0*yx15+c_2*c_6 ** 2*y_2*yx17+2*c_2*c_6 ** 3*y_2*yx17+3*c_2*c_6 ** 2*yx5*yx7+6*c_2*c_6 ** 3*yx5*yx7+6*c_2*c_6 ** 2*y_0 ** 3*y_2+4*c_2*c_6 ** 3*y_0 ** 2*y_2+3*c_2*c_6 ** 2*y_0 ** 2*yx5-12*c_2*c_6 ** 2*y_0 ** 3*yx5-8*c_2*c_6 ** 3*y_0 ** 2*yx5-20*c_1*c_6 ** 2*y_0 ** 3*yx7-20*c_1*c_6 ** 3*y_0 ** 2*yx7-6*c_2*c_6 ** 2*y_2*yx7 ** 2-6*c_2*c_6 ** 2*y_0 ** 2*yx15-6*c_2*c_6 ** 2*y_0 ** 2*y_2*yx7+c_2*c_6*y_0*y_2*yx17+3*c_2*c_6*y_0*yx5*yx7-6*c_2*c_6*y_0*y_2*yx7 ** 2-c_2*c_6*y_0 ** 2*y_2*yx7-2*c_2*c_6 ** 2*y_0*y_2*yx7-2*c_2*c_6*y_0 ** 3*y_2*yx7-6*c_2*c_6 ** 3*y_0*y_2*yx7+2*c_2*c_6*y_0 ** 2*y_2*yx17+4*c_2*c_6 ** 2*y_0*y_2*yx17+6*c_2*c_6*y_0 ** 2*yx5*yx7+12*c_2*c_6 ** 2*y_0*yx5*yx7)/(c_6+y_0) ** 5"],
            ["c_4*y_1-c_5*y_2+3*c_4*yx3+3*c_5*yx2+3*c_4*yx9-3*c_5*yx8"],
            ["c_4*yx4-2*c_4*yx3-c_4*y_1+c_5*yx3-c_4*yx9+2*c_4*yx10-2*c_5*yx9+c_3*yx12"],
            ["c_4*y_1+c_4*yx3+c_3*yx5-2*c_4*yx4-2*c_4*yx10+c_4*yx11-c_5*yx10+2*c_3*yx13"],
            ["c_3*y_0-c_4*y_1+3*c_4*yx4+3*c_3*yx6-3*c_4*yx11+3*c_3*yx14"],
            ["-(c_2*y_0 ** 5*yx8-c_4*y_0 ** 5*yx6-c_5*y_0 ** 5*yx5+c_1*y_0 ** 5*yx12-2*c_4*y_0 ** 5*yx13+2*c_5*y_0 ** 5*yx12-c_4*c_6 ** 5*yx6-c_5*c_6 ** 5*yx5+c_1*c_6 ** 5*yx12-2*c_4*c_6 ** 5*yx13+2*c_5*c_6 ** 5*yx12+4*c_2*c_6*y_0 ** 4*yx8+c_2*c_6 ** 4*y_0*yx8-5*c_4*c_6*y_0 ** 4*yx6-5*c_4*c_6 ** 4*y_0*yx6-5*c_5*c_6*y_0 ** 4*yx5-5*c_5*c_6 ** 4*y_0*yx5+5*c_1*c_6*y_0 ** 4*yx12+5*c_1*c_6 ** 4*y_0*yx12+c_2*c_6 ** 4*y_2*yx12-10*c_4*c_6*y_0 ** 4*yx13-10*c_4*c_6 ** 4*y_0*yx13+10*c_5*c_6*y_0 ** 4*yx12+10*c_5*c_6 ** 4*y_0*yx12+2*c_2*c_6 ** 4*yx2*yx5+c_2*c_6 ** 3*yx2*yx15-2*c_2*c_6 ** 3*y_2*yx5 ** 2+6*c_2*c_6 ** 2*y_0 ** 3*yx8+4*c_2*c_6 ** 3*y_0 ** 2*yx8-10*c_4*c_6 ** 2*y_0 ** 3*yx6-10*c_4*c_6 ** 3*y_0 ** 2*yx6-10*c_5*c_6 ** 2*y_0 ** 3*yx5-10*c_5*c_6 ** 3*y_0 ** 2*yx5+10*c_1*c_6 ** 2*y_0 ** 3*yx12+10*c_1*c_6 ** 3*y_0 ** 2*yx12-20*c_4*c_6 ** 2*y_0 ** 3*yx13-20*c_4*c_6 ** 3*y_0 ** 2*yx13+20*c_5*c_6 ** 2*y_0 ** 3*yx12+20*c_5*c_6 ** 3*y_0 ** 2*yx12-2*c_2*c_6*y_0 ** 2*y_2*yx5 ** 2-4*c_2*c_6 ** 2*y_0*y_2*yx5 ** 2+3*c_2*c_6 ** 2*y_0 ** 2*y_2*yx12+6*c_2*c_6 ** 2*y_0 ** 2*yx2*yx5+c_2*c_6*y_0 ** 3*y_2*yx12+3*c_2*c_6 ** 3*y_0*y_2*yx12+2*c_2*c_6*y_0 ** 3*yx2*yx5+6*c_2*c_6 ** 3*y_0*yx2*yx5+3*c_2*c_6*y_2*yx2*yx7 ** 2+c_2*c_6*y_0 ** 2*yx2*yx15+2*c_2*c_6 ** 2*y_0*yx2*yx15-c_2*c_6 ** 2*y_2*yx2*yx17-3*c_2*c_6 ** 2*yx2*yx5*yx7-c_2*c_6*y_0*y_2*yx2*yx17-3*c_2*c_6*y_0*yx2*yx5*yx7)/(c_6+y_0) ** 5"],
            ["-(c_4*y_0 ** 5*yx6+c_2*y_0 ** 5*yx9+c_1*y_0 ** 5*yx13+c_4*y_0 ** 5*yx13-c_3*y_0 ** 5*yx15-c_4*y_0 ** 5*yx14+c_5*y_0 ** 5*yx13+c_4*c_6 ** 5*yx6+c_1*c_6 ** 5*yx13+c_4*c_6 ** 5*yx13-c_3*c_6 ** 5*yx15-c_4*c_6 ** 5*yx14+c_5*c_6 ** 5*yx13+5*c_4*c_6*y_0 ** 4*yx6+5*c_4*c_6 ** 4*y_0*yx6+4*c_2*c_6*y_0 ** 4*yx9+c_2*c_6 ** 4*y_0*yx9+5*c_1*c_6*y_0 ** 4*yx13+5*c_1*c_6 ** 4*y_0*yx13+c_2*c_6 ** 4*y_2*yx13+5*c_4*c_6*y_0 ** 4*yx13+5*c_4*c_6 ** 4*y_0*yx13-5*c_3*c_6*y_0 ** 4*yx15-5*c_3*c_6 ** 4*y_0*yx15-5*c_4*c_6*y_0 ** 4*yx14-5*c_4*c_6 ** 4*y_0*yx14+5*c_5*c_6*y_0 ** 4*yx13+5*c_5*c_6 ** 4*y_0*yx13+c_2*c_6 ** 4*yx2*yx6+c_2*c_6 ** 4*yx3*yx5+c_2*c_6 ** 3*yx3*yx15+10*c_4*c_6 ** 2*y_0 ** 3*yx6+10*c_4*c_6 ** 3*y_0 ** 2*yx6+6*c_2*c_6 ** 2*y_0 ** 3*yx9+4*c_2*c_6 ** 3*y_0 ** 2*yx9+10*c_1*c_6 ** 2*y_0 ** 3*yx13+10*c_1*c_6 ** 3*y_0 ** 2*yx13+10*c_4*c_6 ** 2*y_0 ** 3*yx13+10*c_4*c_6 ** 3*y_0 ** 2*yx13-10*c_3*c_6 ** 2*y_0 ** 3*yx15-10*c_3*c_6 ** 3*y_0 ** 2*yx15-10*c_4*c_6 ** 2*y_0 ** 3*yx14-10*c_4*c_6 ** 3*y_0 ** 2*yx14+10*c_5*c_6 ** 2*y_0 ** 3*yx13+10*c_5*c_6 ** 3*y_0 ** 2*yx13+3*c_2*c_6 ** 2*y_0 ** 2*y_2*yx13+3*c_2*c_6 ** 2*y_0 ** 2*yx2*yx6+3*c_2*c_6 ** 2*y_0 ** 2*yx3*yx5+c_2*c_6*y_0 ** 3*y_2*yx13+3*c_2*c_6 ** 3*y_0*y_2*yx13+c_2*c_6*y_0 ** 3*yx2*yx6+c_2*c_6*y_0 ** 3*yx3*yx5+3*c_2*c_6 ** 3*y_0*yx2*yx6+3*c_2*c_6 ** 3*y_0*yx3*yx5+3*c_2*c_6*y_2*yx3*yx7 ** 2-2*c_2*c_6 ** 3*y_2*yx5*yx6+c_2*c_6*y_0 ** 2*yx3*yx15+2*c_2*c_6 ** 2*y_0*yx3*yx15-c_2*c_6 ** 2*y_2*yx3*yx17-3*c_2*c_6 ** 2*yx3*yx5*yx7-c_2*c_6*y_0*y_2*yx3*yx17-3*c_2*c_6*y_0*yx3*yx5*yx7-2*c_2*c_6*y_0 ** 2*y_2*yx5*yx6-4*c_2*c_6 ** 2*y_0*y_2*yx5*yx6)/(c_6+y_0) ** 5"],
            ["-(c_2*y_0 ** 5*yx10-c_4*y_0 ** 5*yx6-c_3*y_0 ** 5*yx7+c_1*y_0 ** 5*yx14+2*c_4*y_0 ** 5*yx14-2*c_3*y_0 ** 5*yx16-c_3*c_6 ** 5*yx7-c_4*c_6 ** 5*yx6+c_1*c_6 ** 5*yx14+2*c_4*c_6 ** 5*yx14-2*c_3*c_6 ** 5*yx16-5*c_3*c_6*y_0 ** 4*yx7-5*c_3*c_6 ** 4*y_0*yx7-5*c_4*c_6*y_0 ** 4*yx6-5*c_4*c_6 ** 4*y_0*yx6+4*c_2*c_6*y_0 ** 4*yx10+c_2*c_6 ** 4*y_0*yx10+5*c_1*c_6*y_0 ** 4*yx14+5*c_1*c_6 ** 4*y_0*yx14+c_2*c_6 ** 4*y_2*yx14+10*c_4*c_6*y_0 ** 4*yx14+10*c_4*c_6 ** 4*y_0*yx14-10*c_3*c_6*y_0 ** 4*yx16-10*c_3*c_6 ** 4*y_0*yx16+2*c_2*c_6 ** 4*yx3*yx6+c_2*c_6 ** 3*yx4*yx15-2*c_2*c_6 ** 3*y_2*yx6 ** 2-10*c_3*c_6 ** 2*y_0 ** 3*yx7-10*c_3*c_6 ** 3*y_0 ** 2*yx7-10*c_4*c_6 ** 2*y_0 ** 3*yx6-10*c_4*c_6 ** 3*y_0 ** 2*yx6+6*c_2*c_6 ** 2*y_0 ** 3*yx10+4*c_2*c_6 ** 3*y_0 ** 2*yx10+10*c_1*c_6 ** 2*y_0 ** 3*yx14+10*c_1*c_6 ** 3*y_0 ** 2*yx14+20*c_4*c_6 ** 2*y_0 ** 3*yx14+20*c_4*c_6 ** 3*y_0 ** 2*yx14-20*c_3*c_6 ** 2*y_0 ** 3*yx16-20*c_3*c_6 ** 3*y_0 ** 2*yx16-2*c_2*c_6*y_0 ** 2*y_2*yx6 ** 2-4*c_2*c_6 ** 2*y_0*y_2*yx6 ** 2+3*c_2*c_6 ** 2*y_0 ** 2*y_2*yx14+6*c_2*c_6 ** 2*y_0 ** 2*yx3*yx6+c_2*c_6*y_0 ** 3*y_2*yx14+3*c_2*c_6 ** 3*y_0*y_2*yx14+2*c_2*c_6*y_0 ** 3*yx3*yx6+6*c_2*c_6 ** 3*y_0*yx3*yx6+3*c_2*c_6*y_2*yx4*yx7 ** 2+c_2*c_6*y_0 ** 2*yx4*yx15+2*c_2*c_6 ** 2*y_0*yx4*yx15-c_2*c_6 ** 2*y_2*yx4*yx17-3*c_2*c_6 ** 2*yx4*yx5*yx7-c_2*c_6*y_0*y_2*yx4*yx17-3*c_2*c_6*y_0*yx4*yx5*yx7)/(c_6+y_0) ** 5"],
            ["-(2*c_2*y_0 ** 5*yx12-c_1*y_0 ** 5*yx5-c_2*y_0 ** 5*yx2+2*c_1*y_0 ** 5*yx15-c_4*y_0 ** 5*yx16+c_5*y_0 ** 5*yx15+2*c_2*c_6 ** 3*yx5 ** 2+2*c_2*c_6 ** 4*yx5 ** 2-c_1*c_6 ** 5*yx5-c_2*c_6 ** 4*yx12+2*c_1*c_6 ** 5*yx15-c_4*c_6 ** 5*yx16+c_5*c_6 ** 5*yx15+6*c_2*c_6 ** 2*y_0 ** 2*yx5 ** 2-4*c_2*c_6*y_0 ** 4*yx2-c_2*c_6 ** 4*y_0*yx2-5*c_1*c_6*y_0 ** 4*yx5-5*c_1*c_6 ** 4*y_0*yx5-c_2*c_6 ** 4*y_2*yx5-c_2*c_6*y_0 ** 3*yx12-3*c_2*c_6 ** 3*y_0*yx12+8*c_2*c_6*y_0 ** 4*yx12+2*c_2*c_6 ** 4*y_0*yx12+10*c_1*c_6*y_0 ** 4*yx15+10*c_1*c_6 ** 4*y_0*yx15+c_2*c_6 ** 3*y_2*yx15+2*c_2*c_6 ** 4*y_2*yx15-5*c_4*c_6*y_0 ** 4*yx16-5*c_4*c_6 ** 4*y_0*yx16+5*c_5*c_6*y_0 ** 4*yx15+5*c_5*c_6 ** 4*y_0*yx15+c_2*c_6 ** 3*yx2*yx7+2*c_2*c_6 ** 4*yx2*yx7+2*c_2*c_6 ** 3*yx5*yx15-6*c_2*c_6 ** 2*y_0 ** 3*yx2-4*c_2*c_6 ** 3*y_0 ** 2*yx2-10*c_1*c_6 ** 2*y_0 ** 3*yx5-10*c_1*c_6 ** 3*y_0 ** 2*yx5+2*c_2*c_6*y_0 ** 2*yx5 ** 2+4*c_2*c_6 ** 2*y_0*yx5 ** 2+2*c_2*c_6*y_0 ** 3*yx5 ** 2+6*c_2*c_6 ** 3*y_0*yx5 ** 2-3*c_2*c_6 ** 2*y_0 ** 2*yx12+12*c_2*c_6 ** 2*y_0 ** 3*yx12+8*c_2*c_6 ** 3*y_0 ** 2*yx12+20*c_1*c_6 ** 2*y_0 ** 3*yx15+20*c_1*c_6 ** 3*y_0 ** 2*yx15-10*c_4*c_6 ** 2*y_0 ** 3*yx16-10*c_4*c_6 ** 3*y_0 ** 2*yx16+10*c_5*c_6 ** 2*y_0 ** 3*yx15+10*c_5*c_6 ** 3*y_0 ** 2*yx15-6*c_2*c_6 ** 2*yx5 ** 2*yx7-3*c_2*c_6 ** 2*y_0 ** 2*y_2*yx5+6*c_2*c_6 ** 2*y_0 ** 2*y_2*yx15+6*c_2*c_6 ** 2*y_0 ** 2*yx2*yx7-c_2*c_6*y_0 ** 3*y_2*yx5-3*c_2*c_6 ** 3*y_0*y_2*yx5+c_2*c_6*y_0 ** 2*y_2*yx15+2*c_2*c_6 ** 2*y_0*y_2*yx15+2*c_2*c_6*y_0 ** 3*y_2*yx15+6*c_2*c_6 ** 3*y_0*y_2*yx15+c_2*c_6*y_0 ** 2*yx2*yx7+2*c_2*c_6 ** 2*y_0*yx2*yx7+2*c_2*c_6*y_0 ** 3*yx2*yx7+6*c_2*c_6 ** 3*y_0*yx2*yx7-6*c_2*c_6*y_0*yx5 ** 2*yx7+6*c_2*c_6*y_2*yx5*yx7 ** 2-3*c_2*c_6 ** 2*y_2*yx5*yx7-4*c_2*c_6 ** 3*y_2*yx5*yx7+2*c_2*c_6*y_0 ** 2*yx5*yx15+4*c_2*c_6 ** 2*y_0*yx5*yx15-2*c_2*c_6 ** 2*y_2*yx5*yx17-3*c_2*c_6*y_0*y_2*yx5*yx7-2*c_2*c_6*y_0*y_2*yx5*yx17-4*c_2*c_6*y_0 ** 2*y_2*yx5*yx7-8*c_2*c_6 ** 2*y_0*y_2*yx5*yx7)/(c_6+y_0) ** 5"],
            ["-(2*c_2*y_0 ** 5*yx13-c_1*y_0 ** 5*yx6-c_2*y_0 ** 5*yx3+2*c_1*y_0 ** 5*yx16-c_3*y_0 ** 5*yx17+c_4*y_0 ** 5*yx16-c_1*c_6 ** 5*yx6-c_2*c_6 ** 4*yx13+2*c_1*c_6 ** 5*yx16-c_3*c_6 ** 5*yx17+c_4*c_6 ** 5*yx16-4*c_2*c_6*y_0 ** 4*yx3-c_2*c_6 ** 4*y_0*yx3-5*c_1*c_6*y_0 ** 4*yx6-5*c_1*c_6 ** 4*y_0*yx6-c_2*c_6 ** 4*y_2*yx6-c_2*c_6*y_0 ** 3*yx13-3*c_2*c_6 ** 3*y_0*yx13+8*c_2*c_6*y_0 ** 4*yx13+2*c_2*c_6 ** 4*y_0*yx13+10*c_1*c_6*y_0 ** 4*yx16+10*c_1*c_6 ** 4*y_0*yx16+c_2*c_6 ** 3*y_2*yx16+2*c_2*c_6 ** 4*y_2*yx16-5*c_3*c_6*y_0 ** 4*yx17-5*c_3*c_6 ** 4*y_0*yx17+5*c_4*c_6*y_0 ** 4*yx16+5*c_4*c_6 ** 4*y_0*yx16+c_2*c_6 ** 3*yx3*yx7+2*c_2*c_6 ** 3*yx5*yx6+2*c_2*c_6 ** 4*yx3*yx7+2*c_2*c_6 ** 4*yx5*yx6+2*c_2*c_6 ** 3*yx6*yx15-6*c_2*c_6 ** 2*y_0 ** 3*yx3-4*c_2*c_6 ** 3*y_0 ** 2*yx3-10*c_1*c_6 ** 2*y_0 ** 3*yx6-10*c_1*c_6 ** 3*y_0 ** 2*yx6-3*c_2*c_6 ** 2*y_0 ** 2*yx13+12*c_2*c_6 ** 2*y_0 ** 3*yx13+8*c_2*c_6 ** 3*y_0 ** 2*yx13+20*c_1*c_6 ** 2*y_0 ** 3*yx16+20*c_1*c_6 ** 3*y_0 ** 2*yx16-10*c_3*c_6 ** 2*y_0 ** 3*yx17-10*c_3*c_6 ** 3*y_0 ** 2*yx17+10*c_4*c_6 ** 2*y_0 ** 3*yx16+10*c_4*c_6 ** 3*y_0 ** 2*yx16-3*c_2*c_6 ** 2*y_0 ** 2*y_2*yx6+6*c_2*c_6 ** 2*y_0 ** 2*y_2*yx16+6*c_2*c_6 ** 2*y_0 ** 2*yx3*yx7+6*c_2*c_6 ** 2*y_0 ** 2*yx5*yx6-c_2*c_6*y_0 ** 3*y_2*yx6-3*c_2*c_6 ** 3*y_0*y_2*yx6+c_2*c_6*y_0 ** 2*y_2*yx16+2*c_2*c_6 ** 2*y_0*y_2*yx16+2*c_2*c_6*y_0 ** 3*y_2*yx16+6*c_2*c_6 ** 3*y_0*y_2*yx16+c_2*c_6*y_0 ** 2*yx3*yx7+2*c_2*c_6 ** 2*y_0*yx3*yx7+2*c_2*c_6*y_0 ** 2*yx5*yx6+2*c_2*c_6*y_0 ** 3*yx3*yx7+4*c_2*c_6 ** 2*y_0*yx5*yx6+6*c_2*c_6 ** 3*y_0*yx3*yx7+2*c_2*c_6*y_0 ** 3*yx5*yx6+6*c_2*c_6 ** 3*y_0*yx5*yx6+6*c_2*c_6*y_2*yx6*yx7 ** 2-3*c_2*c_6 ** 2*y_2*yx6*yx7-4*c_2*c_6 ** 3*y_2*yx6*yx7+2*c_2*c_6*y_0 ** 2*yx6*yx15+4*c_2*c_6 ** 2*y_0*yx6*yx15-2*c_2*c_6 ** 2*y_2*yx6*yx17-6*c_2*c_6 ** 2*yx5*yx6*yx7-3*c_2*c_6*y_0*y_2*yx6*yx7-2*c_2*c_6*y_0*y_2*yx6*yx17-6*c_2*c_6*y_0*yx5*yx6*yx7-4*c_2*c_6*y_0 ** 2*y_2*yx6*yx7-8*c_2*c_6 ** 2*y_0*y_2*yx6*yx7)/(c_6+y_0) ** 5"],
            ["-(c_1*y_0 ** 6-c_0*y_0 ** 5-c_0*c_6 ** 5+c_2*y_0 ** 5*y_2-3*c_2*y_0 ** 5*yx5-3*c_1*y_0 ** 5*yx7+3*c_2*y_0 ** 5*yx15+3*c_1*y_0 ** 5*yx17-10*c_0*c_6 ** 2*y_0 ** 3-10*c_0*c_6 ** 3*y_0 ** 2+10*c_1*c_6 ** 2*y_0 ** 4+10*c_1*c_6 ** 3*y_0 ** 3+5*c_1*c_6 ** 4*y_0 ** 2-5*c_0*c_6*y_0 ** 4-5*c_0*c_6 ** 4*y_0+5*c_1*c_6*y_0 ** 5+c_1*c_6 ** 5*y_0+c_2*c_6 ** 4*yx5-3*c_1*c_6 ** 5*yx7-c_2*c_6 ** 3*yx15-3*c_2*c_6 ** 4*yx15+3*c_1*c_6 ** 5*yx17+4*c_2*c_6*y_0 ** 4*y_2+c_2*c_6 ** 4*y_0*y_2+c_2*c_6*y_0 ** 3*yx5+3*c_2*c_6 ** 3*y_0*yx5-12*c_2*c_6*y_0 ** 4*yx5-3*c_2*c_6 ** 4*y_0*yx5-15*c_1*c_6*y_0 ** 4*yx7-15*c_1*c_6 ** 4*y_0*yx7-3*c_2*c_6*y_2*yx7 ** 2+9*c_2*c_6*y_2*yx7 ** 3-c_2*c_6 ** 3*y_2*yx7-3*c_2*c_6 ** 4*y_2*yx7-c_2*c_6*y_0 ** 2*yx15-2*c_2*c_6 ** 2*y_0*yx15-3*c_2*c_6*y_0 ** 3*yx15-9*c_2*c_6 ** 3*y_0*yx15+12*c_2*c_6*y_0 ** 4*yx15+3*c_2*c_6 ** 4*y_0*yx15+15*c_1*c_6*y_0 ** 4*yx17+15*c_1*c_6 ** 4*y_0*yx17+c_2*c_6 ** 2*y_2*yx17+3*c_2*c_6 ** 3*y_2*yx17+3*c_2*c_6 ** 4*y_2*yx17+3*c_2*c_6 ** 2*yx5*yx7+9*c_2*c_6 ** 3*yx5*yx7+6*c_2*c_6 ** 4*yx5*yx7+3*c_2*c_6 ** 3*yx7*yx15+6*c_2*c_6 ** 2*y_0 ** 3*y_2+4*c_2*c_6 ** 3*y_0 ** 2*y_2+3*c_2*c_6 ** 2*y_0 ** 2*yx5-18*c_2*c_6 ** 2*y_0 ** 3*yx5-12*c_2*c_6 ** 3*y_0 ** 2*yx5-30*c_1*c_6 ** 2*y_0 ** 3*yx7-30*c_1*c_6 ** 3*y_0 ** 2*yx7-9*c_2*c_6 ** 2*y_2*yx7 ** 2-6*c_2*c_6 ** 3*y_2*yx7 ** 2-9*c_2*c_6 ** 2*y_0 ** 2*yx15+18*c_2*c_6 ** 2*y_0 ** 3*yx15+12*c_2*c_6 ** 3*y_0 ** 2*yx15+30*c_1*c_6 ** 2*y_0 ** 3*yx17+30*c_1*c_6 ** 3*y_0 ** 2*yx17-9*c_2*c_6 ** 2*yx5*yx7 ** 2-6*c_2*c_6*y_0 ** 2*y_2*yx7 ** 2-12*c_2*c_6 ** 2*y_0*y_2*yx7 ** 2-9*c_2*c_6 ** 2*y_0 ** 2*y_2*yx7+9*c_2*c_6 ** 2*y_0 ** 2*y_2*yx17+18*c_2*c_6 ** 2*y_0 ** 2*yx5*yx7+c_2*c_6*y_0*y_2*yx17+3*c_2*c_6*y_0*yx5*yx7-9*c_2*c_6*y_0*y_2*yx7 ** 2-c_2*c_6*y_0 ** 2*y_2*yx7-2*c_2*c_6 ** 2*y_0*y_2*yx7-3*c_2*c_6*y_0 ** 3*y_2*yx7-9*c_2*c_6 ** 3*y_0*y_2*yx7+3*c_2*c_6*y_0 ** 2*y_2*yx17+6*c_2*c_6 ** 2*y_0*y_2*yx17+3*c_2*c_6*y_0 ** 3*y_2*yx17+9*c_2*c_6 ** 3*y_0*y_2*yx17-9*c_2*c_6*y_0*yx5*yx7 ** 2+9*c_2*c_6*y_0 ** 2*yx5*yx7+18*c_2*c_6 ** 2*y_0*yx5*yx7+6*c_2*c_6*y_0 ** 3*yx5*yx7+18*c_2*c_6 ** 3*y_0*yx5*yx7+3*c_2*c_6*y_0 ** 2*yx7*yx15+6*c_2*c_6 ** 2*y_0*yx7*yx15-3*c_2*c_6 ** 2*y_2*yx7*yx17-3*c_2*c_6*y_0*y_2*yx7*yx17)/(c_6+y_0) ** 5"]
        ])


        closer = NormalCloser(n_moments, multivariate=True)
        answer, lhs_answer = closer.parametric_closer_wrapper(mfk, central_from_raw_exprs, species, k_counter, prob_moments)

        self.assertTrue(sympy_expressions_equal(answer, expected))

    def test_normal_closer_wrapper_univariate(self):
        mfk = to_sympy_matrix([
            ["(c_2*c_6*y_2*yx32 - c_2*c_6*yx5*(c_6 + y_0)**3 + c_2*c_6*(c_6 + y_0)**2*(y_2*yx7 + yx15) - c_2*c_6*(c_6 + y_0)*(y_2*yx17 + yx30) - c_2*y_0*y_2*(c_6 + y_0)**4 + (c_0 - c_1*y_0)*(c_6 + y_0)**5)/(c_6 + y_0)**5"],
            ["c_3*y_0 - c_4*y_1"],
            ["c_4*y_1 - c_5*y_2"],
            ["c_4*y_1 + 2*c_4*yx3 + c_5*y_2 - 2*c_5*yx2"],
            ["c_3*yx5 - c_4*y_1 + c_4*yx4 - yx3*(c_4 + c_5)"],
            ["c_3*y_0 + 2*c_3*yx6 + c_4*y_1 - 2*c_4*yx4"],
            ["(-c_2*c_6*y_2*yx30 + c_2*c_6*(c_6 + y_0)*(y_2*yx15 + yx27) - c_2*y_0*yx2*(c_6 + y_0)**3 + c_4*yx6*(c_6 + y_0)**4 - (c_6 + y_0)**2*(c_2*c_6*yx12 + yx5*(c_2*c_6*y_2 + (c_1 + c_5)*(c_6 + y_0)**2)))/(c_6 + y_0)**4"],
            ["(-c_2*c_6*y_2*yx31 + c_2*c_6*(c_6 + y_0)*(y_2*yx16 + yx28) - c_2*y_0*yx3*(c_6 + y_0)**3 + c_3*yx7*(c_6 + y_0)**4 - (c_6 + y_0)**2*(c_2*c_6*yx13 + yx6*(c_2*c_6*y_2 + (c_1 + c_4)*(c_6 + y_0)**2)))/(c_6 + y_0)**4"],
            ["(-c_2*y_2*yx32*(c_6*(2*y_0 + 1) + 2*y_0**2 - 4*y_0*(c_6 + y_0) + 2*(c_6 + y_0)**2) + c_2*yx5*(c_6 + y_0)**3*(2*c_6*y_0 + c_6 - 2*y_0*(2*c_6 + y_0)) + c_2*(c_6 + y_0)*(y_2*yx17 + yx30)*(c_6*(2*y_0 + 1) + 2*y_0**2 - 4*y_0*(c_6 + y_0) + 2*(c_6 + y_0)**2) + (c_6 + y_0)**4*(c_0*c_6 + c_0*y_0 + c_1*c_6*y_0 + c_1*y_0**2 + c_2*y_0*y_2) - (c_6 + y_0)**2*(c_2*yx15*(c_6*(2*y_0 + 1) + 2*y_0**2 - 4*y_0*(c_6 + y_0) + 2*(c_6 + y_0)**2) + yx7*(2*c_1*(c_6 + y_0)**3 + c_2*c_6*y_2*(2*y_0 + 1) + 2*c_2*y_2*(y_0**2 - 2*y_0*(c_6 + y_0) + (c_6 + y_0)**2))))/(c_6 + y_0)**5"],
            ["c_4*y_1 + 3*c_4*yx3 + 3*c_4*yx9 - c_5*y_2 + 3*c_5*yx2 - 3*c_5*yx8"],
            ["c_3*yx12 - c_4*y_1 + 2*c_4*yx10 - 2*c_4*yx3 + c_4*yx4 - c_4*yx9 + c_5*yx3 - 2*c_5*yx9"],
            ["2*c_3*yx13 + c_3*yx5 + c_4*y_1 - 2*c_4*yx10 + c_4*yx11 + c_4*yx3 - 2*c_4*yx4 - c_5*yx10"],
            ["c_3*y_0 + 3*c_3*yx14 + 3*c_3*yx6 - c_4*y_1 - 3*c_4*yx11 + 3*c_4*yx4"],
            ["(-c_2*c_6*y_2*yx2*yx32 + c_2*c_6*yx2*(c_6 + y_0)*(y_2*yx17 + yx30) + c_2*c_6*(c_6 + y_0)**2*(-y_2*yx2*yx7 + y_2*yx27 - yx15*yx2) + c_4*(c_6 + y_0)**5*(2*yx13 + yx6) + (c_6 + y_0)**4*(-c_0*c_6*yx2 - c_0*y_0*yx2 + c_1*c_6*y_0*yx2 + c_1*y_0**2*yx2 + c_2*y_0*y_2*yx2 - c_2*y_0*yx8 - 2*c_4*c_6*y_1*yx5 - 2*c_4*y_0*y_1*yx5 + 2*c_5*c_6*y_2*yx5 + 2*c_5*y_0*y_2*yx5 - yx2*(c_2*y_0*y_2 - (c_0 - c_1*y_0)*(c_6 + y_0))) + (c_6 + y_0)**3*(-c_2*c_6*yx23 - yx12*(c_2*c_6*y_2 + (c_1 + 2*c_5)*(c_6 + y_0)**2) + yx5*(c_2*c_6*yx2 + (c_6 + y_0)**2*(2*c_4*y_1 - 2*c_5*y_2 + c_5))))/(c_6 + y_0)**5"],
            ["(-c_2*c_6*y_2*yx3*yx32 + c_2*c_6*yx3*(c_6 + y_0)*(y_2*yx17 + yx30) + (c_6 + y_0)**5*(c_4*yx14 - yx6*(-c_4*y_1 + c_4 + c_5*y_2)) + (c_6 + y_0)**4*(-c_0*c_6*yx3 - c_0*y_0*yx3 + c_1*c_6*y_0*yx3 + c_1*y_0**2*yx3 + c_2*y_0*y_2*yx3 - c_2*y_0*yx9 - c_3*c_6*y_0*yx5 - c_3*y_0**2*yx5 + c_4*c_6*y_1*yx5 - c_4*c_6*y_1*yx6 + c_4*y_0*y_1*yx5 - c_4*y_0*y_1*yx6 + c_5*c_6*y_2*yx6 + c_5*y_0*y_2*yx6 - yx3*(-c_0*c_6 - c_0*y_0 + c_1*c_6*y_0 + c_1*y_0**2 + c_2*y_0*y_2)) + (c_6 + y_0)**3*(-c_2*c_6*yx24 - yx13*(c_2*c_6*y_2 + (c_6 + y_0)**2*(c_1 + c_4 + c_5)) + yx5*(c_2*c_6*yx3 + (c_6 + y_0)**2*(c_3*y_0 - c_4*y_1))) + (c_6 + y_0)**2*(c_2*c_6*y_2*yx28 - c_2*c_6*y_2*yx3*yx7 - yx15*(c_2*c_6*yx3 - c_3*(c_6 + y_0)**3)))/(c_6 + y_0)**5"],
            ["(-c_2*c_6*y_2*yx32*yx4 + c_2*c_6*yx4*(c_6 + y_0)*(y_2*yx17 + yx30) + (c_6 + y_0)**5*(2*c_3*yx16 + yx6*(2*c_3*y_0 - 2*c_4*y_1 + c_4)) + (c_6 + y_0)**4*(-c_0*c_6*yx4 - c_0*y_0*yx4 + c_1*c_6*y_0*yx4 + c_1*y_0**2*yx4 + c_2*y_0*y_2*yx4 - c_2*y_0*yx10 - 2*c_3*c_6*y_0*yx6 - 2*c_3*y_0**2*yx6 + 2*c_4*c_6*y_1*yx6 + 2*c_4*y_0*y_1*yx6 - yx4*(c_2*y_0*y_2 - (c_0 - c_1*y_0)*(c_6 + y_0))) + (c_6 + y_0)**3*(-c_2*c_6*yx25 + c_2*c_6*yx4*yx5 - yx14*(c_2*c_6*y_2 + (c_1 + 2*c_4)*(c_6 + y_0)**2)) + (c_6 + y_0)**2*(c_2*c_6*y_2*yx29 - c_2*c_6*yx15*yx4 - yx7*(c_2*c_6*y_2*yx4 - c_3*(c_6 + y_0)**3)))/(c_6 + y_0)**5"],
            ["2*c_2*c_6*y_2*yx17*yx5/(c_6**4 + 4*c_6**3*y_0 + 6*c_6**2*y_0**2 + 4*c_6*y_0**3 + y_0**4) - 2*c_2*c_6*y_2*yx32*yx5/(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5) + c_2*c_6*yx30*(2*c_6*y_2 + 2*y_0*y_2 + y_2 + 2*yx5)/(c_6**4 + 4*c_6**3*y_0 + 6*c_6**2*y_0**2 + 4*c_6*y_0**3 + y_0**4) + c_2*y_0*yx2/(c_6 + y_0) + c_2*yx12*(2*c_6*y_0 + c_6 - 2*y_0*(2*c_6 + y_0))/(c_6 + y_0)**2 - c_2*yx27*(c_6*(2*y_0 + 1) + 2*y_0**2 - 4*y_0*(c_6 + y_0) + 2*(c_6 + y_0)**2)/(c_6 + y_0)**3 + c_4*yx16 - yx15*(2*c_1 - 2*c_2*c_6*y_0*y_2/(c_6 + y_0)**3 + c_2*c_6*y_2/(c_6 + y_0)**3 + 2*c_2*c_6*yx5/(c_6 + y_0)**3 - 2*c_2*y_0**2*y_2/(c_6 + y_0)**3 + 2*c_2*y_2/(c_6 + y_0) + c_5) + yx5*(2*c_0 - 2*c_1*y_0 + c_1 - 2*c_2*c_6*y_0*y_2/(c_6 + y_0)**2 + c_2*c_6*y_2/(c_6 + y_0)**2 + 2*c_2*c_6*yx5/(c_6 + y_0)**2 - 2*c_2*y_0**2*y_2/(c_6 + y_0)**2) - yx7*(2*c_2*c_6*y_2*yx5/(c_6 + y_0)**3 - c_4*y_1 + c_5*y_2) + (-2*c_0*c_6*yx5 - 2*c_0*y_0*yx5 + 2*c_1*c_6*y_0*yx5 + 2*c_1*y_0**2*yx5 + 2*c_2*y_0*y_2*yx5 - c_4*c_6*y_1*yx7 - c_4*y_0*y_1*yx7 + c_5*c_6*y_2*yx7 + c_5*y_0*y_2*yx7)/(c_6 + y_0)"],
            ["(-2*c_1*c_6**5*yx16 + c_1*c_6**5*yx6 - 10*c_1*c_6**4*y_0*yx16 + 5*c_1*c_6**4*y_0*yx6 - 20*c_1*c_6**3*y_0**2*yx16 + 10*c_1*c_6**3*y_0**2*yx6 - 20*c_1*c_6**2*y_0**3*yx16 + 10*c_1*c_6**2*y_0**3*yx6 - 10*c_1*c_6*y_0**4*yx16 + 5*c_1*c_6*y_0**4*yx6 - 2*c_1*y_0**5*yx16 + c_1*y_0**5*yx6 - 2*c_2*c_6**4*y_0*yx13 + c_2*c_6**4*y_0*yx3 - 2*c_2*c_6**4*y_2*yx16 + c_2*c_6**4*y_2*yx6 + c_2*c_6**4*yx13 - 2*c_2*c_6**4*yx28 + 2*c_2*c_6**4*yx5*yx6 - 8*c_2*c_6**3*y_0**2*yx13 + 4*c_2*c_6**3*y_0**2*yx3 - 6*c_2*c_6**3*y_0*y_2*yx16 + 3*c_2*c_6**3*y_0*y_2*yx6 + 3*c_2*c_6**3*y_0*yx13 - 6*c_2*c_6**3*y_0*yx28 + 6*c_2*c_6**3*y_0*yx5*yx6 - c_2*c_6**3*y_2*yx16 + 2*c_2*c_6**3*y_2*yx31 - 2*c_2*c_6**3*y_2*yx6*yx7 - 2*c_2*c_6**3*yx15*yx6 - c_2*c_6**3*yx28 - 12*c_2*c_6**2*y_0**3*yx13 + 6*c_2*c_6**2*y_0**3*yx3 - 6*c_2*c_6**2*y_0**2*y_2*yx16 + 3*c_2*c_6**2*y_0**2*y_2*yx6 + 3*c_2*c_6**2*y_0**2*yx13 - 6*c_2*c_6**2*y_0**2*yx28 + 6*c_2*c_6**2*y_0**2*yx5*yx6 - 2*c_2*c_6**2*y_0*y_2*yx16 + 4*c_2*c_6**2*y_0*y_2*yx31 - 4*c_2*c_6**2*y_0*y_2*yx6*yx7 - 4*c_2*c_6**2*y_0*yx15*yx6 - 2*c_2*c_6**2*y_0*yx28 + 2*c_2*c_6**2*y_2*yx17*yx6 + c_2*c_6**2*y_2*yx31 + 2*c_2*c_6**2*yx30*yx6 - 8*c_2*c_6*y_0**4*yx13 + 4*c_2*c_6*y_0**4*yx3 - 2*c_2*c_6*y_0**3*y_2*yx16 + c_2*c_6*y_0**3*y_2*yx6 + c_2*c_6*y_0**3*yx13 - 2*c_2*c_6*y_0**3*yx28 + 2*c_2*c_6*y_0**3*yx5*yx6 - c_2*c_6*y_0**2*y_2*yx16 + 2*c_2*c_6*y_0**2*y_2*yx31 - 2*c_2*c_6*y_0**2*y_2*yx6*yx7 - 2*c_2*c_6*y_0**2*yx15*yx6 - c_2*c_6*y_0**2*yx28 + 2*c_2*c_6*y_0*y_2*yx17*yx6 + c_2*c_6*y_0*y_2*yx31 + 2*c_2*c_6*y_0*yx30*yx6 - 2*c_2*c_6*y_2*yx32*yx6 - 2*c_2*y_0**5*yx13 + c_2*y_0**5*yx3 + c_3*c_6**5*yx17 + 5*c_3*c_6**4*y_0*yx17 + 10*c_3*c_6**3*y_0**2*yx17 + 10*c_3*c_6**2*y_0**3*yx17 + 5*c_3*c_6*y_0**4*yx17 + c_3*y_0**5*yx17 - c_4*c_6**5*yx16 - 5*c_4*c_6**4*y_0*yx16 - 10*c_4*c_6**3*y_0**2*yx16 - 10*c_4*c_6**2*y_0**3*yx16 - 5*c_4*c_6*y_0**4*yx16 - c_4*y_0**5*yx16)/(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5)"],
            ["c_2*c_6*y_2*yx32*(3*c_6**2 + 6*c_6*y_0 + 3*c_6 + 3*y_0**2 + 3*y_0 - 3*yx7 + 1)/(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5) - c_2*c_6*yx30*(3*c_6**2 + 6*c_6*y_0 + 3*c_6 + 3*y_0**2 + 3*y_0 - 3*yx7 + 1)/(c_6**4 + 4*c_6**3*y_0 + 6*c_6**2*y_0**2 + 4*c_6*y_0**3 + y_0**4) - c_2*yx15*(3*c_6**2*y_0 - 3*c_6**2 + 6*c_6*y_0**2 - 3*c_6*y_0 + 3*c_6*yx7 - c_6 + 3*y_0**3)/(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) + c_2*yx5*(3*c_6*y_0 + 3*c_6*yx7 - c_6 + 3*y_0**2)/(c_6**2 + 2*c_6*y_0 + y_0**2) - yx17*(3*c_1 - 3*c_2*c_6*y_0*y_2/(c_6 + y_0)**4 - 3*c_2*c_6*y_2*yx7/(c_6 + y_0)**4 + c_2*c_6*y_2/(c_6 + y_0)**4 - 3*c_2*y_0**2*y_2/(c_6 + y_0)**4 - 3*c_2*y_0*y_2/(c_6 + y_0)**2 + 3*c_2*y_2/(c_6 + y_0) + 3*c_2*y_2/(c_6 + y_0)**2) - yx7*(-3*c_0 + 3*c_1*y_0 - 3*c_1 + 3*c_2*c_6*y_0*y_2/(c_6 + y_0)**3 + 3*c_2*c_6*y_2*yx7/(c_6 + y_0)**3 - c_2*c_6*y_2/(c_6 + y_0)**3 + 3*c_2*y_0**2*y_2/(c_6 + y_0)**3 + 3*c_2*y_0*y_2/(c_6 + y_0) - 3*c_2*y_2/(c_6 + y_0)) - (3*c_0*c_6*yx7 - c_0*c_6 + 3*c_0*y_0*yx7 - c_0*y_0 - 3*c_1*c_6*y_0*yx7 + c_1*c_6*y_0 - 3*c_1*y_0**2*yx7 + c_1*y_0**2 - 3*c_2*y_0*y_2*yx7 + c_2*y_0*y_2)/(c_6 + y_0)"],
            ["6*c_4*y_1*yx2 + c_4*y_1 + 4*c_4*yx19 + 4*c_4*yx3 + 6*c_4*yx9 + 6*c_5*y_2*yx2 + c_5*y_2 - 4*c_5*yx18 - 4*c_5*yx2 + 6*c_5*yx8"],
            ["c_3*yx23 - 3*c_4*y_1*yx2 + 3*c_4*y_1*yx3 - c_4*y_1 + 3*c_4*yx10 - c_4*yx19 + 3*c_4*yx20 - 3*c_4*yx3 + c_4*yx4 - 3*c_4*yx9 + 3*c_5*y_2*yx3 - 3*c_5*yx19 - c_5*yx3 + 3*c_5*yx9"],
            ["c_3*y_0*yx2 + c_3*yx12 + 2*c_3*yx24 + c_4*y_1*yx2 - 4*c_4*y_1*yx3 + c_4*y_1*yx4 + c_4*y_1 - 4*c_4*yx10 + c_4*yx11 - 2*c_4*yx20 + 2*c_4*yx21 + 2*c_4*yx3 - 2*c_4*yx4 + c_4*yx9 + c_5*y_2*yx4 + c_5*yx10 - 2*c_5*yx20"],
            ["3*c_3*y_0*yx3 + 3*c_3*yx13 + 3*c_3*yx25 + c_3*yx5 + 3*c_4*y_1*yx3 - 3*c_4*y_1*yx4 - c_4*y_1 + 3*c_4*yx10 - 3*c_4*yx11 - 3*c_4*yx21 + c_4*yx22 - c_4*yx3 + 3*c_4*yx4 - c_5*yx21"],
            ["6*c_3*y_0*yx4 + c_3*y_0 + 6*c_3*yx14 + 4*c_3*yx26 + 4*c_3*yx6 + 6*c_4*y_1*yx4 + c_4*y_1 + 6*c_4*yx11 - 4*c_4*yx22 - 4*c_4*yx4"],
            ["(-c_2*c_6*y_2*yx32*yx8*(c_6**2 + 2*c_6*y_0 + y_0**2) - c_2*c_6*yx8*(c_6 + y_0)**2*(y_2*yx7 + yx15)*(c_6**2 + 2*c_6*y_0 + y_0**2) + c_2*c_6*yx8*(c_6 + y_0)*(y_2*yx17 + yx30)*(c_6**2 + 2*c_6*y_0 + y_0**2) - yx23*(c_6 + y_0)**3*(c_2*c_6*y_2 + (c_1 + 3*c_5)*(c_6 + y_0)**2)*(c_6**2 + 2*c_6*y_0 + y_0**2) + yx5*(c_6 + y_0)**5*(c_2*c_6*yx8 + 3*c_4*c_6**2*y_1 + 6*c_4*c_6*y_0*y_1 + 3*c_4*y_0**2*y_1 + 3*c_5*c_6**2*y_2 - c_5*c_6**2 + 6*c_5*c_6*y_0*y_2 - 2*c_5*c_6*y_0 + 3*c_5*y_0**2*y_2 - c_5*y_0**2) + (c_6 + y_0)**5*(c_6**2 + 2*c_6*y_0 + y_0**2)*(3*c_4*yx13 + 3*c_4*yx24 + c_4*yx6 + 3*yx12*(c_4*y_1 - c_5*y_2 + c_5)) + (c_6 + y_0)**4*(c_6**2 + 2*c_6*y_0 + y_0**2)*(-c_0*c_6*yx8 - c_0*y_0*yx8 + c_1*c_6*y_0*yx8 + c_1*y_0**2*yx8 + c_2*y_0*y_2*yx8 - c_2*y_0*yx18 - 3*c_4*c_6*y_1*yx12 - 3*c_4*y_0*y_1*yx12 + 3*c_5*c_6*y_2*yx12 + 3*c_5*y_0*y_2*yx12 - yx8*(c_2*y_0*y_2 - (c_0 - c_1*y_0)*(c_6 + y_0))))/((c_6 + y_0)**5*(c_6**2 + 2*c_6*y_0 + y_0**2))"],
            ["(-c_2*c_6*y_2*yx32*yx9*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) - c_2*c_6*yx9*(c_6 + y_0)**5*(y_2*yx7 + yx15)*(c_6**2 + 2*c_6*y_0 + y_0**2) + c_2*c_6*yx9*(c_6 + y_0)*(y_2*yx17 + yx30)*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) - yx24*(c_6 + y_0)**3*(c_2*c_6*y_2 + (c_6 + y_0)**2*(c_1 + c_4 + 2*c_5))*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) - yx5*(c_6 + y_0)**5*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(-c_2*c_6*yx9 + 2*c_4*c_6**2*y_1 + 4*c_4*c_6*y_0*y_1 + 2*c_4*y_0**2*y_1) + (c_6 + y_0)**5*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(c_3*yx27 + c_4*yx14 + 2*c_4*yx25 + yx12*(c_3*y_0 - c_4*y_1) + yx13*(2*c_4*y_1 - 2*c_4 - 2*c_5*y_2 + c_5) + yx6*(c_4*y_1 - c_4 + c_5*y_2)) + (c_6 + y_0)**4*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(-c_0*c_6*yx9 - c_0*y_0*yx9 + c_1*c_6*y_0*yx9 + c_1*y_0**2*yx9 + c_2*y_0*y_2*yx9 - c_2*y_0*yx19 - c_3*c_6*y_0*yx12 - c_3*y_0**2*yx12 + c_4*c_6*y_1*yx12 - 2*c_4*c_6*y_1*yx13 + c_4*y_0*y_1*yx12 - 2*c_4*y_0*y_1*yx13 + 2*c_5*c_6*y_2*yx13 + 2*c_5*y_0*y_2*yx13 - yx9*(-c_0*c_6 - c_0*y_0 + c_1*c_6*y_0 + c_1*y_0**2 + c_2*y_0*y_2)))/((c_6 + y_0)**5*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3))"],
            ["(-c_2*c_6*y_2*yx10*yx32*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) + c_2*c_6*yx10*(c_6 + y_0)*(y_2*yx17 + yx30)*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) - yx25*(c_6 + y_0)**3*(c_2*c_6*y_2 + (c_6 + y_0)**2*(c_1 + 2*c_4 + c_5))*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) + yx5*(c_6 + y_0)**5*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(c_2*c_6*yx10 + c_3*c_6**2*y_0 + 2*c_3*c_6*y_0**2 + c_3*y_0**3 + c_4*c_6**2*y_1 + 2*c_4*c_6*y_0*y_1 + c_4*y_0**2*y_1) + (c_6 + y_0)**5*(-c_2*c_6*y_2*yx10*yx7 + yx15*(-c_2*c_6*yx10 + c_3*c_6**3 + 3*c_3*c_6**2*y_0 + 3*c_3*c_6*y_0**2 + c_3*y_0**3))*(c_6**2 + 2*c_6*y_0 + y_0**2) + (c_6 + y_0)**5*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(2*c_3*yx28 + c_4*yx26 - c_4*yx6*(2*y_1 - 1) + yx13*(2*c_3*y_0 - 2*c_4*y_1 + c_4) - yx14*(-c_4*y_1 + 2*c_4 + c_5*y_2)) + (c_6 + y_0)**4*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(-c_0*c_6*yx10 - c_0*y_0*yx10 + c_1*c_6*y_0*yx10 + c_1*y_0**2*yx10 + c_2*y_0*y_2*yx10 - c_2*y_0*yx20 - 2*c_3*c_6*y_0*yx13 - 2*c_3*y_0**2*yx13 + 2*c_4*c_6*y_1*yx13 - c_4*c_6*y_1*yx14 + 2*c_4*y_0*y_1*yx13 - c_4*y_0*y_1*yx14 + c_5*c_6*y_2*yx14 + c_5*y_0*y_2*yx14 - yx10*(-c_0*c_6 - c_0*y_0 + c_1*c_6*y_0 + c_1*y_0**2 + c_2*y_0*y_2)))/((c_6 + y_0)**5*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3))"],
            ["(-c_2*c_6*y_2*yx11*yx32*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) - c_2*c_6*yx11*yx15*(c_6 + y_0)**2*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) + c_2*c_6*yx11*(c_6 + y_0)*(y_2*yx17 + yx30)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) + yx7*(c_6 + y_0)**5*(-c_2*c_6*y_2*yx11 + c_3*c_6**3 + 3*c_3*c_6**2*y_0 + 3*c_3*c_6*y_0**2 + c_3*y_0**3) + (c_6 + y_0)**5*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(3*c_3*yx16 + 3*c_3*yx29 + 3*yx14*(c_3*y_0 - c_4*y_1 + c_4) + yx6*(3*c_3*y_0 + 3*c_4*y_1 - c_4)) + (c_6 + y_0)**4*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(-c_0*c_6*yx11 - c_0*y_0*yx11 + c_1*c_6*y_0*yx11 + c_1*y_0**2*yx11 + c_2*y_0*y_2*yx11 - c_2*y_0*yx21 - 3*c_3*c_6*y_0*yx14 - 3*c_3*y_0**2*yx14 + 3*c_4*c_6*y_1*yx14 + 3*c_4*y_0*y_1*yx14 - yx11*(c_2*y_0*y_2 - (c_0 - c_1*y_0)*(c_6 + y_0))) + (c_6 + y_0)**3*(c_2*c_6*yx11*yx5 - yx26*(c_2*c_6*y_2 + (c_1 + 3*c_4)*(c_6 + y_0)**2))*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3))/((c_6 + y_0)**5*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3))"],
            ["2*c_2*c_6*y_2*yx12*yx17/(c_6**4 + 4*c_6**3*y_0 + 6*c_6**2*y_0**2 + 4*c_6*y_0**3 + y_0**4) - 2*c_2*c_6*y_2*yx12*yx32/(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5) + 2*c_2*c_6*yx12*yx30/(c_6**4 + 4*c_6**3*y_0 + 6*c_6**2*y_0**2 + 4*c_6*y_0**3 + y_0**4) + 2*c_2*c_6*yx12*yx5/(c_6**2 + 2*c_6*y_0 + y_0**2) + c_2*y_0*yx8/(c_6 + y_0) + c_2*yx23*(2*c_6*y_0 + c_6 - 2*y_0*(2*c_6 + y_0))/(c_6 + y_0)**2 + c_4*yx16 + 2*c_4*yx28 + yx12*(2*c_0 - 2*c_1*y_0 + c_1 - 2*c_2*c_6*y_0*y_2/(c_6 + y_0)**2 + c_2*c_6*y_2/(c_6 + y_0)**2 - 2*c_2*y_0**2*y_2/(c_6 + y_0)**2) - yx15*(2*c_2*c_6*yx12/(c_6 + y_0)**3 - 2*c_4*y_1 + 2*c_5*y_2 - c_5) + yx2*(c_0*c_6 + c_0*y_0 + c_1*c_6*y_0 + c_1*y_0**2 + c_2*y_0*y_2)/(c_6 + y_0) - yx27*(2*c_1 - 2*c_2*c_6*y_0*y_2/(c_6 + y_0)**3 + c_2*c_6*y_2/(c_6 + y_0)**3 - 2*c_2*y_0**2*y_2/(c_6 + y_0)**3 + 2*c_2*y_2/(c_6 + y_0) + 2*c_5) + yx7*(-2*c_2*c_6*y_2*yx12 + c_4*c_6**3*y_1 + 3*c_4*c_6**2*y_0*y_1 + 3*c_4*c_6*y_0**2*y_1 + c_4*y_0**3*y_1 + c_5*c_6**3*y_2 + 3*c_5*c_6**2*y_0*y_2 + 3*c_5*c_6*y_0**2*y_2 + c_5*y_0**3*y_2)/(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) + (-2*c_0*c_6*yx12 - 2*c_0*y_0*yx12 + 2*c_1*c_6*y_0*yx12 + 2*c_1*y_0**2*yx12 + 2*c_2*y_0*y_2*yx12 - 2*c_4*c_6*y_1*yx15 - 2*c_4*y_0*y_1*yx15 + 2*c_5*c_6*y_2*yx15 + 2*c_5*y_0*y_2*yx15)/(c_6 + y_0)"],
            ["2*c_2*c_6*y_2*yx13*yx17/(c_6 + y_0)**4 - 2*c_2*c_6*y_2*yx13*yx32/(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5) + 2*c_2*c_6*yx13*yx5/(c_6**2 + 2*c_6*y_0 + y_0**2) + c_2*y_0*yx9/(c_6 + y_0) + c_2*yx24*(2*c_6*y_0 + c_6 - 2*y_0*(2*c_6 + y_0))/(c_6 + y_0)**2 + c_4*yx29 + yx13*(2*c_0 - 2*c_1*y_0 + c_1 - 2*c_2*c_6*y_0*y_2/(c_6 + y_0)**2 + c_2*c_6*y_2/(c_6 + y_0)**2 - 2*c_2*y_0**2*y_2/(c_6 + y_0)**2) - yx15*(2*c_2*c_6*yx13 - c_3*c_6**3*y_0 - 3*c_3*c_6**2*y_0**2 - 3*c_3*c_6*y_0**3 - c_3*y_0**4 + c_4*c_6**3*y_1 + 3*c_4*c_6**2*y_0*y_1 + 3*c_4*c_6*y_0**2*y_1 + c_4*y_0**3*y_1)/(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) - yx16*(-c_4*y_1 + c_4 + c_5*y_2) - yx28*(2*c_1 - 2*c_2*c_6*y_0*y_2/(c_6 + y_0)**3 + c_2*c_6*y_2/(c_6 + y_0)**3 - 2*c_2*y_0**2*y_2/(c_6 + y_0)**3 + 2*c_2*y_2/(c_6 + y_0) + c_4 + c_5) + yx3*(c_0*c_6 + c_0*y_0 + c_1*c_6*y_0 + c_1*y_0**2 + c_2*y_0*y_2)/(c_6 + y_0) + yx30*(2*c_2*c_6*yx13/(c_6 + y_0)**4 + c_3) - yx7*(2*c_2*c_6*y_2*yx13 + c_4*c_6**3*y_1 + 3*c_4*c_6**2*y_0*y_1 + 3*c_4*c_6*y_0**2*y_1 + c_4*y_0**3*y_1)/(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) + (-2*c_0*c_6*yx13 - 2*c_0*y_0*yx13 + 2*c_1*c_6*y_0*yx13 + 2*c_1*y_0**2*yx13 + 2*c_2*y_0*y_2*yx13 - c_3*c_6*y_0*yx15 - c_3*y_0**2*yx15 + c_4*c_6*y_1*yx15 - c_4*c_6*y_1*yx16 + c_4*y_0*y_1*yx15 - c_4*y_0*y_1*yx16 + c_5*c_6*y_2*yx16 + c_5*y_0*y_2*yx16)/(c_6 + y_0)"],
            ["-2*c_2*c_6*y_2*yx14*yx32/(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5) - 2*c_2*c_6*yx14*yx15/(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) + 2*c_2*c_6*yx14*yx30/(c_6**4 + 4*c_6**3*y_0 + 6*c_6**2*y_0**2 + 4*c_6*y_0**3 + y_0**4) + 2*c_2*c_6*yx14*yx5/(c_6**2 + 2*c_6*y_0 + y_0**2) + c_2*y_0*yx10/(c_6 + y_0) + c_2*yx25*(2*c_6*y_0 + c_6 - 2*y_0*(2*c_6 + y_0))/(c_6 + y_0)**2 + 2*c_3*yx31 + yx14*(2*c_0 - 2*c_1*y_0 + c_1 - 2*c_2*c_6*y_0*y_2/(c_6 + y_0)**2 + c_2*c_6*y_2/(c_6 + y_0)**2 - 2*c_2*y_0**2*y_2/(c_6 + y_0)**2) + yx16*(2*c_3*y_0 - 2*c_4*y_1 + c_4) + yx17*(2*c_2*c_6*y_2*yx14 + c_3*c_6**4 + 4*c_3*c_6**3*y_0 + 6*c_3*c_6**2*y_0**2 + 4*c_3*c_6*y_0**3 + c_3*y_0**4)/(c_6**4 + 4*c_6**3*y_0 + 6*c_6**2*y_0**2 + 4*c_6*y_0**3 + y_0**4) - yx29*(c_2*c_6*y_2*(2*y_0 + 1) + 2*c_2*y_2*(y_0**2 - 2*y_0*(c_6 + y_0) + (c_6 + y_0)**2) + 2*(c_1 + c_4)*(c_6 + y_0)**3)/(c_6 + y_0)**3 + yx4*(c_0*c_6 + c_0*y_0 + c_1*c_6*y_0 + c_1*y_0**2 + c_2*y_0*y_2)/(c_6 + y_0) + yx7*(-2*c_2*c_6*y_2*yx14 + c_3*c_6**3*y_0 + 3*c_3*c_6**2*y_0**2 + 3*c_3*c_6*y_0**3 + c_3*y_0**4 + c_4*c_6**3*y_1 + 3*c_4*c_6**2*y_0*y_1 + 3*c_4*c_6*y_0**2*y_1 + c_4*y_0**3*y_1)/(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3) + (-2*c_0*c_6*yx14 - 2*c_0*y_0*yx14 + 2*c_1*c_6*y_0*yx14 + 2*c_1*y_0**2*yx14 + 2*c_2*y_0*y_2*yx14 - 2*c_3*c_6*y_0*yx16 - 2*c_3*y_0**2*yx16 + 2*c_4*c_6*y_1*yx16 + 2*c_4*y_0*y_1*yx16)/(c_6 + y_0)"],
            ["(3*c_0*c_6**5*yx5 + 15*c_0*c_6**4*y_0*yx5 + 30*c_0*c_6**3*y_0**2*yx5 + 30*c_0*c_6**2*y_0**3*yx5 + 15*c_0*c_6*y_0**4*yx5 + 3*c_0*y_0**5*yx5 + 3*c_1*c_6**5*y_0*yx5 + 3*c_1*c_6**5*yx15 - 3*c_1*c_6**5*yx30 - c_1*c_6**5*yx5 + 15*c_1*c_6**4*y_0**2*yx5 + 15*c_1*c_6**4*y_0*yx15 - 15*c_1*c_6**4*y_0*yx30 - 5*c_1*c_6**4*y_0*yx5 + 30*c_1*c_6**3*y_0**3*yx5 + 30*c_1*c_6**3*y_0**2*yx15 - 30*c_1*c_6**3*y_0**2*yx30 - 10*c_1*c_6**3*y_0**2*yx5 + 30*c_1*c_6**2*y_0**4*yx5 + 30*c_1*c_6**2*y_0**3*yx15 - 30*c_1*c_6**2*y_0**3*yx30 - 10*c_1*c_6**2*y_0**3*yx5 + 15*c_1*c_6*y_0**5*yx5 + 15*c_1*c_6*y_0**4*yx15 - 15*c_1*c_6*y_0**4*yx30 - 5*c_1*c_6*y_0**4*yx5 + 3*c_1*y_0**6*yx5 + 3*c_1*y_0**5*yx15 - 3*c_1*y_0**5*yx30 - c_1*y_0**5*yx5 + 3*c_2*c_6**4*y_0*y_2*yx5 + 3*c_2*c_6**4*y_0*yx12 - c_2*c_6**4*y_0*yx2 - 3*c_2*c_6**4*y_0*yx27 + 3*c_2*c_6**4*y_2*yx15 - 3*c_2*c_6**4*y_2*yx30 - c_2*c_6**4*y_2*yx5 - c_2*c_6**4*yx12 + 3*c_2*c_6**4*yx15*yx5 + 3*c_2*c_6**4*yx27 + 12*c_2*c_6**3*y_0**2*y_2*yx5 + 12*c_2*c_6**3*y_0**2*yx12 - 4*c_2*c_6**3*y_0**2*yx2 - 12*c_2*c_6**3*y_0**2*yx27 + 9*c_2*c_6**3*y_0*y_2*yx15 - 9*c_2*c_6**3*y_0*y_2*yx30 - 3*c_2*c_6**3*y_0*y_2*yx5 - 3*c_2*c_6**3*y_0*yx12 + 9*c_2*c_6**3*y_0*yx15*yx5 + 9*c_2*c_6**3*y_0*yx27 - 3*c_2*c_6**3*y_2*yx15*yx7 + c_2*c_6**3*y_2*yx15 - 3*c_2*c_6**3*y_2*yx30 - 3*c_2*c_6**3*yx15**2 + c_2*c_6**3*yx27 + 18*c_2*c_6**2*y_0**3*y_2*yx5 + 18*c_2*c_6**2*y_0**3*yx12 - 6*c_2*c_6**2*y_0**3*yx2 - 18*c_2*c_6**2*y_0**3*yx27 + 9*c_2*c_6**2*y_0**2*y_2*yx15 - 9*c_2*c_6**2*y_0**2*y_2*yx30 - 3*c_2*c_6**2*y_0**2*y_2*yx5 - 3*c_2*c_6**2*y_0**2*yx12 + 9*c_2*c_6**2*y_0**2*yx15*yx5 + 9*c_2*c_6**2*y_0**2*yx27 - 6*c_2*c_6**2*y_0*y_2*yx15*yx7 + 2*c_2*c_6**2*y_0*y_2*yx15 - 6*c_2*c_6**2*y_0*y_2*yx30 - 6*c_2*c_6**2*y_0*yx15**2 + 2*c_2*c_6**2*y_0*yx27 + 3*c_2*c_6**2*y_2*yx15*yx17 - c_2*c_6**2*y_2*yx30 + 3*c_2*c_6**2*yx15*yx30 + 12*c_2*c_6*y_0**4*y_2*yx5 + 12*c_2*c_6*y_0**4*yx12 - 4*c_2*c_6*y_0**4*yx2 - 12*c_2*c_6*y_0**4*yx27 + 3*c_2*c_6*y_0**3*y_2*yx15 - 3*c_2*c_6*y_0**3*y_2*yx30 - c_2*c_6*y_0**3*y_2*yx5 - c_2*c_6*y_0**3*yx12 + 3*c_2*c_6*y_0**3*yx15*yx5 + 3*c_2*c_6*y_0**3*yx27 - 3*c_2*c_6*y_0**2*y_2*yx15*yx7 + c_2*c_6*y_0**2*y_2*yx15 - 3*c_2*c_6*y_0**2*y_2*yx30 - 3*c_2*c_6*y_0**2*yx15**2 + c_2*c_6*y_0**2*yx27 + 3*c_2*c_6*y_0*y_2*yx15*yx17 - c_2*c_6*y_0*y_2*yx30 + 3*c_2*c_6*y_0*yx15*yx30 - 3*c_2*c_6*y_2*yx15*yx32 + 3*c_2*y_0**5*y_2*yx5 + 3*c_2*y_0**5*yx12 - c_2*y_0**5*yx2 - 3*c_2*y_0**5*yx27 + c_4*c_6**5*yx31 + 5*c_4*c_6**4*y_0*yx31 + 10*c_4*c_6**3*y_0**2*yx31 + 10*c_4*c_6**2*y_0**3*yx31 + 5*c_4*c_6*y_0**4*yx31 + c_4*y_0**5*yx31 - c_5*c_6**5*yx30 - 5*c_5*c_6**4*y_0*yx30 - 10*c_5*c_6**3*y_0**2*yx30 - 10*c_5*c_6**2*y_0**3*yx30 - 5*c_5*c_6*y_0**4*yx30 - c_5*y_0**5*yx30)/(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5)"],
            ["(3*c_0*c_6**5*yx6 + 15*c_0*c_6**4*y_0*yx6 + 30*c_0*c_6**3*y_0**2*yx6 + 30*c_0*c_6**2*y_0**3*yx6 + 15*c_0*c_6*y_0**4*yx6 + 3*c_0*y_0**5*yx6 + 3*c_1*c_6**5*y_0*yx6 + 3*c_1*c_6**5*yx16 - 3*c_1*c_6**5*yx31 - c_1*c_6**5*yx6 + 15*c_1*c_6**4*y_0**2*yx6 + 15*c_1*c_6**4*y_0*yx16 - 15*c_1*c_6**4*y_0*yx31 - 5*c_1*c_6**4*y_0*yx6 + 30*c_1*c_6**3*y_0**3*yx6 + 30*c_1*c_6**3*y_0**2*yx16 - 30*c_1*c_6**3*y_0**2*yx31 - 10*c_1*c_6**3*y_0**2*yx6 + 30*c_1*c_6**2*y_0**4*yx6 + 30*c_1*c_6**2*y_0**3*yx16 - 30*c_1*c_6**2*y_0**3*yx31 - 10*c_1*c_6**2*y_0**3*yx6 + 15*c_1*c_6*y_0**5*yx6 + 15*c_1*c_6*y_0**4*yx16 - 15*c_1*c_6*y_0**4*yx31 - 5*c_1*c_6*y_0**4*yx6 + 3*c_1*y_0**6*yx6 + 3*c_1*y_0**5*yx16 - 3*c_1*y_0**5*yx31 - c_1*y_0**5*yx6 + 3*c_2*c_6**4*y_0*y_2*yx6 + 3*c_2*c_6**4*y_0*yx13 - 3*c_2*c_6**4*y_0*yx28 - c_2*c_6**4*y_0*yx3 + 3*c_2*c_6**4*y_2*yx16 - 3*c_2*c_6**4*y_2*yx31 - c_2*c_6**4*y_2*yx6 - c_2*c_6**4*yx13 + 3*c_2*c_6**4*yx16*yx5 + 3*c_2*c_6**4*yx28 + 12*c_2*c_6**3*y_0**2*y_2*yx6 + 12*c_2*c_6**3*y_0**2*yx13 - 12*c_2*c_6**3*y_0**2*yx28 - 4*c_2*c_6**3*y_0**2*yx3 + 9*c_2*c_6**3*y_0*y_2*yx16 - 9*c_2*c_6**3*y_0*y_2*yx31 - 3*c_2*c_6**3*y_0*y_2*yx6 - 3*c_2*c_6**3*y_0*yx13 + 9*c_2*c_6**3*y_0*yx16*yx5 + 9*c_2*c_6**3*y_0*yx28 - 3*c_2*c_6**3*y_2*yx16*yx7 + c_2*c_6**3*y_2*yx16 - 3*c_2*c_6**3*y_2*yx31 - 3*c_2*c_6**3*yx15*yx16 + c_2*c_6**3*yx28 + 18*c_2*c_6**2*y_0**3*y_2*yx6 + 18*c_2*c_6**2*y_0**3*yx13 - 18*c_2*c_6**2*y_0**3*yx28 - 6*c_2*c_6**2*y_0**3*yx3 + 9*c_2*c_6**2*y_0**2*y_2*yx16 - 9*c_2*c_6**2*y_0**2*y_2*yx31 - 3*c_2*c_6**2*y_0**2*y_2*yx6 - 3*c_2*c_6**2*y_0**2*yx13 + 9*c_2*c_6**2*y_0**2*yx16*yx5 + 9*c_2*c_6**2*y_0**2*yx28 - 6*c_2*c_6**2*y_0*y_2*yx16*yx7 + 2*c_2*c_6**2*y_0*y_2*yx16 - 6*c_2*c_6**2*y_0*y_2*yx31 - 6*c_2*c_6**2*y_0*yx15*yx16 + 2*c_2*c_6**2*y_0*yx28 + 3*c_2*c_6**2*y_2*yx16*yx17 - c_2*c_6**2*y_2*yx31 + 3*c_2*c_6**2*yx16*yx30 + 12*c_2*c_6*y_0**4*y_2*yx6 + 12*c_2*c_6*y_0**4*yx13 - 12*c_2*c_6*y_0**4*yx28 - 4*c_2*c_6*y_0**4*yx3 + 3*c_2*c_6*y_0**3*y_2*yx16 - 3*c_2*c_6*y_0**3*y_2*yx31 - c_2*c_6*y_0**3*y_2*yx6 - c_2*c_6*y_0**3*yx13 + 3*c_2*c_6*y_0**3*yx16*yx5 + 3*c_2*c_6*y_0**3*yx28 - 3*c_2*c_6*y_0**2*y_2*yx16*yx7 + c_2*c_6*y_0**2*y_2*yx16 - 3*c_2*c_6*y_0**2*y_2*yx31 - 3*c_2*c_6*y_0**2*yx15*yx16 + c_2*c_6*y_0**2*yx28 + 3*c_2*c_6*y_0*y_2*yx16*yx17 - c_2*c_6*y_0*y_2*yx31 + 3*c_2*c_6*y_0*yx16*yx30 - 3*c_2*c_6*y_2*yx16*yx32 + 3*c_2*y_0**5*y_2*yx6 + 3*c_2*y_0**5*yx13 - 3*c_2*y_0**5*yx28 - c_2*y_0**5*yx3 + c_3*c_6**5*yx32 + 5*c_3*c_6**4*y_0*yx32 + 10*c_3*c_6**3*y_0**2*yx32 + 10*c_3*c_6**2*y_0**3*yx32 + 5*c_3*c_6*y_0**4*yx32 + c_3*y_0**5*yx32 - c_4*c_6**5*yx31 - 5*c_4*c_6**4*y_0*yx31 - 10*c_4*c_6**3*y_0**2*yx31 - 10*c_4*c_6**2*y_0**3*yx31 - 5*c_4*c_6*y_0**4*yx31 - c_4*y_0**5*yx31)/(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5)"],
            ["(c_2*yx30*(c_6 + y_0)**4*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5)*(-4*c_6**3*y_0 + 6*c_6**3 - 12*c_6**2*y_0**2 + 12*c_6**2*y_0 + 4*c_6**2 - 12*c_6*y_0**3 + 6*c_6*y_0**2 + 4*c_6*y_0 + 4*c_6*yx17 + c_6 - 4*y_0**4) - c_2*yx5*(c_6 + y_0)**4*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(4*c_6*y_0 - 4*c_6*yx17 - c_6 + 4*y_0**2)*(c_6**4 + 4*c_6**3*y_0 + 6*c_6**2*y_0**2 + 4*c_6*y_0**3 + y_0**4)*(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5) + yx17*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(2*c_2*y_2*(c_6 + y_0)**3*(-2*y_0 + 3) + 2*c_2*y_2*(c_6 + y_0)**2*(-3*y_0 + 2) + c_2*y_2*(-4*c_6*y_0 + 4*c_6*yx17 + c_6 - 4*y_0**2) + (c_6 + y_0)**4*(4*c_0 - 4*c_1*y_0 + 6*c_1))*(c_6**4 + 4*c_6**3*y_0 + 6*c_6**2*y_0**2 + 4*c_6*y_0**3 + y_0**4)*(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5) - yx32*(c_6 + y_0)**4*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(c_6**4 + 4*c_6**3*y_0 + 6*c_6**2*y_0**2 + 4*c_6*y_0**3 + y_0**4)*(4*c_1*c_6**5 + 20*c_1*c_6**4*y_0 + 40*c_1*c_6**3*y_0**2 + 40*c_1*c_6**2*y_0**3 + 20*c_1*c_6*y_0**4 + 4*c_1*y_0**5 + 4*c_2*c_6**4*y_2 + 12*c_2*c_6**3*y_0*y_2 + 6*c_2*c_6**3*y_2 + 12*c_2*c_6**2*y_0**2*y_2 + 12*c_2*c_6**2*y_0*y_2 + 4*c_2*c_6**2*y_2 + 4*c_2*c_6*y_0**3*y_2 + 6*c_2*c_6*y_0**2*y_2 + 4*c_2*c_6*y_0*y_2 + 4*c_2*c_6*y_2*yx17 + c_2*c_6*y_2) + (c_6 + y_0)**4*(-c_2*yx15*(-6*c_6**2*y_0 + 4*c_6**2 - 12*c_6*y_0**2 + 4*c_6*y_0 + 4*c_6*yx17 + c_6 - 6*y_0**3) + yx7*(6*c_0*c_6**3 + 18*c_0*c_6**2*y_0 + 18*c_0*c_6*y_0**2 + 6*c_0*y_0**3 + 6*c_1*c_6**3*y_0 - 4*c_1*c_6**3 + 18*c_1*c_6**2*y_0**2 - 12*c_1*c_6**2*y_0 + 18*c_1*c_6*y_0**3 - 12*c_1*c_6*y_0**2 + 6*c_1*y_0**4 - 4*c_1*y_0**3 + 6*c_2*c_6**2*y_0*y_2 - 4*c_2*c_6**2*y_2 + 12*c_2*c_6*y_0**2*y_2 - 4*c_2*c_6*y_0*y_2 - 4*c_2*c_6*y_2*yx17 - c_2*c_6*y_2 + 6*c_2*y_0**3*y_2))*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**4 + 4*c_6**3*y_0 + 6*c_6**2*y_0**2 + 4*c_6*y_0**3 + y_0**4)*(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5) + (c_6 + y_0)**3*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(c_6**4 + 4*c_6**3*y_0 + 6*c_6**2*y_0**2 + 4*c_6*y_0**3 + y_0**4)*(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5)*(-4*c_0*c_6*yx17 + c_0*c_6 - 4*c_0*y_0*yx17 + c_0*y_0 + 4*c_1*c_6*y_0*yx17 + c_1*c_6*y_0 + 4*c_1*y_0**2*yx17 + c_1*y_0**2 + 4*c_2*y_0*y_2*yx17 + c_2*y_0*y_2))/((c_6 + y_0)**4*(c_6**2 + 2*c_6*y_0 + y_0**2)*(c_6**3 + 3*c_6**2*y_0 + 3*c_6*y_0**2 + y_0**3)*(c_6**4 + 4*c_6**3*y_0 + 6*c_6**2*y_0**2 + 4*c_6*y_0**3 + y_0**4)*(c_6**5 + 5*c_6**4*y_0 + 10*c_6**3*y_0**2 + 10*c_6**2*y_0**3 + 5*c_6*y_0**4 + y_0**5))"]
        ])

        central_from_raw_exprs = to_sympy_matrix([
            ["x_0_0_2 - y_2**2"],
            ["x_0_1_1 - y_1*y_2"],
            ["x_0_2_0 - y_1**2"],
            ["x_1_0_1 - y_0*y_2"],
            ["x_1_1_0 - y_0*y_1"],
            ["x_2_0_0 - y_0**2"],
            ["-3*x_0_0_2*y_2 + x_0_0_3 + 2*y_2**3"],
            ["-x_0_0_2*y_1 - 2*x_0_1_1*y_2 + x_0_1_2 + 2*y_1*y_2**2"],
            ["-2*x_0_1_1*y_1 - x_0_2_0*y_2 + x_0_2_1 + 2*y_1**2*y_2"],
            ["-3*x_0_2_0*y_1 + x_0_3_0 + 2*y_1**3"],
            ["-x_0_0_2*y_0 - 2*x_1_0_1*y_2 + x_1_0_2 + 2*y_0*y_2**2"],
            ["-x_0_1_1*y_0 - x_1_0_1*y_1 - x_1_1_0*y_2 + x_1_1_1 + 2*y_0*y_1*y_2"],
            ["-x_0_2_0*y_0 - 2*x_1_1_0*y_1 + x_1_2_0 + 2*y_0*y_1**2"],
            ["-2*x_1_0_1*y_0 - x_2_0_0*y_2 + x_2_0_1 + 2*y_0**2*y_2"],
            ["-2*x_1_1_0*y_0 - x_2_0_0*y_1 + x_2_1_0 + 2*y_0**2*y_1"],
            ["-3*x_2_0_0*y_0 + x_3_0_0 + 2*y_0**3"],
            ["6*x_0_0_2*y_2**2 - 4*x_0_0_3*y_2 + x_0_0_4 - 3*y_2**4"],
            ["3*x_0_0_2*y_1*y_2 - x_0_0_3*y_1 + 3*x_0_1_1*y_2**2 - 3*x_0_1_2*y_2 + x_0_1_3 - 3*y_1*y_2**3"],
            ["x_0_0_2*y_1**2 + 4*x_0_1_1*y_1*y_2 - 2*x_0_1_2*y_1 + x_0_2_0*y_2**2 - 2*x_0_2_1*y_2 + x_0_2_2 - 3*y_1**2*y_2**2"],
            ["3*x_0_1_1*y_1**2 + 3*x_0_2_0*y_1*y_2 - 3*x_0_2_1*y_1 - x_0_3_0*y_2 + x_0_3_1 - 3*y_1**3*y_2"],
            ["6*x_0_2_0*y_1**2 - 4*x_0_3_0*y_1 + x_0_4_0 - 3*y_1**4"],
            ["3*x_0_0_2*y_0*y_2 - x_0_0_3*y_0 + 3*x_1_0_1*y_2**2 - 3*x_1_0_2*y_2 + x_1_0_3 - 3*y_0*y_2**3"],
            ["x_0_0_2*y_0*y_1 + 2*x_0_1_1*y_0*y_2 - x_0_1_2*y_0 + 2*x_1_0_1*y_1*y_2 - x_1_0_2*y_1 + x_1_1_0*y_2**2 - 2*x_1_1_1*y_2 + x_1_1_2 - 3*y_0*y_1*y_2**2"],
            ["2*x_0_1_1*y_0*y_1 + x_0_2_0*y_0*y_2 - x_0_2_1*y_0 + x_1_0_1*y_1**2 + 2*x_1_1_0*y_1*y_2 - 2*x_1_1_1*y_1 - x_1_2_0*y_2 + x_1_2_1 - 3*y_0*y_1**2*y_2"],
            ["3*x_0_2_0*y_0*y_1 - x_0_3_0*y_0 + 3*x_1_1_0*y_1**2 - 3*x_1_2_0*y_1 + x_1_3_0 - 3*y_0*y_1**3"],
            ["x_0_0_2*y_0**2 + 4*x_1_0_1*y_0*y_2 - 2*x_1_0_2*y_0 + x_2_0_0*y_2**2 - 2*x_2_0_1*y_2 + x_2_0_2 - 3*y_0**2*y_2**2"],
            ["x_0_1_1*y_0**2 + 2*x_1_0_1*y_0*y_1 + 2*x_1_1_0*y_0*y_2 - 2*x_1_1_1*y_0 + x_2_0_0*y_1*y_2 - x_2_0_1*y_1 - x_2_1_0*y_2 + x_2_1_1 - 3*y_0**2*y_1*y_2"],
            ["x_0_2_0*y_0**2 + 4*x_1_1_0*y_0*y_1 - 2*x_1_2_0*y_0 + x_2_0_0*y_1**2 - 2*x_2_1_0*y_1 + x_2_2_0 - 3*y_0**2*y_1**2"],
            ["3*x_1_0_1*y_0**2 + 3*x_2_0_0*y_0*y_2 - 3*x_2_0_1*y_0 - x_3_0_0*y_2 + x_3_0_1 - 3*y_0**3*y_2"],
            ["3*x_1_1_0*y_0**2 + 3*x_2_0_0*y_0*y_1 - 3*x_2_1_0*y_0 - x_3_0_0*y_1 + x_3_1_0 - 3*y_0**3*y_1"],
            ["6*x_2_0_0*y_0**2 - 4*x_3_0_0*y_0 + x_4_0_0 - 3*y_0**4"]
            ])



        k_counter = [
            Moment([0, 0, 0], symbol=sympy.Symbol("1")),
            Moment([1, 0, 0], symbol=sympy.Symbol("y_0")),
            Moment([0, 1, 0], symbol=sympy.Symbol("y_1")),
            Moment([0, 0, 1], symbol=sympy.Symbol("y_2")),
            Moment([0, 0, 2], symbol=sympy.Symbol("x_0_0_2")),
            Moment([0, 1, 1], symbol=sympy.Symbol("x_0_1_1")),
            Moment([0, 2, 0], symbol=sympy.Symbol("x_0_2_0")),
            Moment([1, 0, 1], symbol=sympy.Symbol("x_1_0_1")),
            Moment([1, 1, 0], symbol=sympy.Symbol("x_1_1_0")),
            Moment([2, 0, 0], symbol=sympy.Symbol("x_2_0_0")),
            Moment([0, 0, 3], symbol=sympy.Symbol("x_0_0_3")),
            Moment([0, 1, 2], symbol=sympy.Symbol("x_0_1_2")),
            Moment([0, 2, 1], symbol=sympy.Symbol("x_0_2_1")),
            Moment([0, 3, 0], symbol=sympy.Symbol("x_0_3_0")),
            Moment([1, 0, 2], symbol=sympy.Symbol("x_1_0_2")),
            Moment([1, 1, 1], symbol=sympy.Symbol("x_1_1_1")),
            Moment([1, 2, 0], symbol=sympy.Symbol("x_1_2_0")),
            Moment([2, 0, 1], symbol=sympy.Symbol("x_2_0_1")),
            Moment([2, 1, 0], symbol=sympy.Symbol("x_2_1_0")),
            Moment([3, 0, 0], symbol=sympy.Symbol("x_3_0_0")),
            Moment([0, 0, 4], symbol=sympy.Symbol("x_0_0_4")),
            Moment([0, 1, 3], symbol=sympy.Symbol("x_0_1_3")),
            Moment([0, 2, 2], symbol=sympy.Symbol("x_0_2_2")),
            Moment([0, 3, 1], symbol=sympy.Symbol("x_0_3_1")),
            Moment([0, 4, 0], symbol=sympy.Symbol("x_0_4_0")),
            Moment([1, 0, 3], symbol=sympy.Symbol("x_1_0_3")),
            Moment([1, 1, 2], symbol=sympy.Symbol("x_1_1_2")),
            Moment([1, 2, 1], symbol=sympy.Symbol("x_1_2_1")),
            Moment([1, 3, 0], symbol=sympy.Symbol("x_1_3_0")),
            Moment([2, 0, 2], symbol=sympy.Symbol("x_2_0_2")),
            Moment([2, 1, 1], symbol=sympy.Symbol("x_2_1_1")),
            Moment([2, 2, 0], symbol=sympy.Symbol("x_2_2_0")),
            Moment([3, 0, 1], symbol=sympy.Symbol("x_3_0_1")),
            Moment([3, 1, 0], symbol=sympy.Symbol("x_3_1_0")),
            Moment([4, 0, 0], symbol=sympy.Symbol("x_4_0_0"))
            ]

        n_moments = 4
        species = to_sympy_matrix([["y_0"],["y_1"],["y_2"]])

        prob_moments = self.__problem_moments
        expected = to_sympy_matrix([
            ["c_0-c_1*y_0-(c_2*c_6*yx5)/(c_6+y_0) ** 2+(c_2*c_6*yx15)/(c_6+y_0) ** 3-(c_2*y_0*y_2)/(c_6+y_0)+(3*c_2*c_6*y_2*yx7 ** 2)/(c_6+y_0) ** 5+(c_2*c_6*y_2*yx7)/(c_6+y_0) ** 3-(c_2*c_6*y_2*yx17)/(c_6+y_0) ** 4"],
            ["c_3*y_0-c_4*y_1"],
            ["c_4*y_1-c_5*y_2"],
            ["c_4*y_1+c_5*y_2+2*c_4*yx3-2*c_5*yx2"],
            ["c_3*yx5-c_4*yx3-c_4*y_1+c_4*yx4-c_5*yx3"],
            ["c_3*y_0+c_4*y_1-2*c_4*yx4+2*c_3*yx6"],
            ["-(c_2*y_0 ** 3*yx2+c_1*y_0 ** 3*yx5-c_4*y_0 ** 3*yx6+c_5*y_0 ** 3*yx5+c_1*c_6 ** 3*yx5-c_4*c_6 ** 3*yx6+c_5*c_6 ** 3*yx5+c_2*c_6 ** 2*yx12+c_2*c_6*y_0*yx12-c_2*c_6*y_2*yx15+2*c_2*c_6*y_0 ** 2*yx2+c_2*c_6 ** 2*y_0*yx2+3*c_1*c_6*y_0 ** 2*yx5+3*c_1*c_6 ** 2*y_0*yx5+c_2*c_6 ** 2*y_2*yx5-3*c_4*c_6*y_0 ** 2*yx6-3*c_4*c_6 ** 2*y_0*yx6+3*c_5*c_6*y_0 ** 2*yx5+3*c_5*c_6 ** 2*y_0*yx5+c_2*c_6*y_0*y_2*yx5)/(c_6+y_0) ** 3"],
            ["-(c_2*y_0 ** 3*yx3+c_1*y_0 ** 3*yx6-c_3*y_0 ** 3*yx7+c_4*y_0 ** 3*yx6+c_1*c_6 ** 3*yx6-c_3*c_6 ** 3*yx7+c_4*c_6 ** 3*yx6+c_2*c_6 ** 2*yx13+c_2*c_6*y_0*yx13-c_2*c_6*y_2*yx16+2*c_2*c_6*y_0 ** 2*yx3+c_2*c_6 ** 2*y_0*yx3+3*c_1*c_6*y_0 ** 2*yx6+3*c_1*c_6 ** 2*y_0*yx6+c_2*c_6 ** 2*y_2*yx6-3*c_3*c_6*y_0 ** 2*yx7-3*c_3*c_6 ** 2*y_0*yx7+3*c_4*c_6*y_0 ** 2*yx6+3*c_4*c_6 ** 2*y_0*yx6+c_2*c_6*y_0*y_2*yx6)/(c_6+y_0) ** 3"],
            ["-(2*c_2*y_0 ** 5*yx5-c_0*y_0 ** 5-c_1*y_0 ** 6-c_2*y_0 ** 5*y_2-c_0*c_6 ** 5+2*c_1*y_0 ** 5*yx7-10*c_0*c_6 ** 2*y_0 ** 3-10*c_0*c_6 ** 3*y_0 ** 2-10*c_1*c_6 ** 2*y_0 ** 4-10*c_1*c_6 ** 3*y_0 ** 3-5*c_1*c_6 ** 4*y_0 ** 2-5*c_0*c_6*y_0 ** 4-5*c_0*c_6 ** 4*y_0-5*c_1*c_6*y_0 ** 5-c_1*c_6 ** 5*y_0-c_2*c_6 ** 4*yx5+2*c_1*c_6 ** 5*yx7+c_2*c_6 ** 3*yx15+2*c_2*c_6 ** 4*yx15-4*c_2*c_6*y_0 ** 4*y_2-c_2*c_6 ** 4*y_0*y_2-c_2*c_6*y_0 ** 3*yx5-3*c_2*c_6 ** 3*y_0*yx5+8*c_2*c_6*y_0 ** 4*yx5+2*c_2*c_6 ** 4*y_0*yx5+10*c_1*c_6*y_0 ** 4*yx7+10*c_1*c_6 ** 4*y_0*yx7+3*c_2*c_6*y_2*yx7 ** 2+c_2*c_6 ** 3*y_2*yx7+2*c_2*c_6 ** 4*y_2*yx7+c_2*c_6*y_0 ** 2*yx15+2*c_2*c_6 ** 2*y_0*yx15+2*c_2*c_6*y_0 ** 3*yx15+6*c_2*c_6 ** 3*y_0*yx15-c_2*c_6 ** 2*y_2*yx17-2*c_2*c_6 ** 3*y_2*yx17-6*c_2*c_6 ** 2*y_0 ** 3*y_2-4*c_2*c_6 ** 3*y_0 ** 2*y_2-3*c_2*c_6 ** 2*y_0 ** 2*yx5+12*c_2*c_6 ** 2*y_0 ** 3*yx5+8*c_2*c_6 ** 3*y_0 ** 2*yx5+20*c_1*c_6 ** 2*y_0 ** 3*yx7+20*c_1*c_6 ** 3*y_0 ** 2*yx7+6*c_2*c_6 ** 2*y_2*yx7 ** 2+6*c_2*c_6 ** 2*y_0 ** 2*yx15+6*c_2*c_6 ** 2*y_0 ** 2*y_2*yx7-c_2*c_6*y_0*y_2*yx17+6*c_2*c_6*y_0*y_2*yx7 ** 2+c_2*c_6*y_0 ** 2*y_2*yx7+2*c_2*c_6 ** 2*y_0*y_2*yx7+2*c_2*c_6*y_0 ** 3*y_2*yx7+6*c_2*c_6 ** 3*y_0*y_2*yx7-2*c_2*c_6*y_0 ** 2*y_2*yx17-4*c_2*c_6 ** 2*y_0*y_2*yx17)/(c_6+y_0) ** 5"],
            ["c_4*y_1-c_5*y_2+3*c_4*yx3+3*c_5*yx2+3*c_4*yx9-3*c_5*yx8"],
            ["c_4*yx4-2*c_4*yx3-c_4*y_1+c_5*yx3-c_4*yx9+2*c_4*yx10-2*c_5*yx9+c_3*yx12"],
            ["c_4*y_1+c_4*yx3+c_3*yx5-2*c_4*yx4-2*c_4*yx10+c_4*yx11-c_5*yx10+2*c_3*yx13"],
            ["c_3*y_0-c_4*y_1+3*c_4*yx4+3*c_3*yx6-3*c_4*yx11+3*c_3*yx14"],
            ["-(c_2*y_0 ** 5*yx8-c_4*y_0 ** 5*yx6-c_5*y_0 ** 5*yx5+c_1*y_0 ** 5*yx12-2*c_4*y_0 ** 5*yx13+2*c_5*y_0 ** 5*yx12-c_4*c_6 ** 5*yx6-c_5*c_6 ** 5*yx5+c_1*c_6 ** 5*yx12-2*c_4*c_6 ** 5*yx13+2*c_5*c_6 ** 5*yx12+4*c_2*c_6*y_0 ** 4*yx8+c_2*c_6 ** 4*y_0*yx8-5*c_4*c_6*y_0 ** 4*yx6-5*c_4*c_6 ** 4*y_0*yx6-5*c_5*c_6*y_0 ** 4*yx5-5*c_5*c_6 ** 4*y_0*yx5+5*c_1*c_6*y_0 ** 4*yx12+5*c_1*c_6 ** 4*y_0*yx12+c_2*c_6 ** 4*y_2*yx12-10*c_4*c_6*y_0 ** 4*yx13-10*c_4*c_6 ** 4*y_0*yx13+10*c_5*c_6*y_0 ** 4*yx12+10*c_5*c_6 ** 4*y_0*yx12-c_2*c_6 ** 4*yx2*yx5+c_2*c_6 ** 3*yx2*yx15+6*c_2*c_6 ** 2*y_0 ** 3*yx8+4*c_2*c_6 ** 3*y_0 ** 2*yx8-10*c_4*c_6 ** 2*y_0 ** 3*yx6-10*c_4*c_6 ** 3*y_0 ** 2*yx6-10*c_5*c_6 ** 2*y_0 ** 3*yx5-10*c_5*c_6 ** 3*y_0 ** 2*yx5+10*c_1*c_6 ** 2*y_0 ** 3*yx12+10*c_1*c_6 ** 3*y_0 ** 2*yx12-20*c_4*c_6 ** 2*y_0 ** 3*yx13-20*c_4*c_6 ** 3*y_0 ** 2*yx13+20*c_5*c_6 ** 2*y_0 ** 3*yx12+20*c_5*c_6 ** 3*y_0 ** 2*yx12+3*c_2*c_6 ** 2*y_0 ** 2*y_2*yx12-3*c_2*c_6 ** 2*y_0 ** 2*yx2*yx5+c_2*c_6*y_0 ** 3*y_2*yx12+3*c_2*c_6 ** 3*y_0*y_2*yx12-c_2*c_6*y_0 ** 3*yx2*yx5-3*c_2*c_6 ** 3*y_0*yx2*yx5+3*c_2*c_6*y_2*yx2*yx7 ** 2+c_2*c_6 ** 3*y_2*yx2*yx7+c_2*c_6*y_0 ** 2*yx2*yx15+2*c_2*c_6 ** 2*y_0*yx2*yx15-c_2*c_6 ** 2*y_2*yx2*yx17-c_2*c_6*y_0*y_2*yx2*yx17+c_2*c_6*y_0 ** 2*y_2*yx2*yx7+2*c_2*c_6 ** 2*y_0*y_2*yx2*yx7)/(c_6+y_0) ** 5"],
            ["-(c_4*y_0 ** 5*yx6+c_2*y_0 ** 5*yx9+c_1*y_0 ** 5*yx13+c_4*y_0 ** 5*yx13-c_3*y_0 ** 5*yx15-c_4*y_0 ** 5*yx14+c_5*y_0 ** 5*yx13+c_4*c_6 ** 5*yx6+c_1*c_6 ** 5*yx13+c_4*c_6 ** 5*yx13-c_3*c_6 ** 5*yx15-c_4*c_6 ** 5*yx14+c_5*c_6 ** 5*yx13+5*c_4*c_6*y_0 ** 4*yx6+5*c_4*c_6 ** 4*y_0*yx6+4*c_2*c_6*y_0 ** 4*yx9+c_2*c_6 ** 4*y_0*yx9+5*c_1*c_6*y_0 ** 4*yx13+5*c_1*c_6 ** 4*y_0*yx13+c_2*c_6 ** 4*y_2*yx13+5*c_4*c_6*y_0 ** 4*yx13+5*c_4*c_6 ** 4*y_0*yx13-5*c_3*c_6*y_0 ** 4*yx15-5*c_3*c_6 ** 4*y_0*yx15-5*c_4*c_6*y_0 ** 4*yx14-5*c_4*c_6 ** 4*y_0*yx14+5*c_5*c_6*y_0 ** 4*yx13+5*c_5*c_6 ** 4*y_0*yx13-c_2*c_6 ** 4*yx3*yx5+c_2*c_6 ** 3*yx3*yx15+10*c_4*c_6 ** 2*y_0 ** 3*yx6+10*c_4*c_6 ** 3*y_0 ** 2*yx6+6*c_2*c_6 ** 2*y_0 ** 3*yx9+4*c_2*c_6 ** 3*y_0 ** 2*yx9+10*c_1*c_6 ** 2*y_0 ** 3*yx13+10*c_1*c_6 ** 3*y_0 ** 2*yx13+10*c_4*c_6 ** 2*y_0 ** 3*yx13+10*c_4*c_6 ** 3*y_0 ** 2*yx13-10*c_3*c_6 ** 2*y_0 ** 3*yx15-10*c_3*c_6 ** 3*y_0 ** 2*yx15-10*c_4*c_6 ** 2*y_0 ** 3*yx14-10*c_4*c_6 ** 3*y_0 ** 2*yx14+10*c_5*c_6 ** 2*y_0 ** 3*yx13+10*c_5*c_6 ** 3*y_0 ** 2*yx13+3*c_2*c_6 ** 2*y_0 ** 2*y_2*yx13-3*c_2*c_6 ** 2*y_0 ** 2*yx3*yx5+c_2*c_6*y_0 ** 3*y_2*yx13+3*c_2*c_6 ** 3*y_0*y_2*yx13-c_2*c_6*y_0 ** 3*yx3*yx5-3*c_2*c_6 ** 3*y_0*yx3*yx5+3*c_2*c_6*y_2*yx3*yx7 ** 2+c_2*c_6 ** 3*y_2*yx3*yx7+c_2*c_6*y_0 ** 2*yx3*yx15+2*c_2*c_6 ** 2*y_0*yx3*yx15-c_2*c_6 ** 2*y_2*yx3*yx17-c_2*c_6*y_0*y_2*yx3*yx17+c_2*c_6*y_0 ** 2*y_2*yx3*yx7+2*c_2*c_6 ** 2*y_0*y_2*yx3*yx7)/(c_6+y_0) ** 5"],
            ["-(c_2*y_0 ** 5*yx10-c_4*y_0 ** 5*yx6-c_3*y_0 ** 5*yx7+c_1*y_0 ** 5*yx14+2*c_4*y_0 ** 5*yx14-2*c_3*y_0 ** 5*yx16-c_3*c_6 ** 5*yx7-c_4*c_6 ** 5*yx6+c_1*c_6 ** 5*yx14+2*c_4*c_6 ** 5*yx14-2*c_3*c_6 ** 5*yx16-5*c_3*c_6*y_0 ** 4*yx7-5*c_3*c_6 ** 4*y_0*yx7-5*c_4*c_6*y_0 ** 4*yx6-5*c_4*c_6 ** 4*y_0*yx6+4*c_2*c_6*y_0 ** 4*yx10+c_2*c_6 ** 4*y_0*yx10+5*c_1*c_6*y_0 ** 4*yx14+5*c_1*c_6 ** 4*y_0*yx14+c_2*c_6 ** 4*y_2*yx14+10*c_4*c_6*y_0 ** 4*yx14+10*c_4*c_6 ** 4*y_0*yx14-10*c_3*c_6*y_0 ** 4*yx16-10*c_3*c_6 ** 4*y_0*yx16-c_2*c_6 ** 4*yx4*yx5+c_2*c_6 ** 3*yx4*yx15-10*c_3*c_6 ** 2*y_0 ** 3*yx7-10*c_3*c_6 ** 3*y_0 ** 2*yx7-10*c_4*c_6 ** 2*y_0 ** 3*yx6-10*c_4*c_6 ** 3*y_0 ** 2*yx6+6*c_2*c_6 ** 2*y_0 ** 3*yx10+4*c_2*c_6 ** 3*y_0 ** 2*yx10+10*c_1*c_6 ** 2*y_0 ** 3*yx14+10*c_1*c_6 ** 3*y_0 ** 2*yx14+20*c_4*c_6 ** 2*y_0 ** 3*yx14+20*c_4*c_6 ** 3*y_0 ** 2*yx14-20*c_3*c_6 ** 2*y_0 ** 3*yx16-20*c_3*c_6 ** 3*y_0 ** 2*yx16+3*c_2*c_6 ** 2*y_0 ** 2*y_2*yx14-3*c_2*c_6 ** 2*y_0 ** 2*yx4*yx5+c_2*c_6*y_0 ** 3*y_2*yx14+3*c_2*c_6 ** 3*y_0*y_2*yx14-c_2*c_6*y_0 ** 3*yx4*yx5-3*c_2*c_6 ** 3*y_0*yx4*yx5+3*c_2*c_6*y_2*yx4*yx7 ** 2+c_2*c_6 ** 3*y_2*yx4*yx7+c_2*c_6*y_0 ** 2*yx4*yx15+2*c_2*c_6 ** 2*y_0*yx4*yx15-c_2*c_6 ** 2*y_2*yx4*yx17-c_2*c_6*y_0*y_2*yx4*yx17+c_2*c_6*y_0 ** 2*y_2*yx4*yx7+2*c_2*c_6 ** 2*y_0*y_2*yx4*yx7)/(c_6+y_0) ** 5"],
            ["(c_2*y_0 ** 5*yx2+c_1*y_0 ** 5*yx5-2*c_2*y_0 ** 5*yx12-2*c_1*y_0 ** 5*yx15+c_4*y_0 ** 5*yx16-c_5*y_0 ** 5*yx15+2*c_2*c_6 ** 4*yx5 ** 2+c_1*c_6 ** 5*yx5+c_2*c_6 ** 4*yx12-2*c_1*c_6 ** 5*yx15+c_4*c_6 ** 5*yx16-c_5*c_6 ** 5*yx15+6*c_2*c_6 ** 2*y_0 ** 2*yx5 ** 2+4*c_2*c_6*y_0 ** 4*yx2+c_2*c_6 ** 4*y_0*yx2+5*c_1*c_6*y_0 ** 4*yx5+5*c_1*c_6 ** 4*y_0*yx5+c_2*c_6 ** 4*y_2*yx5+c_2*c_6*y_0 ** 3*yx12+3*c_2*c_6 ** 3*y_0*yx12-8*c_2*c_6*y_0 ** 4*yx12-2*c_2*c_6 ** 4*y_0*yx12-10*c_1*c_6*y_0 ** 4*yx15-10*c_1*c_6 ** 4*y_0*yx15-c_2*c_6 ** 3*y_2*yx15-2*c_2*c_6 ** 4*y_2*yx15+5*c_4*c_6*y_0 ** 4*yx16+5*c_4*c_6 ** 4*y_0*yx16-5*c_5*c_6*y_0 ** 4*yx15-5*c_5*c_6 ** 4*y_0*yx15-2*c_2*c_6 ** 3*yx5*yx15+6*c_2*c_6 ** 2*y_0 ** 3*yx2+4*c_2*c_6 ** 3*y_0 ** 2*yx2+10*c_1*c_6 ** 2*y_0 ** 3*yx5+10*c_1*c_6 ** 3*y_0 ** 2*yx5+2*c_2*c_6*y_0 ** 3*yx5 ** 2+6*c_2*c_6 ** 3*y_0*yx5 ** 2+3*c_2*c_6 ** 2*y_0 ** 2*yx12-12*c_2*c_6 ** 2*y_0 ** 3*yx12-8*c_2*c_6 ** 3*y_0 ** 2*yx12-20*c_1*c_6 ** 2*y_0 ** 3*yx15-20*c_1*c_6 ** 3*y_0 ** 2*yx15+10*c_4*c_6 ** 2*y_0 ** 3*yx16+10*c_4*c_6 ** 3*y_0 ** 2*yx16-10*c_5*c_6 ** 2*y_0 ** 3*yx15-10*c_5*c_6 ** 3*y_0 ** 2*yx15+3*c_2*c_6 ** 2*y_0 ** 2*y_2*yx5-6*c_2*c_6 ** 2*y_0 ** 2*y_2*yx15+c_2*c_6*y_0 ** 3*y_2*yx5+3*c_2*c_6 ** 3*y_0*y_2*yx5-c_2*c_6*y_0 ** 2*y_2*yx15-2*c_2*c_6 ** 2*y_0*y_2*yx15-2*c_2*c_6*y_0 ** 3*y_2*yx15-6*c_2*c_6 ** 3*y_0*y_2*yx15-6*c_2*c_6*y_2*yx5*yx7 ** 2-2*c_2*c_6 ** 3*y_2*yx5*yx7-2*c_2*c_6*y_0 ** 2*yx5*yx15-4*c_2*c_6 ** 2*y_0*yx5*yx15+2*c_2*c_6 ** 2*y_2*yx5*yx17+2*c_2*c_6*y_0*y_2*yx5*yx17-2*c_2*c_6*y_0 ** 2*y_2*yx5*yx7-4*c_2*c_6 ** 2*y_0*y_2*yx5*yx7)/(c_6+y_0) ** 5"],
            ["(c_2*y_0 ** 5*yx3+c_1*y_0 ** 5*yx6-2*c_2*y_0 ** 5*yx13-2*c_1*y_0 ** 5*yx16+c_3*y_0 ** 5*yx17-c_4*y_0 ** 5*yx16+c_1*c_6 ** 5*yx6+c_2*c_6 ** 4*yx13-2*c_1*c_6 ** 5*yx16+c_3*c_6 ** 5*yx17-c_4*c_6 ** 5*yx16+4*c_2*c_6*y_0 ** 4*yx3+c_2*c_6 ** 4*y_0*yx3+5*c_1*c_6*y_0 ** 4*yx6+5*c_1*c_6 ** 4*y_0*yx6+c_2*c_6 ** 4*y_2*yx6+c_2*c_6*y_0 ** 3*yx13+3*c_2*c_6 ** 3*y_0*yx13-8*c_2*c_6*y_0 ** 4*yx13-2*c_2*c_6 ** 4*y_0*yx13-10*c_1*c_6*y_0 ** 4*yx16-10*c_1*c_6 ** 4*y_0*yx16-c_2*c_6 ** 3*y_2*yx16-2*c_2*c_6 ** 4*y_2*yx16+5*c_3*c_6*y_0 ** 4*yx17+5*c_3*c_6 ** 4*y_0*yx17-5*c_4*c_6*y_0 ** 4*yx16-5*c_4*c_6 ** 4*y_0*yx16+2*c_2*c_6 ** 4*yx5*yx6-2*c_2*c_6 ** 3*yx6*yx15+6*c_2*c_6 ** 2*y_0 ** 3*yx3+4*c_2*c_6 ** 3*y_0 ** 2*yx3+10*c_1*c_6 ** 2*y_0 ** 3*yx6+10*c_1*c_6 ** 3*y_0 ** 2*yx6+3*c_2*c_6 ** 2*y_0 ** 2*yx13-12*c_2*c_6 ** 2*y_0 ** 3*yx13-8*c_2*c_6 ** 3*y_0 ** 2*yx13-20*c_1*c_6 ** 2*y_0 ** 3*yx16-20*c_1*c_6 ** 3*y_0 ** 2*yx16+10*c_3*c_6 ** 2*y_0 ** 3*yx17+10*c_3*c_6 ** 3*y_0 ** 2*yx17-10*c_4*c_6 ** 2*y_0 ** 3*yx16-10*c_4*c_6 ** 3*y_0 ** 2*yx16+3*c_2*c_6 ** 2*y_0 ** 2*y_2*yx6-6*c_2*c_6 ** 2*y_0 ** 2*y_2*yx16+6*c_2*c_6 ** 2*y_0 ** 2*yx5*yx6+c_2*c_6*y_0 ** 3*y_2*yx6+3*c_2*c_6 ** 3*y_0*y_2*yx6-c_2*c_6*y_0 ** 2*y_2*yx16-2*c_2*c_6 ** 2*y_0*y_2*yx16-2*c_2*c_6*y_0 ** 3*y_2*yx16-6*c_2*c_6 ** 3*y_0*y_2*yx16+2*c_2*c_6*y_0 ** 3*yx5*yx6+6*c_2*c_6 ** 3*y_0*yx5*yx6-6*c_2*c_6*y_2*yx6*yx7 ** 2-2*c_2*c_6 ** 3*y_2*yx6*yx7-2*c_2*c_6*y_0 ** 2*yx6*yx15-4*c_2*c_6 ** 2*y_0*yx6*yx15+2*c_2*c_6 ** 2*y_2*yx6*yx17+2*c_2*c_6*y_0*y_2*yx6*yx17-2*c_2*c_6*y_0 ** 2*y_2*yx6*yx7-4*c_2*c_6 ** 2*y_0*y_2*yx6*yx7)/(c_6+y_0) ** 5"],
            ["(c_0*c_6 ** 5+c_0*y_0 ** 5-c_1*y_0 ** 6-c_2*y_0 ** 5*y_2+3*c_2*y_0 ** 5*yx5+3*c_1*y_0 ** 5*yx7-3*c_2*y_0 ** 5*yx15-3*c_1*y_0 ** 5*yx17+10*c_0*c_6 ** 2*y_0 ** 3+10*c_0*c_6 ** 3*y_0 ** 2-10*c_1*c_6 ** 2*y_0 ** 4-10*c_1*c_6 ** 3*y_0 ** 3-5*c_1*c_6 ** 4*y_0 ** 2+5*c_0*c_6*y_0 ** 4+5*c_0*c_6 ** 4*y_0-5*c_1*c_6*y_0 ** 5-c_1*c_6 ** 5*y_0-c_2*c_6 ** 4*yx5+3*c_1*c_6 ** 5*yx7+c_2*c_6 ** 3*yx15+3*c_2*c_6 ** 4*yx15-3*c_1*c_6 ** 5*yx17-4*c_2*c_6*y_0 ** 4*y_2-c_2*c_6 ** 4*y_0*y_2-c_2*c_6*y_0 ** 3*yx5-3*c_2*c_6 ** 3*y_0*yx5+12*c_2*c_6*y_0 ** 4*yx5+3*c_2*c_6 ** 4*y_0*yx5+15*c_1*c_6*y_0 ** 4*yx7+15*c_1*c_6 ** 4*y_0*yx7+3*c_2*c_6*y_2*yx7 ** 2-9*c_2*c_6*y_2*yx7 ** 3+c_2*c_6 ** 3*y_2*yx7+3*c_2*c_6 ** 4*y_2*yx7+c_2*c_6*y_0 ** 2*yx15+2*c_2*c_6 ** 2*y_0*yx15+3*c_2*c_6*y_0 ** 3*yx15+9*c_2*c_6 ** 3*y_0*yx15-12*c_2*c_6*y_0 ** 4*yx15-3*c_2*c_6 ** 4*y_0*yx15-15*c_1*c_6*y_0 ** 4*yx17-15*c_1*c_6 ** 4*y_0*yx17-c_2*c_6 ** 2*y_2*yx17-3*c_2*c_6 ** 3*y_2*yx17-3*c_2*c_6 ** 4*y_2*yx17+3*c_2*c_6 ** 4*yx5*yx7-3*c_2*c_6 ** 3*yx7*yx15-6*c_2*c_6 ** 2*y_0 ** 3*y_2-4*c_2*c_6 ** 3*y_0 ** 2*y_2-3*c_2*c_6 ** 2*y_0 ** 2*yx5+18*c_2*c_6 ** 2*y_0 ** 3*yx5+12*c_2*c_6 ** 3*y_0 ** 2*yx5+30*c_1*c_6 ** 2*y_0 ** 3*yx7+30*c_1*c_6 ** 3*y_0 ** 2*yx7+9*c_2*c_6 ** 2*y_2*yx7 ** 2+6*c_2*c_6 ** 3*y_2*yx7 ** 2+9*c_2*c_6 ** 2*y_0 ** 2*yx15-18*c_2*c_6 ** 2*y_0 ** 3*yx15-12*c_2*c_6 ** 3*y_0 ** 2*yx15-30*c_1*c_6 ** 2*y_0 ** 3*yx17-30*c_1*c_6 ** 3*y_0 ** 2*yx17+6*c_2*c_6*y_0 ** 2*y_2*yx7 ** 2+12*c_2*c_6 ** 2*y_0*y_2*yx7 ** 2+9*c_2*c_6 ** 2*y_0 ** 2*y_2*yx7-9*c_2*c_6 ** 2*y_0 ** 2*y_2*yx17+9*c_2*c_6 ** 2*y_0 ** 2*yx5*yx7-c_2*c_6*y_0*y_2*yx17+9*c_2*c_6*y_0*y_2*yx7 ** 2+c_2*c_6*y_0 ** 2*y_2*yx7+2*c_2*c_6 ** 2*y_0*y_2*yx7+3*c_2*c_6*y_0 ** 3*y_2*yx7+9*c_2*c_6 ** 3*y_0*y_2*yx7-3*c_2*c_6*y_0 ** 2*y_2*yx17-6*c_2*c_6 ** 2*y_0*y_2*yx17-3*c_2*c_6*y_0 ** 3*y_2*yx17-9*c_2*c_6 ** 3*y_0*y_2*yx17+3*c_2*c_6*y_0 ** 3*yx5*yx7+9*c_2*c_6 ** 3*y_0*yx5*yx7-3*c_2*c_6*y_0 ** 2*yx7*yx15-6*c_2*c_6 ** 2*y_0*yx7*yx15+3*c_2*c_6 ** 2*y_2*yx7*yx17+3*c_2*c_6*y_0*y_2*yx7*yx17)/(c_6+y_0) ** 5"]
        ])


        # univariate != multivariate
        closer = NormalCloser(n_moments, multivariate=False)
        answer, lhs_answer = closer.parametric_closer_wrapper(mfk, central_from_raw_exprs, species, k_counter, prob_moments)

        #sympy.print_python(answer)

        self.assertTrue(sympy_expressions_equal(answer, expected))


class TestNormalCloser(unittest.TestCase):

    __problem_moments = [
            Moment([1, 0, 0], symbol=sympy.Symbol("y_0")),
            Moment([0, 1, 0], symbol=sympy.Symbol("y_1")),
            Moment([0, 0, 1], symbol=sympy.Symbol("y_2")),
            Moment([0, 0, 2], symbol=sympy.Symbol("yx2")),
            Moment([0, 1, 1], symbol=sympy.Symbol("yx3")),
            Moment([0, 2, 0], symbol=sympy.Symbol("yx4")),
            Moment([1, 0, 1], symbol=sympy.Symbol("yx5")),
            Moment([1, 1, 0], symbol=sympy.Symbol("yx6")),
            Moment([2, 0, 0], symbol=sympy.Symbol("yx7")),
            Moment([0, 0, 3], symbol=sympy.Symbol("yx8")),
            Moment([0, 1, 2], symbol=sympy.Symbol("yx9")),
            Moment([0, 2, 1], symbol=sympy.Symbol("yx10")),
            Moment([0, 3, 0], symbol=sympy.Symbol("yx11")),
            Moment([1, 0, 2], symbol=sympy.Symbol("yx12")),
            Moment([1, 1, 1], symbol=sympy.Symbol("yx13")),
            Moment([1, 2, 0], symbol=sympy.Symbol("yx14")),
            Moment([2, 0, 1], symbol=sympy.Symbol("yx15")),
            Moment([2, 1, 0], symbol=sympy.Symbol("yx16")),
            Moment([3, 0, 0], symbol=sympy.Symbol("yx17"))
        ]

    def test_normal_closer_wrapper(self):

        mfk = to_sympy_matrix([
                    ["-(c_2*c_6*y_2*yx17*(c_6+y_0)**6+c_2*c_6*yx5*(c_6+y_0)**8+c_2*y_0*y_2*(c_6+y_0)**9-(c_0-c_1*y_0)*(c_6+y_0)**10-(c_6+y_0)**7*(c_2*c_6*y_2*yx7+c_2*c_6*yx15))/(c_6+y_0)**10"],
                    ["c_3*y_0-c_4*y_1"],
                    ["c_4*y_1-c_5*y_2"],
                    ["c_4*y_1+2*c_4*yx3+c_5*y_2-2*c_5*yx2"],
                    ["c_3*yx5-c_4*y_1+c_4*yx4-yx3*(c_4+c_5)"],
                    ["c_3*y_0+2*c_3*yx6+c_4*y_1-2*c_4*yx4"],
                    ["c_2*c_6*y_2*yx15/(c_6**3+3*c_6**2*y_0+3*c_6*y_0**2+y_0**3)-c_2*y_0*yx2/(c_6+y_0)+c_2*yx12*(y_0/(c_6+y_0)-1)/(c_6+y_0)+c_4*yx6-yx5*(-c_2*c_6*y_2-2*c_2*y_0*y_2+2*c_2*y_2*(c_6+y_0)+(c_1+c_5)*(c_6+y_0)**2)/(c_6+y_0)**2"],
                    ["-(c_2*c_6*yx13*(c_6+y_0)**4+c_2*y_0*yx3*(c_6+y_0)**5-c_3*yx7*(c_6+y_0)**6-(c_6+y_0)**3*(c_2*c_6*y_2*yx16-yx6*(-c_2*y_0*y_2*(c_6+y_0)+c_2*y_2*(c_6+y_0)**2+(c_1+c_4)*(c_6+y_0)**3)))/(c_6+y_0)**6"],
                    ["c_2*c_6*y_2*yx17*(2*c_6+2*y_0+1)/(c_6**4+4*c_6**3*y_0+6*c_6**2*y_0**2+4*c_6*y_0**3+y_0**4)-c_2*c_6*yx15*(-2*c_6-2*y_0-1)/(-c_6**3-3*c_6**2*y_0-3*c_6*y_0**2-y_0**3)+c_2*yx5*(-2*c_6*y_0+c_6-2*y_0**2)/(c_6**2+2*c_6*y_0+y_0**2)+yx7*(2*c_1*c_6**3+6*c_1*c_6**2*y_0+6*c_1*c_6*y_0**2+2*c_1*y_0**3+2*c_2*c_6**2*y_2+2*c_2*c_6*y_0*y_2+c_2*c_6*y_2)/(-c_6**3-3*c_6**2*y_0-3*c_6*y_0**2-y_0**3)+(c_0*c_6+c_0*y_0+c_1*c_6*y_0+c_1*y_0**2+c_2*y_0*y_2)/(c_6+y_0)"],
                    ["c_4*y_1+3*c_4*yx3+3*c_4*yx9-c_5*y_2+3*c_5*yx2-3*c_5*yx8"],
                    ["c_3*yx12-c_4*y_1+2*c_4*yx10-2*c_4*yx3+c_4*yx4-c_4*yx9+c_5*yx3-2*c_5*yx9"],
                    ["2*c_3*yx13+c_3*yx5+c_4*y_1-2*c_4*yx10+c_4*yx11+c_4*yx3-2*c_4*yx4-c_5*yx10"],
                    ["c_3*y_0+3*c_3*yx14+3*c_3*yx6-c_4*y_1-3*c_4*yx11+3*c_4*yx4"],
                    ["c_2*c_6*y_2*yx17*yx2/(c_6**4+4*c_6**3*y_0+6*c_6**2*y_0**2+4*c_6*y_0**3+y_0**4)-c_2*c_6*y_2*yx2*yx7/(c_6**3+3*c_6**2*y_0+3*c_6*y_0**2+y_0**3)-c_2*c_6*yx15*yx2/(c_6**3+3*c_6**2*y_0+3*c_6*y_0**2+y_0**3)-c_2*y_0*yx8/(c_6+y_0)+2*c_4*yx13+c_4*yx6-yx12*(-2*c_2*c_6*y_2-3*c_2*y_0*y_2+3*c_2*y_2*(c_6+y_0)+(c_1+2*c_5)*(c_6+y_0)**2)/(c_6+y_0)**2-yx2*(c_2*y_0*y_2-(c_0-c_1*y_0)*(c_6+y_0))/(c_6+y_0)+yx5*(c_2*c_6*yx2+2*c_4*c_6**2*y_1+4*c_4*c_6*y_0*y_1+2*c_4*y_0**2*y_1-2*c_5*c_6**2*y_2+c_5*c_6**2-4*c_5*c_6*y_0*y_2+2*c_5*c_6*y_0-2*c_5*y_0**2*y_2+c_5*y_0**2)/(c_6**2+2*c_6*y_0+y_0**2)+(-c_0*c_6*yx2-c_0*y_0*yx2+c_1*c_6*y_0*yx2+c_1*y_0**2*yx2+c_2*y_0*y_2*yx2-2*c_4*c_6*y_1*yx5-2*c_4*y_0*y_1*yx5+2*c_5*c_6*y_2*yx5+2*c_5*y_0*y_2*yx5)/(c_6+y_0)"],
                    ["c_2*c_6*y_2*yx17*yx3/(c_6**4+4*c_6**3*y_0+6*c_6**2*y_0**2+4*c_6*y_0**3+y_0**4)-c_2*c_6*y_2*yx3*yx7/(c_6**3+3*c_6**2*y_0+3*c_6*y_0**2+y_0**3)-c_2*y_0*yx9/(c_6+y_0)+c_4*yx14-yx13*(-c_2*c_6*y_2-2*c_2*y_0*y_2+2*c_2*y_2*(c_6+y_0)+(c_6+y_0)**2*(c_1+c_4+c_5))/(c_6+y_0)**2+yx15*(-c_2*c_6*yx3+c_3*c_6**3+3*c_3*c_6**2*y_0+3*c_3*c_6*y_0**2+c_3*y_0**3)/(c_6**3+3*c_6**2*y_0+3*c_6*y_0**2+y_0**3)-yx3*(-c_0*c_6-c_0*y_0+c_1*c_6*y_0+c_1*y_0**2+c_2*y_0*y_2)/(c_6+y_0)+yx5*(c_2*c_6*yx3+c_3*c_6**2*y_0+2*c_3*c_6*y_0**2+c_3*y_0**3-c_4*c_6**2*y_1-2*c_4*c_6*y_0*y_1-c_4*y_0**2*y_1)/(c_6**2+2*c_6*y_0+y_0**2)-yx6*(-c_4*y_1+c_4+c_5*y_2)+(-c_0*c_6*yx3-c_0*y_0*yx3+c_1*c_6*y_0*yx3+c_1*y_0**2*yx3+c_2*y_0*y_2*yx3-c_3*c_6*y_0*yx5-c_3*y_0**2*yx5+c_4*c_6*y_1*yx5-c_4*c_6*y_1*yx6+c_4*y_0*y_1*yx5-c_4*y_0*y_1*yx6+c_5*c_6*y_2*yx6+c_5*y_0*y_2*yx6)/(c_6+y_0)"],
                    ["c_2*c_6*y_2*yx17*yx4/(c_6**4+4*c_6**3*y_0+6*c_6**2*y_0**2+4*c_6*y_0**3+y_0**4)-c_2*c_6*yx15*yx4/(c_6**3+3*c_6**2*y_0+3*c_6*y_0**2+y_0**3)+c_2*c_6*yx4*yx5/(c_6**2+2*c_6*y_0+y_0**2)-c_2*y_0*yx10/(c_6+y_0)+2*c_3*yx16-yx14*(-c_2*y_0*y_2+c_2*y_2*(c_6+y_0)+(c_1+2*c_4)*(c_6+y_0)**2)/(c_6+y_0)**2-yx4*(c_2*y_0*y_2-(c_0-c_1*y_0)*(c_6+y_0))/(c_6+y_0)+yx6*(2*c_3*y_0-2*c_4*y_1+c_4)+yx7*(-c_2*c_6*y_2*yx4+c_3*c_6**3+3*c_3*c_6**2*y_0+3*c_3*c_6*y_0**2+c_3*y_0**3)/(c_6**3+3*c_6**2*y_0+3*c_6*y_0**2+y_0**3)+(-c_0*c_6*yx4-c_0*y_0*yx4+c_1*c_6*y_0*yx4+c_1*y_0**2*yx4+c_2*y_0*y_2*yx4-2*c_3*c_6*y_0*yx6-2*c_3*y_0**2*yx6+2*c_4*c_6*y_1*yx6+2*c_4*y_0*y_1*yx6)/(c_6+y_0)"],
                    ["2*c_2*c_6*y_2*yx17*yx5/(c_6**4+4*c_6**3*y_0+6*c_6**2*y_0**2+4*c_6*y_0**3+y_0**4)+c_2*y_0*yx2/(c_6+y_0)-c_2*yx12*(2*c_6*y_0-c_6+2*y_0**2)/(c_6**2+2*c_6*y_0+y_0**2)+c_4*yx16-yx15*(2*c_1*c_6**3+6*c_1*c_6**2*y_0+6*c_1*c_6*y_0**2+2*c_1*y_0**3+2*c_2*c_6**2*y_2+2*c_2*c_6*y_0*y_2+c_2*c_6*y_2+2*c_2*c_6*yx5+c_5*c_6**3+3*c_5*c_6**2*y_0+3*c_5*c_6*y_0**2+c_5*y_0**3)/(c_6**3+3*c_6**2*y_0+3*c_6*y_0**2+y_0**3)+yx5*(2*c_0*c_6**2+4*c_0*c_6*y_0+2*c_0*y_0**2-2*c_1*c_6**2*y_0+c_1*c_6**2-4*c_1*c_6*y_0**2+2*c_1*c_6*y_0-2*c_1*y_0**3+c_1*y_0**2-2*c_2*c_6*y_0*y_2+c_2*c_6*y_2+2*c_2*c_6*yx5-2*c_2*y_0**2*y_2)/(c_6**2+2*c_6*y_0+y_0**2)-yx7*(2*c_2*c_6*y_2*yx5-c_4*c_6**3*y_1-3*c_4*c_6**2*y_0*y_1-3*c_4*c_6*y_0**2*y_1-c_4*y_0**3*y_1+c_5*c_6**3*y_2+3*c_5*c_6**2*y_0*y_2+3*c_5*c_6*y_0**2*y_2+c_5*y_0**3*y_2)/(c_6**3+3*c_6**2*y_0+3*c_6*y_0**2+y_0**3)+(-2*c_0*c_6*yx5-2*c_0*y_0*yx5+2*c_1*c_6*y_0*yx5+2*c_1*y_0**2*yx5+2*c_2*y_0*y_2*yx5-c_4*c_6*y_1*yx7-c_4*y_0*y_1*yx7+c_5*c_6*y_2*yx7+c_5*y_0*y_2*yx7)/(c_6+y_0)"],
                    ["-2*c_2*c_6*yx15*yx6/(c_6**3+3*c_6**2*y_0+3*c_6*y_0**2+y_0**3)+2*c_2*c_6*yx5*yx6/(c_6**2+2*c_6*y_0+y_0**2)+c_2*y_0*yx3/(c_6+y_0)-c_2*yx13*(2*c_6*y_0-c_6+2*y_0**2)/(c_6**2+2*c_6*y_0+y_0**2)-yx16*(2*c_2*c_6*y_0*y_2+2*c_2*y_0**2*y_2-c_2*y_0*y_2+2*c_2*y_2*(c_6+y_0)**2+(2*c_1+c_4)*(c_6+y_0)**3-(c_6+y_0)*(4*c_2*y_0*y_2-c_2*y_2))/(c_6+y_0)**3+yx17*(2*c_2*c_6*y_2*yx6+c_3*c_6**4+4*c_3*c_6**3*y_0+6*c_3*c_6**2*y_0**2+4*c_3*c_6*y_0**3+c_3*y_0**4)/(c_6**4+4*c_6**3*y_0+6*c_6**2*y_0**2+4*c_6*y_0**3+y_0**4)+yx6*(2*c_0-4*c_1*y_0+c_1+2*c_2*y_0**2*y_2/(c_6+y_0)**2-4*c_2*y_0*y_2/(c_6+y_0)-c_2*y_0*y_2/(c_6+y_0)**2+c_2*y_2/(c_6+y_0)-2*c_4*y_0+2*y_0*(c_1-c_2*y_0*y_2/(c_6+y_0)**2+c_2*y_2/(c_6+y_0)+c_4))-yx7*(2*c_2*c_6*y_2*yx6-c_3*c_6**3*y_0-3*c_3*c_6**2*y_0**2-3*c_3*c_6*y_0**3-c_3*y_0**4+c_4*c_6**3*y_1+3*c_4*c_6**2*y_0*y_1+3*c_4*c_6*y_0**2*y_1+c_4*y_0**3*y_1)/(c_6**3+3*c_6**2*y_0+3*c_6*y_0**2+y_0**3)+(-2*c_0*c_6*yx6-2*c_0*y_0*yx6+2*c_1*c_6*y_0*yx6+2*c_1*y_0**2*yx6+2*c_2*y_0*y_2*yx6-c_3*c_6*y_0*yx7-c_3*y_0**2*yx7+c_4*c_6*y_1*yx7+c_4*y_0*y_1*yx7)/(c_6+y_0)"],
                    ["-(-c_2*yx5*(c_6+y_0)*(c_6**3+3*c_6**2*y_0+3*c_6*y_0**2+y_0**3)*(3*c_6*y_0+3*c_6*yx7-c_6+3*y_0**2)*(c_6**4+4*c_6**3*y_0+6*c_6**2*y_0**2+4*c_6*y_0**3+y_0**4)+yx17*(c_6+y_0)*(c_6**2+2*c_6*y_0+y_0**2)*(c_6**3+3*c_6**2*y_0+3*c_6*y_0**2+y_0**3)*(3*c_1*c_6**4+12*c_1*c_6**3*y_0+18*c_1*c_6**2*y_0**2+12*c_1*c_6*y_0**3+3*c_1*y_0**4+3*c_2*c_6**3*y_2+6*c_2*c_6**2*y_0*y_2+3*c_2*c_6**2*y_2+3*c_2*c_6*y_0**2*y_2+3*c_2*c_6*y_0*y_2-3*c_2*c_6*y_2*yx7+c_2*c_6*y_2)-(c_6+y_0)*(-c_2*yx15*(3*c_6**2*y_0-3*c_6**2+6*c_6*y_0**2-3*c_6*y_0+3*c_6*yx7-c_6+3*y_0**3)+yx7*(3*c_0*c_6**3+9*c_0*c_6**2*y_0+9*c_0*c_6*y_0**2+3*c_0*y_0**3-3*c_1*c_6**3*y_0+3*c_1*c_6**3-9*c_1*c_6**2*y_0**2+9*c_1*c_6**2*y_0-9*c_1*c_6*y_0**3+9*c_1*c_6*y_0**2-3*c_1*y_0**4+3*c_1*y_0**3-3*c_2*c_6**2*y_0*y_2+3*c_2*c_6**2*y_2-6*c_2*c_6*y_0**2*y_2+3*c_2*c_6*y_0*y_2-3*c_2*c_6*y_2*yx7+c_2*c_6*y_2-3*c_2*y_0**3*y_2))*(c_6**2+2*c_6*y_0+y_0**2)*(c_6**4+4*c_6**3*y_0+6*c_6**2*y_0**2+4*c_6*y_0**3+y_0**4)-(c_6**2+2*c_6*y_0+y_0**2)*(c_6**3+3*c_6**2*y_0+3*c_6*y_0**2+y_0**3)*(c_6**4+4*c_6**3*y_0+6*c_6**2*y_0**2+4*c_6*y_0**3+y_0**4)*(-3*c_0*c_6*yx7+c_0*c_6-3*c_0*y_0*yx7+c_0*y_0+3*c_1*c_6*y_0*yx7-c_1*c_6*y_0+3*c_1*y_0**2*yx7-c_1*y_0**2+3*c_2*y_0*y_2*yx7-c_2*y_0*y_2))/((c_6+y_0)*(c_6**2+2*c_6*y_0+y_0**2)*(c_6**3+3*c_6**2*y_0+3*c_6*y_0**2+y_0**3)*(c_6**4+4*c_6**3*y_0+6*c_6**2*y_0**2+4*c_6*y_0**3+y_0**4))"]
            ])
        central_from_raw_exprs = to_sympy_matrix(
                    [["x_0_0_2-y_2**2"],
                    ["x_0_1_1-y_1*y_2"],
                    ["x_0_2_0-y_1**2"],
                    ["x_1_0_1-y_0*y_2"],
                    ["x_1_1_0-y_0*y_1"],
                    ["x_2_0_0-y_0**2"],
                    ["-3*x_0_0_2*y_2+x_0_0_3+2*y_2**3"],
                    ["-x_0_0_2*y_1-2*x_0_1_1*y_2+x_0_1_2+2*y_1*y_2**2"],
                    ["-2*x_0_1_1*y_1-x_0_2_0*y_2+x_0_2_1+2*y_1**2*y_2"],
                    ["-3*x_0_2_0*y_1+x_0_3_0+2*y_1**3"],
                    ["-x_0_0_2*y_0-2*x_1_0_1*y_2+x_1_0_2+2*y_0*y_2**2"],
                    ["-x_0_1_1*y_0-x_1_0_1*y_1-x_1_1_0*y_2+x_1_1_1+2*y_0*y_1*y_2"],
                    ["-x_0_2_0*y_0-2*x_1_1_0*y_1+x_1_2_0+2*y_0*y_1**2"],
                    ["-2*x_1_0_1*y_0-x_2_0_0*y_2+x_2_0_1+2*y_0**2*y_2"],
                    ["-2*x_1_1_0*y_0-x_2_0_0*y_1+x_2_1_0+2*y_0**2*y_1"],
                    ["-3*x_2_0_0*y_0+x_3_0_0+2*y_0**3"]
         ])


        k_counter = [
                    Moment([0, 0, 0], symbol=sympy.Integer(1)),
                    Moment([1, 0, 0], symbol=sympy.Symbol("y_0")),
                    Moment([0, 1, 0], symbol=sympy.Symbol("y_1")),
                    Moment([0, 0, 1], symbol=sympy.Symbol("y_2")),
                    Moment([0, 0, 2], symbol=sympy.Symbol("x_0_0_2")),
                    Moment([0, 1, 1], symbol=sympy.Symbol("x_0_1_1")),
                    Moment([0, 2, 0], symbol=sympy.Symbol("x_0_2_0")),
                    Moment([1, 0, 1], symbol=sympy.Symbol("x_1_0_1")),
                    Moment([1, 1, 0], symbol=sympy.Symbol("x_1_1_0")),
                    Moment([2, 0, 0], symbol=sympy.Symbol("x_2_0_0")),
                    Moment([0, 0, 3], symbol=sympy.Symbol("x_0_0_3")),
                    Moment([0, 1, 2], symbol=sympy.Symbol("x_0_1_2")),
                    Moment([0, 2, 1], symbol=sympy.Symbol("x_0_2_1")),
                    Moment([0, 3, 0], symbol=sympy.Symbol("x_0_3_0")),
                    Moment([1, 0, 2], symbol=sympy.Symbol("x_1_0_2")),
                    Moment([1, 1, 1], symbol=sympy.Symbol("x_1_1_1")),
                    Moment([1, 2, 0], symbol=sympy.Symbol("x_1_2_0")),
                    Moment([2, 0, 1], symbol=sympy.Symbol("x_2_0_1")),
                    Moment([2, 1, 0], symbol=sympy.Symbol("x_2_1_0")),
                    Moment([3, 0, 0], symbol=sympy.Symbol("x_3_0_0"))
                ]

        n_moments = 3
        species = to_sympy_matrix([["y_0"],["y_1"],["y_2"]])
        prob_moments = self.__problem_moments
        expected = to_sympy_matrix([
            ["c_0-c_1*y_0-(c_2*c_6*yx5)/(c_6+y_0) ** 2-(c_2*y_0*y_2)/(c_6+y_0)+(c_2*c_6*y_2*yx7)/(c_6+y_0) ** 3"],
            ["c_3*y_0-c_4*y_1"],
            ["c_4*y_1-c_5*y_2"],
            ["c_4*y_1+c_5*y_2+2*c_4*yx3-2*c_5*yx2"],
            ["c_3*yx5-c_4*yx3-c_4*y_1+c_4*yx4-c_5*yx3"],
            ["c_3*y_0+c_4*y_1-2*c_4*yx4+2*c_3*yx6"],
            ["c_4*yx6-c_1*yx5-c_5*yx5-(c_2*y_0*yx2)/(c_6+y_0)-(c_2*y_2*yx5)/(c_6+y_0)+(c_2*y_0*y_2*yx5)/(c_6+y_0) ** 2"],
            ["c_3*yx7-c_1*yx6-c_4*yx6-(c_2*y_0*yx3)/(c_6+y_0)-(c_2*y_2*yx6)/(c_6+y_0)+(c_2*y_0*y_2*yx6)/(c_6+y_0) ** 2"],
            ["(c_0*c_6 ** 3+c_0*y_0 ** 3+c_1*y_0 ** 4+c_2*y_0 ** 3*y_2-2*c_2*y_0 ** 3*yx5-2*c_1*y_0 ** 3*yx7+3*c_1*c_6 ** 2*y_0 ** 2+3*c_0*c_6*y_0 ** 2+3*c_0*c_6 ** 2*y_0+3*c_1*c_6*y_0 ** 3+c_1*c_6 ** 3*y_0+c_2*c_6 ** 2*yx5-2*c_1*c_6 ** 3*yx7+c_2*c_6*y_0*yx5-c_2*c_6*y_2*yx7+2*c_2*c_6*y_0 ** 2*y_2+c_2*c_6 ** 2*y_0*y_2-4*c_2*c_6*y_0 ** 2*yx5-2*c_2*c_6 ** 2*y_0*yx5-6*c_1*c_6*y_0 ** 2*yx7-6*c_1*c_6 ** 2*y_0*yx7-2*c_2*c_6 ** 2*y_2*yx7-2*c_2*c_6*y_0*y_2*yx7)/(c_6+y_0) ** 3"]
        ])
        closer = NormalCloser(n_moments, multivariate=True)
        answer, lhs_answer = closer.parametric_closer_wrapper(mfk, central_from_raw_exprs, species, k_counter, prob_moments)

        self.assertTrue(sympy_expressions_equal(answer, expected))

    def test_generate_partition(self):

        test_list_for_partition = [sympy.Symbol('A'),sympy.Symbol('B'),sympy.Symbol('C'),sympy.Symbol('D')]
        expected = [((sympy.Symbol('A'), sympy.Symbol('B')),
                     (sympy.Symbol('C'),sympy.Symbol('D'))),

                    ((sympy.Symbol('A'), sympy.Symbol('C')),
                     (sympy.Symbol('B'),sympy.Symbol('D'))),

                    ((sympy.Symbol('A'), sympy.Symbol('D')),
                     (sympy.Symbol('B'),sympy.Symbol('C')))]


        closer = NormalCloser(3, multivariate=True)
        answer = [p for p in closer.generate_partitions(test_list_for_partition)]

        self.assertEqual(answer, expected)

